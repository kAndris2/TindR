[{"/home/lara/TindR/tindr-react/src/index.js":"1","/home/lara/TindR/tindr-react/src/App.js":"2","/home/lara/TindR/tindr-react/src/reportWebVitals.js":"3","/home/lara/TindR/tindr-react/src/components/SideBar.js":"4","/home/lara/TindR/tindr-react/src/components/WelcomePage.js":"5"},{"size":547,"mtime":1606468490694,"results":"6","hashOfConfig":"7"},{"size":1074,"mtime":1606824784794,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1606467231072,"results":"9","hashOfConfig":"7"},{"size":890,"mtime":1606991132906,"results":"10","hashOfConfig":"7"},{"size":11698,"mtime":1606989386047,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"okqy49",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/home/lara/TindR/tindr-react/src/index.js",[],["25","26"],"/home/lara/TindR/tindr-react/src/App.js",["27"],"import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport WelcomePage from \"./components/WelcomePage\";\nimport SideBar from \"./components/SideBar\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      user: undefined\n    }\n\n    this.setUser = this.setUser.bind(this);\n    this.isLoggedIn = this. isLoggedIn.bind(this);\n  }\n\n  setUser(user) {\n    this.setState({user : user});\n  }\n\n  isLoggedIn() {\n    return this.state.user !== undefined;\n  }\n\n  render() {\n    return (\n      <>\n        <Router>\n          <Switch>\n\n            <Route exact path=\"/\">\n              {this.isLoggedIn() === false &&\n                <WelcomePage\n                  setUser={this.setUser}\n                ></WelcomePage>\n              }\n              {this.isLoggedIn() === true &&\n                <SideBar\n                  user={this.state.user}\n                ></SideBar>\n              }\n            </Route>\n\n          </Switch>\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","/home/lara/TindR/tindr-react/src/reportWebVitals.js",[],"/home/lara/TindR/tindr-react/src/components/SideBar.js",["28","29"],"/home/lara/TindR/tindr-react/src/components/WelcomePage.js",["30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47"],"import React, {Component} from 'react';\nimport { Helmet } from 'react-helmet';\nimport Swal from \"sweetalert2\";\nimport axios from 'axios';\nimport moment from \"moment\";\nimport Cookies from \"js-cookie\";\n\nclass WelcomePage extends Component {\n    constructor() {\n      super();\n\n      this.state = {\n        userName: undefined,\n        email: undefined,\n        phoneNumber: undefined,\n        password: undefined,\n        confirmPass: undefined,\n        birthDate: undefined,\n        passions: undefined\n      }\n\n      this.startLogin = this.startLogin.bind(this);\n      this.handleLogin = this.handleLogin.bind(this);\n      this.doLogin = this.doLogin.bind(this);\n      this.startRegister = this.startRegister.bind(this);\n      this.regEnterUsername = this.regEnterUsername.bind(this);\n      this.regEnterEmail = this.regEnterEmail.bind(this);\n      this.isValidEmail = this.isValidEmail.bind(this);\n      this.regEnterPhoneNumber = this.regEnterPhoneNumber.bind(this);\n      this.isValidPhoneNumber = this.isValidPhoneNumber.bind(this);\n      this.regEnterPassword = this.regEnterPassword.bind(this);\n      this.regEnterBirthdate = this.regEnterBirthdate.bind(this);\n      this.regEnterPassions = this.regEnterPassions.bind(this);\n      this.doRegistration = this.doRegistration.bind(this);\n      this.setCookie = this.setCookie.bind(this);\n    }\n\n    async startLogin() {\n      await this.handleLogin();\n    }\n\n    async handleLogin(error = \"\") {\n      const { value: formValues } = await Swal.fire({\n        title: 'Sign in',\n        html:\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>\\n\\n` : \"\"}` +\n          '<p>Enter your email address</p>' +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"email\">' +\n          '<p>Enter your email password</p>' +\n          '<input id=\"swal-input2\" class=\"swal2-input\" type=\"password\">',\n        focusConfirm: false,\n        confirmButtonText: `Sign in`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value,\n            document.getElementById('swal-input2').value\n          ]\n        }\n      })\n\n      if (formValues === undefined)\n        console.log(\"cancel login\")\n      else if (formValues[0] == \"\" || formValues[1] == \"\") {\n        this.handleLogin(\"You must be enter your username and your password!\");\n      }\n      else\n        this.doLogin(formValues[0], formValues[1]);\n    }\n\n    doLogin(email, password) {\n      axios.post(\"http://172.31.1.57:8000/api/login\", {\n        email: email,\n        password: password\n      }).then(response => {\n        if (response.data.length !== 0) {\n          this.props.setUser(response.data);\n          this.setCookie(response.data.id);\n        }\n        else\n          this.handleLogin(\"Incorrect e-mail or password!\")\n      })\n    }\n\n    async startRegister() {\n      await this.regEnterUsername();\n    }\n\n    async regEnterUsername(error = \"\") {\n      const { value: username } = await Swal.fire({\n        title: 'Registration step 1/6',\n        html:\n          '<p>Enter your username</p>' +\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"text\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      if (username !== undefined) {\n        if (username[0] == \"\")\n          this.regEnterUsername(\"You must be enter your username!\");\n        else if (username[0].length <= 3)\n          this.regEnterUsername(\"Username must have 4 characters long!\");\n        else {\n            this.setState({userName : username});\n            this.regEnterEmail();\n        }\n      }\n    }\n\n    async regEnterEmail(error = \"\") {\n      const { value: email } = await Swal.fire({\n        title: 'Registration step 2/6',\n        html:\n          '<p>Enter your e-mail address</p>' +\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"email\" placeholder=\"(eg.: somebody@example.com)\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      if (email !== undefined) {\n        if (email[0] == \"\")\n          return this.regEnterEmail(\"You must be enter your e-mail address!\")\n        else if (email[0].includes(\"@\") == false || email[0].includes(\".\") == false)\n          return this.regEnterEmail(\"Invalid e-mail address!\")\n      \n        const check = await this.isValidEmail(email[0])\n\n        if (check) {\n          this.setState({email : email[0]});\n          this.regEnterPhoneNumber();\n        } \n        else\n          this.regEnterEmail(\"This e-mail is already in use!\")\n      }\n    }\n\n    async isValidEmail(email) {\n      let temp = undefined;\n      await axios.get(\"http://172.31.1.57:8000/api/valid_email/\" + email)\n      .then(response => {\n          temp = response.data.length == 0\n      })\n      return temp;\n    }\n\n    async regEnterPhoneNumber(error = \"\") {\n      const { value: phone } = await Swal.fire({\n        title: 'Registration step 3/6',\n        html:\n          '<p>Enter your phone number</p>' +\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"tel\" placeholder=\"(eg.: 30/123-4567)\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      if (phone !== undefined) {\n        if (phone[0] == \"\")\n          this.regEnterPhoneNumber(\"You must be enter your phone number\");\n        else if (this.isValidPhoneNumber(phone[0])) {\n          this.setState({phoneNumber : phone});\n          this.regEnterPassword();\n        } \n        else \n          this.regEnterPhoneNumber(`Invalid phone number!\\n'${phone}'`);\n      }\n    }\n\n    isValidPhoneNumber(phone) {\n      if (phone.length < 11 || phone.length > 11)\n        return false;\n\n      for (let i = 0; i < phone.length; i++) {\n        if (i == 2) {\n          if (phone[i] != '/')\n            return false;\n        }\n        else if (i == 6) {\n          if (phone[i] != \"-\")\n            return false;\n        }\n        else if (isNaN(phone[i]))\n            return false;\n      }\n      return true;\n    }\n\n    async regEnterPassword(error = \"\", pw = \"\") {\n      const { value: formValues } = await Swal.fire({\n        title: 'Registration step 4/6',\n        html:\n          '<p>Enter your password</p>' +\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\n          `<input id=\"swal-input1\" class=\"swal2-input\" type=\"password\" value=\"${pw}\">` +\n          '<p>Confirm your password</p>' +\n          '<input id=\"swal-input2\" class=\"swal2-input\" type=\"password\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value,\n            document.getElementById('swal-input2').value\n          ]\n        }\n      })\n      \n      if (formValues !== undefined) {\n        if (formValues[0] == \"\" || formValues[1] == \"\")\n          this.regEnterPassword(\"You must be enter your password and confirm it!\");\n        else if (formValues[0] === formValues[1]) {\n            this.setState({password : formValues[0]});\n            this.regEnterBirthdate();\n        }\n        else\n          this.regEnterPassword(\"Invalid confirm password!\", formValues[0]);\n      }\n    }\n\n    async regEnterBirthdate(error = \"\") {\n      const { value: birthdate } = await Swal.fire({\n        title: 'Registration step 5/6',\n        html: \n          '<p>Enter your birthdate</p>' +\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"date\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      if (birthdate !== undefined) {\n        if (birthdate[0] == \"\")\n          this.regEnterBirthdate(\"You didn't enter your birthdate!\");\n        else {\n          this.setState({birthDate : moment(birthdate[0]).valueOf()});\n          this.regEnterPassions();\n        }\n      }\n    }\n\n    async regEnterPassions(error = \"\") {\n      const { value: passions } = await Swal.fire({\n        title: 'Registration step 6/6',\n        html: \n          '<p>Enter minimum 3 passions comma separated</p>' +\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"text\" placeholder=\"(eg.: reading,coding,walking)\">',\n        focusConfirm: false,\n        confirmButtonText: `Registration`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      if (passions !== undefined) {\n        if (passions[0].split(',').length >= 3) {\n          this.setState({passions : passions[0]});\n          this.doRegistration();\n        }\n        else\n          this.regEnterPassions(\"You have to enter minimum 3 passion!\")\n      }\n    }\n\n    doRegistration() {\n      const {userName, email, phoneNumber, password, birthDate, passions} = this.state\n      axios.post(\"http://172.31.1.57:8000/api/register\", {\n        name: userName,\n        email: email,\n        phone_number: phoneNumber,\n        password: password,\n        birthdate: birthDate,\n        passion: passions\n      }).then(response => {\n        this.props.setUser(response.data);\n        this.setCookie(response.data.id);\n      })\n    }\n\n    setCookie(id) {\n      Cookies.set('userid', id);\n    }\n  \n    render() {\n      return (\n        <>\n          <Helmet>\n              <title>Tinder | Dating, Make Friends & Meet New People</title>\n          </Helmet>\n  \n          <section style={{ height:\"100vh\",\n                            background: 'linear-gradient(rgba(0,0,0,.4), rgba(0,0,0,.4)), url(\"https://tinder.com/static/build/m/b07fe760ab4714aa3e932a15657494e5.webp\")',\n                            backgroundRepeat:\"no-repeat\",\n                            backgroundSize:\"cover\"}}\n          >\n            <nav className=\"navbar navbar-light bg-transparent justify-content-between\">\n              <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n                <a href=\"/\">\n                    <span className=\"sr-only\">TindR</span>\n                    <img src=\"logo.svg\" width=\"55%\"></img>\n                </a>\n              </div>   \n  \n              <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                <a className=\"btn btn-success rounded-pill\"\n                    onClick={this.startLogin}\n                >\n                    LOG IN\n                </a>\n              </div>\n            </nav>\n  \n            <div className=\"container d-flex h-100 align-items-center\">\n              <div className=\"mx-auto text-center\">\n                <h1 className=\"mx-auto my-0 text-white\" style={{fontSize:\"800%\"}}>\n                  Swipe Right®\n                </h1>\n                <a  className=\"btn btn-danger js-scroll-trigger rounded-pill\"\n                    onClick={this.startRegister}\n                >\n                  CREATE ACCOUNT \n                </a>\n              </div>\n            </div>\n  \n          </section>\n        </>\n      );\n    }\n  }\n  \n  export default WelcomePage;",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":16,"column":23,"nodeType":"54","messageId":"55","endLine":16,"endColumn":39,"fix":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":16},{"ruleId":"61","severity":1,"message":"62","line":7,"column":5,"nodeType":"63","messageId":"64","endLine":9,"endColumn":6},{"ruleId":"65","severity":1,"message":"66","line":63,"column":30,"nodeType":"67","messageId":"68","endLine":63,"endColumn":32},{"ruleId":"65","severity":1,"message":"66","line":63,"column":53,"nodeType":"67","messageId":"68","endLine":63,"endColumn":55},{"ruleId":"65","severity":1,"message":"66","line":105,"column":25,"nodeType":"67","messageId":"68","endLine":105,"endColumn":27},{"ruleId":"65","severity":1,"message":"66","line":133,"column":22,"nodeType":"67","messageId":"68","endLine":133,"endColumn":24},{"ruleId":"65","severity":1,"message":"66","line":135,"column":41,"nodeType":"67","messageId":"68","endLine":135,"endColumn":43},{"ruleId":"65","severity":1,"message":"66","line":135,"column":76,"nodeType":"67","messageId":"68","endLine":135,"endColumn":78},{"ruleId":"65","severity":1,"message":"66","line":153,"column":39,"nodeType":"67","messageId":"68","endLine":153,"endColumn":41},{"ruleId":"65","severity":1,"message":"66","line":175,"column":22,"nodeType":"67","messageId":"68","endLine":175,"endColumn":24},{"ruleId":"65","severity":1,"message":"66","line":191,"column":15,"nodeType":"67","messageId":"68","endLine":191,"endColumn":17},{"ruleId":"65","severity":1,"message":"69","line":192,"column":24,"nodeType":"67","messageId":"68","endLine":192,"endColumn":26},{"ruleId":"65","severity":1,"message":"66","line":195,"column":20,"nodeType":"67","messageId":"68","endLine":195,"endColumn":22},{"ruleId":"65","severity":1,"message":"69","line":196,"column":24,"nodeType":"67","messageId":"68","endLine":196,"endColumn":26},{"ruleId":"65","severity":1,"message":"66","line":225,"column":27,"nodeType":"67","messageId":"68","endLine":225,"endColumn":29},{"ruleId":"65","severity":1,"message":"66","line":225,"column":50,"nodeType":"67","messageId":"68","endLine":225,"endColumn":52},{"ruleId":"65","severity":1,"message":"66","line":253,"column":26,"nodeType":"67","messageId":"68","endLine":253,"endColumn":28},{"ruleId":"70","severity":1,"message":"71","line":323,"column":21,"nodeType":"72","endLine":323,"endColumn":53},{"ruleId":"73","severity":1,"message":"74","line":328,"column":17,"nodeType":"72","endLine":330,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":341,"column":17,"nodeType":"72","endLine":343,"endColumn":18},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-whitespace-before-property","Unexpected whitespace before property isLoggedIn.","MemberExpression","unexpectedWhitespace",{"range":"77","text":"78"},"no-unused-vars","'Helmet' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",[393,395],"."]