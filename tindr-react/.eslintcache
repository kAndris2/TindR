[{"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\ShowTickets.js":"1","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\AdminTicketTable.js":"2","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\App.js":"3","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\UserList.js":"4","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\SideBar.js":"5","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Chat.js":"6","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\index.js":"7","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\WelcomePage.js":"8","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Loading.js":"9","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Picture_upload.js":"10","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\bootstrap.js":"11"},{"size":2570,"mtime":1611825502029,"results":"12","hashOfConfig":"13"},{"size":11401,"mtime":1611824599690,"results":"14","hashOfConfig":"13"},{"size":4514,"mtime":1612186767059,"results":"15","hashOfConfig":"13"},{"size":2018,"mtime":1611835770929,"results":"16","hashOfConfig":"13"},{"size":16364,"mtime":1611313092017,"results":"17","hashOfConfig":"13"},{"size":6115,"mtime":1612260395123,"results":"18","hashOfConfig":"13"},{"size":618,"mtime":1607676433648,"results":"19","hashOfConfig":"13"},{"size":16114,"mtime":1610709664633,"results":"20","hashOfConfig":"13"},{"size":1409,"mtime":1610452928155,"results":"21","hashOfConfig":"13"},{"size":5714,"mtime":1610539747854,"results":"22","hashOfConfig":"13"},{"size":919,"mtime":1612259672192,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1msjh8u",{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\ShowTickets.js",["48"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\AdminTicketTable.js",["49","50","51","52","53"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, useColumnOrder, useExpanded } from 'react-table'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport {matchSorter} from 'match-sorter'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  table {\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n      background: white;\r\n\r\n      :last-child {\r\n        border-right: 0; \r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n// Define a default UI for filtering\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n  )\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nfunction SelectColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    const options = new Set()\r\n    preFilteredRows.forEach(row => {\r\n      options.add(row.values[id])\r\n    })\r\n    return [...options.values()]\r\n  }, [id, preFilteredRows])\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <select\r\n      value={filterValue}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined)\r\n      }}\r\n    >\r\n      <option value=\"\">All</option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\n// This is a custom filter UI that uses a\r\n// slider to set the filter value between a column's\r\n// min and max values\r\nfunction SliderColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the min and max\r\n  // using the preFilteredRows\r\n\r\n  const [min, max] = React.useMemo(() => {\r\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n    preFilteredRows.forEach(row => {\r\n      min = Math.min(row.values[id], min)\r\n      max = Math.max(row.values[id], max)\r\n    })\r\n    return [min, max]\r\n  }, [id, preFilteredRows])\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        value={filterValue || min}\r\n        onChange={e => {\r\n          setFilter(parseInt(e.target.value, 10))\r\n        }}\r\n      />\r\n      <button onClick={() => setFilter(undefined)}>Off</button>\r\n    </>\r\n  )\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\nfunction NumberRangeColumnFilter({\r\n  column: { filterValue = [], preFilteredRows, setFilter, id },\r\n}) {\r\n  const [min, max] = React.useMemo(() => {\r\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n    preFilteredRows.forEach(row => {\r\n      min = Math.min(row.values[id], min)\r\n      max = Math.max(row.values[id], max)\r\n    })\r\n    return [min, max]\r\n  }, [id, preFilteredRows])\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n      }}\r\n    >\r\n      <input\r\n        value={filterValue[0] || ''}\r\n        type=\"number\"\r\n        onChange={e => {\r\n          const val = e.target.value\r\n          setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\r\n        }}\r\n        placeholder={`Min (${min})`}\r\n        style={{\r\n          width: '70px',\r\n          marginRight: '0.5rem',\r\n        }}\r\n      />\r\n      to\r\n      <input\r\n        value={filterValue[1] || ''}\r\n        type=\"number\"\r\n        onChange={e => {\r\n          const val = e.target.value\r\n          setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\r\n        }}\r\n        placeholder={`Max (${max})`}\r\n        style={{\r\n          width: '70px',\r\n          marginLeft: '0.5rem',\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction shuffle(arr) {\r\n  arr = [...arr]\r\n  const shuffled = []\r\n  while (arr.length) {\r\n    const rand = Math.floor(Math.random() * arr.length)\r\n    shuffled.push(arr.splice(rand, 1)[0])\r\n  }\r\n  return shuffled\r\n}\r\n\r\nfunction Table({ columns, data, renderRowSubComponent }) {\r\n  console.log(columns)\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    visibleColumns,\r\n    prepareRow,\r\n    setColumnOrder,\r\n    state: { expanded },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n    },\r\n    useColumnOrder,\r\n    useFilters,\r\n    useSortBy,\r\n    useExpanded\r\n  )\r\n\r\n  const spring = React.useMemo(\r\n    () => ({\r\n      type: 'spring',\r\n      damping: 50,\r\n      stiffness: 100,\r\n    }),\r\n    []\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup, i) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <motion.th\r\n                  {...column.getHeaderProps({\r\n                    layoutTransition: spring,\r\n                    style: {\r\n                      minWidth: column.minWidth,\r\n                    },\r\n                  })}\r\n                >\r\n                  <div {...column.getSortByToggleProps()}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                  </div>\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </motion.th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          <AnimatePresence>\r\n            {rows.slice(0, 10).map((row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <>\r\n                <motion.tr\r\n                  {...row.getRowProps({\r\n                    layoutTransition: spring,\r\n                    exit: { opacity: 0, maxHeight: 0 },\r\n                  })}\r\n                >\r\n                  {row.cells.map((cell, i) => {\r\n                    return (\r\n                      <motion.td\r\n                        {...cell.getCellProps({\r\n                          layoutTransition: spring,\r\n                        })}\r\n                      >\r\n                        {cell.render('Cell')}\r\n                      </motion.td>\r\n                    )\r\n                  })}\r\n                </motion.tr>\r\n                {row.isExpanded ? (\r\n                  <tr>\r\n                    <td colSpan={visibleColumns.length}>\r\n                      {/*\r\n                          Inside it, call our renderRowSubComponent function. In reality,\r\n                          you could pass whatever you want as props to\r\n                          a component like this, including the entire\r\n                          table instance. But for this example, we'll just\r\n                          pass the row\r\n                        */}\r\n                      {renderRowSubComponent({ row })}\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n                </>\r\n              )\r\n            })}\r\n          </AnimatePresence>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\n\r\n// Define a custom filter filter function!\r\nfunction filterGreaterThan(rows, id, filterValue) {\r\n  return rows.filter(row => {\r\n    const rowValue = row.values[id]\r\n    return rowValue >= filterValue\r\n  })\r\n}\r\n\r\n// This is an autoRemove method on the filter function that\r\n// when given the new filter value and returns true, the filter\r\n// will be automatically removed. Normally this is just an undefined\r\n// check, but here, we want to remove the filter if it's not a number\r\nfilterGreaterThan.autoRemove = val => typeof val !== 'number'\r\n\r\nfunction App({data, updateTicket}) {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        // Make an expander cell\r\n        Header: () => null, // No header\r\n        id: 'expander', // It needs an ID\r\n        Cell: ({ row }) => (\r\n          // Use Cell to render an expander for each row.\r\n          // We can use the getToggleRowExpandedProps prop-getter\r\n          // to build the expander.\r\n          <span {...row.getToggleRowExpandedProps()}>\r\n            {row.isExpanded ? '👇' : '👉'}\r\n          </span>\r\n        ),\r\n      },\r\n        {\r\n          Header: 'ID',\r\n          accessor: 'id',\r\n          Filter: NumberRangeColumnFilter,\r\n          filter: \"between\"\r\n        },\r\n        {\r\n          Header: 'Date',\r\n          accessor: 'date',\r\n        },\r\n        {\r\n          Header: 'Subject',\r\n          accessor: 'subject',\r\n        },\r\n        {\r\n          Header: 'Section',\r\n          accessor: 'section',\r\n        },\r\n        {\r\n          Header: 'Status',\r\n          accessor: 'solved',\r\n          Filter: SelectColumnFilter,\r\n          filter: 'includes'\r\n        },\r\n    ],\r\n    []\r\n  )\r\n\r\n  // Create a function that will render our row sub components\r\n  const renderRowSubComponent = React.useCallback(\r\n    ({ row }) => (\r\n      <>\r\n        <pre style={{fontSize: '10px', position: 'relative'}}>\r\n\r\n          <p style={{textAlign:'center'}}><b>Notifier ID: {data[row.index].notifier_id}</b></p>\r\n          \r\n          <p>Steps:</p>\r\n          {data[row.index].steps.split(\",\").map(s =>\r\n            <ul>\r\n                <li>{s}</li>\r\n            </ul>\r\n          )}\r\n\r\n          <div style={{position: \"absolute\", right:\"2%\", bottom:'0%'}}>\r\n            <button\r\n              type=\"button\" \r\n              className={data[row.index].solved === \"Closed\" ? \"btn btn-warning\" : \"btn btn-success\"} \r\n              onClick={() => {\r\n                updateTicket(\r\n                  data[row.index].id, \r\n                  data[row.index].solved === \"Closed\" ? false : true\r\n                )}}\r\n            >\r\n              {data[row.index].solved === \"Closed\" ? \"Re-open\" : \"Close\"}\r\n            </button>\r\n\r\n            {data[row.index].solver_id !== null &&\r\n              <p>Solver ID: {data[row.index].solver_id}</p>\r\n            }\r\n          </div>\r\n\r\n        </pre>\r\n      </>\r\n    ),\r\n    []\r\n  )\r\n\r\n  return (\r\n    <Styles>\r\n      <Table \r\n        columns={columns} \r\n        data={data}\r\n        renderRowSubComponent={renderRowSubComponent}\r\n      />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nexport default App\r\n",["54","55"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\App.js",["56"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\UserList.js",[],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\SideBar.js",["57","58","59","60","61"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Chat.js",["62","63","64","65"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\index.js",[],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\WelcomePage.js",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Loading.js",["86"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Picture_upload.js",["87","88"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\bootstrap.js",["89"],{"ruleId":"90","severity":1,"message":"91","line":35,"column":23,"nodeType":"92","messageId":"93","endLine":35,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":90,"column":10,"nodeType":"96","messageId":"97","endLine":90,"endColumn":28},{"ruleId":"94","severity":1,"message":"98","line":182,"column":10,"nodeType":"96","messageId":"97","endLine":182,"endColumn":17},{"ruleId":"94","severity":1,"message":"99","line":209,"column":5,"nodeType":"96","messageId":"97","endLine":209,"endColumn":19},{"ruleId":"94","severity":1,"message":"100","line":210,"column":14,"nodeType":"96","messageId":"97","endLine":210,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":405,"column":5,"nodeType":"103","endLine":405,"endColumn":7,"suggestions":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":2,"message":"110","line":136,"column":22,"nodeType":"111","endLine":136,"endColumn":26},{"ruleId":"94","severity":1,"message":"112","line":4,"column":9,"nodeType":"96","messageId":"97","endLine":4,"endColumn":14},{"ruleId":"94","severity":1,"message":"113","line":14,"column":8,"nodeType":"96","messageId":"97","endLine":14,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":189,"column":39,"nodeType":"92","messageId":"93","endLine":189,"endColumn":41},{"ruleId":"114","severity":1,"message":"115","line":245,"column":11,"nodeType":"116","endLine":245,"endColumn":60},{"ruleId":"117","severity":1,"message":"118","line":380,"column":21,"nodeType":"116","endLine":380,"endColumn":132},{"ruleId":"94","severity":1,"message":"119","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":15},{"ruleId":"94","severity":1,"message":"120","line":32,"column":17,"nodeType":"96","messageId":"97","endLine":32,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":46,"column":37,"nodeType":"116","endLine":46,"endColumn":66},{"ruleId":"114","severity":1,"message":"115","line":57,"column":37,"nodeType":"116","endLine":57,"endColumn":66},{"ruleId":"121","severity":1,"message":"122","line":68,"column":27,"nodeType":"123","messageId":"124","endLine":68,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":68,"column":50,"nodeType":"123","messageId":"124","endLine":68,"endColumn":52},{"ruleId":"121","severity":1,"message":"122","line":110,"column":25,"nodeType":"123","messageId":"124","endLine":110,"endColumn":27},{"ruleId":"121","severity":1,"message":"122","line":138,"column":22,"nodeType":"123","messageId":"124","endLine":138,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":140,"column":41,"nodeType":"123","messageId":"124","endLine":140,"endColumn":43},{"ruleId":"121","severity":1,"message":"122","line":140,"column":76,"nodeType":"123","messageId":"124","endLine":140,"endColumn":78},{"ruleId":"121","severity":1,"message":"122","line":158,"column":39,"nodeType":"123","messageId":"124","endLine":158,"endColumn":41},{"ruleId":"121","severity":1,"message":"122","line":191,"column":22,"nodeType":"123","messageId":"124","endLine":191,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":258,"column":15,"nodeType":"123","messageId":"124","endLine":258,"endColumn":17},{"ruleId":"121","severity":1,"message":"125","line":259,"column":24,"nodeType":"123","messageId":"124","endLine":259,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":262,"column":20,"nodeType":"123","messageId":"124","endLine":262,"endColumn":22},{"ruleId":"121","severity":1,"message":"125","line":263,"column":24,"nodeType":"123","messageId":"124","endLine":263,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":292,"column":27,"nodeType":"123","messageId":"124","endLine":292,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":292,"column":50,"nodeType":"123","messageId":"124","endLine":292,"endColumn":52},{"ruleId":"121","severity":1,"message":"122","line":324,"column":26,"nodeType":"123","messageId":"124","endLine":324,"endColumn":28},{"ruleId":"94","severity":1,"message":"126","line":389,"column":24,"nodeType":"96","messageId":"97","endLine":389,"endColumn":30},{"ruleId":"121","severity":1,"message":"125","line":423,"column":34,"nodeType":"123","messageId":"124","endLine":423,"endColumn":36},{"ruleId":"127","severity":1,"message":"128","line":445,"column":21,"nodeType":"116","endLine":445,"endColumn":53},{"ruleId":"114","severity":1,"message":"129","line":450,"column":17,"nodeType":"116","endLine":452,"endColumn":18},{"ruleId":"114","severity":1,"message":"129","line":463,"column":17,"nodeType":"116","endLine":465,"endColumn":18},{"ruleId":"130","severity":1,"message":"131","line":8,"column":17,"nodeType":"132","endLine":8,"endColumn":63},{"ruleId":"127","severity":1,"message":"128","line":136,"column":25,"nodeType":"116","endLine":136,"endColumn":57},{"ruleId":"133","severity":1,"message":"134","line":148,"column":25,"nodeType":"116","endLine":148,"endColumn":158},{"ruleId":"135","severity":2,"message":"136","line":23,"column":1,"nodeType":"137","endLine":23,"endColumn":32,"fix":"138"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'SliderColumnFilter' is defined but never used.","Identifier","unusedVar","'shuffle' is defined but never used.","'setColumnOrder' is assigned a value but never used.","'expanded' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has missing dependencies: 'data' and 'updateTicket'. Either include them or remove the dependency array. If 'updateTicket' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["139"],"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"react/jsx-no-undef","'Chat' is not defined.","JSXIdentifier","'Badge' is defined but never used.","'Checkbox' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component Picture_upload must be in PascalCase or SCREAMING_SNAKE_CASE","'Loading' is defined but never used.","'messages' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'accept' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","import/first","Import in body of module; reorder to top.","ImportDeclaration",{"range":"142","text":"143"},{"desc":"144","fix":"145"},"no-global-assign","no-unsafe-negation",[0,720],"\r\n/**\r\n * Echo exposes an expressive API for subscribing to channels and listening\r\n * for events that are broadcast by Laravel. Echo and event broadcasting\r\n * allows your team to easily build robust real-time web applications.\r\n */\r\n\r\nimport Echo from 'laravel-echo'\r\n\r\nwindow._ = require('lodash');\r\n\r\nwindow.axios = require('axios');\r\n\r\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\n\r\nlet token = document.head.querySelector('meta[name=\"csrf-token\"]');\r\n\r\nif (token) {\r\n    window.axios.defaults.headers.common['X-CSRF-TOKEN'] = token.content;\r\n    window.token = token.content;\r\n} else {\r\n    console.error('CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token');\r\n}","Update the dependencies array to be: [data, updateTicket]",{"range":"146","text":"147"},[11182,11184],"[data, updateTicket]"]