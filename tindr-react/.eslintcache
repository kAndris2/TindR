[{"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Loading.js":"1","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Asd.js":"2","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Test.js":"3","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\ShowTickets.js":"4","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\AdminTicketTable.js":"5","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\index.js":"6","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\chat\\ChannelList.js":"7","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\App.js":"8","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\InvalidPage.js":"9","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\UserList.js":"10","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\CreateTickets.js":"11","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\chat\\Chat.js":"12","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\WelcomePage.js":"13","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Card.js":"14","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\spotify_config.js":"15","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\chat\\Channel.js":"16","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\chat\\Message.js":"17","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\ItemLoading.js":"18","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\NewSide.js":"19","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Picture_upload.js":"20","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\SideBar.js":"21"},{"size":1409,"mtime":1610452928155,"results":"22","hashOfConfig":"23"},{"size":2389,"mtime":1611666264804,"results":"24","hashOfConfig":"23"},{"size":3576,"mtime":1609841141117,"results":"25","hashOfConfig":"23"},{"size":2570,"mtime":1611825502029,"results":"26","hashOfConfig":"23"},{"size":11401,"mtime":1611824599690,"results":"27","hashOfConfig":"23"},{"size":618,"mtime":1607676433648,"results":"28","hashOfConfig":"23"},{"size":691,"mtime":1612869544775,"results":"29","hashOfConfig":"23"},{"size":5021,"mtime":1612869696461,"results":"30","hashOfConfig":"23"},{"size":8522,"mtime":1612785099150,"results":"31","hashOfConfig":"23"},{"size":2018,"mtime":1611835770929,"results":"32","hashOfConfig":"23"},{"size":5493,"mtime":1611750303894,"results":"33","hashOfConfig":"23"},{"size":2735,"mtime":1612869708792,"results":"34","hashOfConfig":"23"},{"size":16114,"mtime":1610709664633,"results":"35","hashOfConfig":"23"},{"size":3533,"mtime":1611744756541,"results":"36","hashOfConfig":"23"},{"size":434,"mtime":1609841141150,"results":"37","hashOfConfig":"23"},{"size":455,"mtime":1612869551133,"results":"38","hashOfConfig":"23"},{"size":300,"mtime":1612265460967,"results":"39","hashOfConfig":"23"},{"size":235,"mtime":1611137184625,"results":"40","hashOfConfig":"23"},{"size":1666,"mtime":1612265460965,"results":"41","hashOfConfig":"23"},{"size":5714,"mtime":1610539747854,"results":"42","hashOfConfig":"23"},{"size":16918,"mtime":1612265460966,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"1msjh8u",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Loading.js",["102"],"import React, { Component } from 'react'\r\n\r\nexport default class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <svg \r\n                xmlns=\"http://www.w3.org/2000/svg\" \r\n                xmlns={{xlink:\"http://www.w3.org/1999/xlink\"}} \r\n                style={{margin:'auto', background:'#fff', display:'block', float:'left'}} \r\n                width=\"100px\" \r\n                height=\"100px\" \r\n                viewBox=\"0 0 100 100\" \r\n                preserveAspectRatio=\"xMidYMid\"\r\n            >\r\n                <path \r\n                    fill=\"none\" \r\n                    stroke=\"#e90c59\" \r\n                    stroke-width=\"8\" \r\n                    stroke-dasharray=\"42.76482137044271 42.76482137044271\" \r\n                    d=\"M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z\" \r\n                    stroke-linecap=\"round\" \r\n                    style={{transform:'scale(0.8)', transformOrigin:'50px 50px'}}\r\n                >\r\n                    <animate \r\n                        attributeName=\"stroke-dashoffset\" \r\n                        repeatCount=\"indefinite\" \r\n                        dur=\"1s\" \r\n                        keyTimes=\"0;1\" \r\n                        values=\"0;256.58892822265625\"\r\n                    ></animate>\r\n                </path>\r\n        </svg>\r\n        );\r\n    }\r\n}",["103","104"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Asd.js",[],["105","106"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Test.js",["107"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n//import hash from \"./hash\";\r\nimport { encoded,authEndpoint } from \"./spotify_config\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faPause } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class Test extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state={\r\n            baseAPI:\"https://api.spotify.com/v1/tracks/\",\r\n            token:'',\r\n            isLoading:true,\r\n            externalWindow:'',\r\n            song:'',\r\n            isPlaying:false\r\n        }\r\n        this.player = React.createRef();\r\n        \r\n    }\r\n    audio=null;\r\n\r\n    async getToken(){\r\n        await axios.post(authEndpoint,\"grant_type=client_credentials\",{\r\n            headers:{\r\n                \"Authorization\": \"Basic \"+encoded\r\n            }\r\n        })\r\n        .then(resp=>{\r\n            this.setState({token:resp.data.access_token});\r\n        })\r\n        await this.getSong();\r\n    }\r\n\r\n    async getSong(){\r\n        if (this.props.songID === null){\r\n            return console.log('%c -------ERROR-------\\n SongID was null! \\n Refusing to send request. \\nAsk the user to set an anthem \\n---------------------', 'background: #222; color: red');\r\n        }\r\n        await axios.get(this.state.baseAPI+this.props.songID,{\r\n            headers: {\r\n                'Authorization':'Bearer '+this.state.token\r\n            }\r\n        })\r\n        .then(resp=>{\r\n            this.setState({song:resp.data,isLoading:false});\r\n        })\r\n        this.audio = new Audio(this.state.song.preview_url);\r\n    }\r\n\r\n    playClicked(){\r\n        this.setState({ isPlaying: !this.state.isPlaying }, () => {\r\n            this.state.isPlaying ? this.audio.play() : this.audio.pause();\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getToken();\r\n    }\r\n\r\n    render() {\r\n        if (this.props.songID === null) {\r\n            return null;\r\n        }\r\n        if(this.state.isLoading){\r\n            return(\"haggyámátőteni\");\r\n        }\r\n        \r\n        return (\r\n            <>\r\n                <div className=\"card bg-secondary text-white\" style={{width:\"100%\"}}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2\" style={{position:\"relative\"}}>\r\n                            <img height=\"80\" src={this.state.song.album.images[0].url}></img>\r\n                        </div>\r\n                        <div className=\"col-sm-2\" style={{position:\"absolute\",top:\"30%\",left:\"3%\"}}>\r\n                            {this.state.isPlaying ? <FontAwesomeIcon onClick={this.playClicked.bind(this)} icon={faPause} size=\"2x\" /> : <FontAwesomeIcon onClick={this.playClicked.bind(this)} icon={faPlay} size=\"2x\" />}\r\n                        </div>\r\n                        <div style={{zIndex:\"-100\"}} className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-8\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">{this.state.song.artists[0].name} - {this.state.song.name}</div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\"></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}",["108","109"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\ShowTickets.js",["110"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\n\r\nimport Loading from './Loading'\r\nimport AdminTicketTable from './AdminTicketTable'\r\n\r\nexport default class ShowTickets extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            tickets: []\r\n        }\r\n\r\n        this.getTickets = this.getTickets.bind(this);\r\n        this.formatTickets = this.formatTickets.bind(this);\r\n        this.updateTicket = this.updateTicket.bind(this);\r\n    }\r\n\r\n    getTickets() {\r\n        axios.get(`${process.env.REACT_APP_IP}/api/get_all_tickets`)\r\n        .then(response => {\r\n            this.setState({\r\n                tickets: response.data,\r\n                isLoading: false\r\n            });\r\n        })\r\n    }\r\n\r\n    formatTickets(tickets) {\r\n        const data = [];\r\n\r\n        tickets.map(t => {\r\n            data.push({\r\n                id: t.id,\r\n                date: moment(t.date).format(\"YYYY. MMM. D.\"),\r\n                subject: t.subject,\r\n                section: t.section,\r\n                solved: t.solved === false ? \"Open\" : \"Closed\",\r\n                steps: t.steps,\r\n                notifier_id: t.notifier_id,\r\n                solver_id: t.solver_id,\r\n            })\r\n        })\r\n        return data;\r\n    }\r\n\r\n    async updateTicket(ticketID, newStatus) {\r\n        this.setState({\r\n            isLoading : true,\r\n            tickets : []\r\n        });\r\n\r\n        await axios.put(`${process.env.REACT_APP_IP}/api/update_ticket/${ticketID}`, {\r\n            \"solved\": newStatus,\r\n            \"solver_id\": this.props.userID\r\n        })\r\n        .then(response => {\r\n            this.setState({\r\n                tickets: response.data,\r\n                isLoading: false\r\n            });\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTickets();\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, tickets } = this.state;\r\n\r\n        return(\r\n            <>\r\n                {isLoading !== true ?\r\n                    <div style={{position:\"fixed\", top:\"5%\", left:\"30%\"}}>\r\n                        <AdminTicketTable \r\n                            data={this.formatTickets(tickets)}\r\n                            updateTicket={this.updateTicket}\r\n                        />\r\n                    </div>\r\n                :\r\n                    <div style={{position:\"fixed\", top:\"10%\", left:\"50%\"}}>\r\n                        <Loading />\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }    \r\n}",["111","112"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\AdminTicketTable.js",["113","114","115","116","117"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, useColumnOrder, useExpanded } from 'react-table'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport {matchSorter} from 'match-sorter'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  table {\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n      background: white;\r\n\r\n      :last-child {\r\n        border-right: 0; \r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n// Define a default UI for filtering\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n  )\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nfunction SelectColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    const options = new Set()\r\n    preFilteredRows.forEach(row => {\r\n      options.add(row.values[id])\r\n    })\r\n    return [...options.values()]\r\n  }, [id, preFilteredRows])\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <select\r\n      value={filterValue}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined)\r\n      }}\r\n    >\r\n      <option value=\"\">All</option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\n// This is a custom filter UI that uses a\r\n// slider to set the filter value between a column's\r\n// min and max values\r\nfunction SliderColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the min and max\r\n  // using the preFilteredRows\r\n\r\n  const [min, max] = React.useMemo(() => {\r\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n    preFilteredRows.forEach(row => {\r\n      min = Math.min(row.values[id], min)\r\n      max = Math.max(row.values[id], max)\r\n    })\r\n    return [min, max]\r\n  }, [id, preFilteredRows])\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        value={filterValue || min}\r\n        onChange={e => {\r\n          setFilter(parseInt(e.target.value, 10))\r\n        }}\r\n      />\r\n      <button onClick={() => setFilter(undefined)}>Off</button>\r\n    </>\r\n  )\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\nfunction NumberRangeColumnFilter({\r\n  column: { filterValue = [], preFilteredRows, setFilter, id },\r\n}) {\r\n  const [min, max] = React.useMemo(() => {\r\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n    preFilteredRows.forEach(row => {\r\n      min = Math.min(row.values[id], min)\r\n      max = Math.max(row.values[id], max)\r\n    })\r\n    return [min, max]\r\n  }, [id, preFilteredRows])\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n      }}\r\n    >\r\n      <input\r\n        value={filterValue[0] || ''}\r\n        type=\"number\"\r\n        onChange={e => {\r\n          const val = e.target.value\r\n          setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\r\n        }}\r\n        placeholder={`Min (${min})`}\r\n        style={{\r\n          width: '70px',\r\n          marginRight: '0.5rem',\r\n        }}\r\n      />\r\n      to\r\n      <input\r\n        value={filterValue[1] || ''}\r\n        type=\"number\"\r\n        onChange={e => {\r\n          const val = e.target.value\r\n          setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\r\n        }}\r\n        placeholder={`Max (${max})`}\r\n        style={{\r\n          width: '70px',\r\n          marginLeft: '0.5rem',\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction shuffle(arr) {\r\n  arr = [...arr]\r\n  const shuffled = []\r\n  while (arr.length) {\r\n    const rand = Math.floor(Math.random() * arr.length)\r\n    shuffled.push(arr.splice(rand, 1)[0])\r\n  }\r\n  return shuffled\r\n}\r\n\r\nfunction Table({ columns, data, renderRowSubComponent }) {\r\n  console.log(columns)\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    visibleColumns,\r\n    prepareRow,\r\n    setColumnOrder,\r\n    state: { expanded },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n    },\r\n    useColumnOrder,\r\n    useFilters,\r\n    useSortBy,\r\n    useExpanded\r\n  )\r\n\r\n  const spring = React.useMemo(\r\n    () => ({\r\n      type: 'spring',\r\n      damping: 50,\r\n      stiffness: 100,\r\n    }),\r\n    []\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup, i) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <motion.th\r\n                  {...column.getHeaderProps({\r\n                    layoutTransition: spring,\r\n                    style: {\r\n                      minWidth: column.minWidth,\r\n                    },\r\n                  })}\r\n                >\r\n                  <div {...column.getSortByToggleProps()}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                  </div>\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </motion.th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          <AnimatePresence>\r\n            {rows.slice(0, 10).map((row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <>\r\n                <motion.tr\r\n                  {...row.getRowProps({\r\n                    layoutTransition: spring,\r\n                    exit: { opacity: 0, maxHeight: 0 },\r\n                  })}\r\n                >\r\n                  {row.cells.map((cell, i) => {\r\n                    return (\r\n                      <motion.td\r\n                        {...cell.getCellProps({\r\n                          layoutTransition: spring,\r\n                        })}\r\n                      >\r\n                        {cell.render('Cell')}\r\n                      </motion.td>\r\n                    )\r\n                  })}\r\n                </motion.tr>\r\n                {row.isExpanded ? (\r\n                  <tr>\r\n                    <td colSpan={visibleColumns.length}>\r\n                      {/*\r\n                          Inside it, call our renderRowSubComponent function. In reality,\r\n                          you could pass whatever you want as props to\r\n                          a component like this, including the entire\r\n                          table instance. But for this example, we'll just\r\n                          pass the row\r\n                        */}\r\n                      {renderRowSubComponent({ row })}\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n                </>\r\n              )\r\n            })}\r\n          </AnimatePresence>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\n\r\n// Define a custom filter filter function!\r\nfunction filterGreaterThan(rows, id, filterValue) {\r\n  return rows.filter(row => {\r\n    const rowValue = row.values[id]\r\n    return rowValue >= filterValue\r\n  })\r\n}\r\n\r\n// This is an autoRemove method on the filter function that\r\n// when given the new filter value and returns true, the filter\r\n// will be automatically removed. Normally this is just an undefined\r\n// check, but here, we want to remove the filter if it's not a number\r\nfilterGreaterThan.autoRemove = val => typeof val !== 'number'\r\n\r\nfunction App({data, updateTicket}) {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        // Make an expander cell\r\n        Header: () => null, // No header\r\n        id: 'expander', // It needs an ID\r\n        Cell: ({ row }) => (\r\n          // Use Cell to render an expander for each row.\r\n          // We can use the getToggleRowExpandedProps prop-getter\r\n          // to build the expander.\r\n          <span {...row.getToggleRowExpandedProps()}>\r\n            {row.isExpanded ? '👇' : '👉'}\r\n          </span>\r\n        ),\r\n      },\r\n        {\r\n          Header: 'ID',\r\n          accessor: 'id',\r\n          Filter: NumberRangeColumnFilter,\r\n          filter: \"between\"\r\n        },\r\n        {\r\n          Header: 'Date',\r\n          accessor: 'date',\r\n        },\r\n        {\r\n          Header: 'Subject',\r\n          accessor: 'subject',\r\n        },\r\n        {\r\n          Header: 'Section',\r\n          accessor: 'section',\r\n        },\r\n        {\r\n          Header: 'Status',\r\n          accessor: 'solved',\r\n          Filter: SelectColumnFilter,\r\n          filter: 'includes'\r\n        },\r\n    ],\r\n    []\r\n  )\r\n\r\n  // Create a function that will render our row sub components\r\n  const renderRowSubComponent = React.useCallback(\r\n    ({ row }) => (\r\n      <>\r\n        <pre style={{fontSize: '10px', position: 'relative'}}>\r\n\r\n          <p style={{textAlign:'center'}}><b>Notifier ID: {data[row.index].notifier_id}</b></p>\r\n          \r\n          <p>Steps:</p>\r\n          {data[row.index].steps.split(\",\").map(s =>\r\n            <ul>\r\n                <li>{s}</li>\r\n            </ul>\r\n          )}\r\n\r\n          <div style={{position: \"absolute\", right:\"2%\", bottom:'0%'}}>\r\n            <button\r\n              type=\"button\" \r\n              className={data[row.index].solved === \"Closed\" ? \"btn btn-warning\" : \"btn btn-success\"} \r\n              onClick={() => {\r\n                updateTicket(\r\n                  data[row.index].id, \r\n                  data[row.index].solved === \"Closed\" ? false : true\r\n                )}}\r\n            >\r\n              {data[row.index].solved === \"Closed\" ? \"Re-open\" : \"Close\"}\r\n            </button>\r\n\r\n            {data[row.index].solver_id !== null &&\r\n              <p>Solver ID: {data[row.index].solver_id}</p>\r\n            }\r\n          </div>\r\n\r\n        </pre>\r\n      </>\r\n    ),\r\n    []\r\n  )\r\n\r\n  return (\r\n    <Styles>\r\n      <Table \r\n        columns={columns} \r\n        data={data}\r\n        renderRowSubComponent={renderRowSubComponent}\r\n      />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nexport default App\r\n",["118","119"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\index.js",[],["120","121"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\chat\\ChannelList.js",[],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\App.js",[],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\InvalidPage.js",["122"],"import React, { Component } from 'react'\r\n\r\nexport default class InvalidPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { mode, userID } = this.props;\r\n\r\n        return(\r\n            <div style={{width:'50%', marginRight:'auto', marginLeft:'auto', display:'block'}}>\r\n                <svg \r\n                    xmlns={{svg:\"http://www.w3.org/2000/svg\"}} \r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    version=\"1.1\" \r\n                    width=\"575px\" \r\n                    height=\"575px\" \r\n                    viewBox=\"-2 -2 1525 1525\"\r\n                >\r\n                    <defs />\r\n                    <g transform=\"translate(419.34,155.03)\">\r\n                        <path\r\n                            d=\"M 322.86,1367.5 C 127.98,1362.9 -57.878,1283.1 -196.48,1144.7 -302.25,1039.1 -375.33,903.3 -404.5,758.15 -415.01,705.84 -419.34,661.54 -419.34,606.15 -419.34,566.44 -417.82,542.14 -413.07,505.68 -398,390.11 -356,279.2 -290.36,181.65 -242.46,110.47 -184.17,48.932 -116.14,-2.2632 -11.921,-80.698 109.73,-130.86 237.86,-148.24 276.29,-153.45 300.45,-155.03 341.86,-155.03 383.27,-155.03 407.42,-153.45 445.86,-148.24 680.44,-116.42 887.42,24.226 1005.2,231.81 1057.1,323.31 1089.7,426.66 1099.8,531.65 1104.3,578.96 1104.3,633.34 1099.8,680.65 1087.7,805.71 1044.6,925.84 974.07,1030.6 887.06,1160 763.98,1258.7 618.86,1315.7 526.17,1352 424.09,1369.9 322.86,1367.5 z M 378.86,1235.7 C 416.81,1230.2 454.78,1216.5 485.21,1197.3 525.9,1171.8 561.75,1133.4 582.13,1093.5 601.27,1056.1 610.71,1019 612.87,972.81 613.9,950.68 614.21,709.94 613.22,703.9 L 612.6,700.15 341.81,700.15 71.028,700.15 70.339,707.5 C 69.96,711.54 69.874,773.31 70.148,844.75 70.679,983.12 70.876,989.15 75.847,1018.6 81.76,1053.6 95.464,1086.7 118.15,1120.6 131.49,1140.6 160.11,1170.7 177.86,1183.3 197.92,1197.6 219.55,1210 237.86,1217.7 260.17,1227.1 289.23,1234.4 315.32,1237.2 327.11,1238.4 366.59,1237.5 378.86,1235.7 z M 313.86,999.65 C 313.86,959.6 313.48,930.15 312.97,930.15 311.14,930.15 301.6,920.65 298,915.25 291.09,904.88 288.68,897.1 288.68,885.17 288.68,870.01 293.7,857.54 304.02,847.06 313.92,837.01 327.33,831.67 342.36,831.8 366.35,832 386.53,847.18 393.26,870.08 395.77,878.62 395.38,892.38 392.37,901.92 389.18,912.01 381.65,922.96 374.84,927.42 L 369.89,930.65 369.88,999.9 369.86,1069.1 341.86,1069.1 313.86,1069.1 313.86,999.65 z M 205.62,651.05 205.36,619.95 184.36,612.52 C 144.83,598.55 140.55,597.12 139.97,597.7 139.07,598.6 137.53,672.47 138.3,677.61 L 138.98,682.15 172.43,682.15 205.89,682.15 z M 545.48,642.44 C 544.91,608.63 544.4,597.15 543.45,597.15 541.37,597.15 480.79,619.03 479.1,620.4 478.11,621.19 477.95,627.88 478.36,651.03 478.65,667.32 478.88,680.95 478.87,681.31 478.86,681.67 494,682.03 512.51,682.1 L 546.16,682.23 z M 246.39,609.68 C 255.89,604.12 261.2,594.73 261.14,583.65 261.09,575.11 258.63,568.91 253.47,564.38 248.3,559.84 246.02,558.82 224.02,551.18 158.62,528.47 66.519,493.18 26.357,475.43 6.1536,466.5 0.57807,464.7 -6.6549,464.8 -15.711,464.92 -24.984,471.22 -29.963,480.65 -32.18,484.85 -32.605,486.93 -32.606,493.65 -32.608,502.89 -30.603,507.78 -24.688,512.97 -20.066,517.03 -18.821,517.65 5.1472,527.79 61.724,551.73 102.63,567.63 164.36,589.66 180.31,595.36 199.66,602.34 207.36,605.19 230.57,613.76 237.98,614.61 246.39,609.68 z M 462.41,609.76 C 525.26,588.37 617.09,553.41 681.62,526.3 710.53,514.16 715.67,509.75 716.6,496.3 717.79,478.98 703.35,462.95 687.89,464.45 682.68,464.95 668.56,470.35 632.36,485.69 591.41,503.03 533.65,524.91 461.94,550.24 437.39,558.91 432.55,561.28 427.9,566.9 414.09,583.55 427.29,612.54 448.91,613.06 450.87,613.11 456.94,611.62 462.41,609.76 z M -25.143,593.69 C -10.058,591.38 2.4458,586.5 15.357,577.86 26.089,570.67 39.627,558.72 38.071,557.8 37.678,557.57 25.644,552.42 11.328,546.35 L -14.7,535.32 -23.672,537.19 C -28.606,538.23 -34.471,539.09 -36.705,539.11 -42.466,539.16 -53.646,536.02 -68.143,530.28 -82.945,524.41 -93.719,519.59 -118.64,507.66 -126.34,503.98 -137.05,498.97 -142.44,496.54 -164.01,486.79 -170.39,481.54 -176.15,468.78 L -179.64,461.06 -205.74,448.1 C -220.1,440.98 -232.36,435.15 -232.99,435.15 -233.78,435.15 -234.14,438.1 -234.14,444.42 -234.14,484.25 -219.28,515.73 -192.13,533.41 -185.17,537.94 -152.41,555.15 -150.74,555.15 -150.48,555.15 -137.98,560.83 -122.96,567.77 -66.926,593.65 -51.568,597.72 -25.143,593.69 z M 745.62,592.2 C 757.66,589.24 770.41,584.26 796.86,572.17 809.78,566.26 825.76,559.05 832.36,556.15 859.06,544.42 880.17,532.06 888.96,523.04 902.19,509.46 911.26,491.62 915.37,471.12 916.99,463.02 918.61,435.15 917.45,435.15 917.07,435.15 904.8,440.86 890.2,447.84 868.39,458.28 863.49,460.99 862.71,463.09 859.54,471.58 852.82,480.96 846.29,485.97 844.06,487.69 834.38,492.75 824.79,497.22 815.2,501.69 798.13,509.64 786.86,514.88 751.07,531.53 730.09,539.18 720.42,539.12 718.18,539.11 712.53,538.23 707.86,537.17 L 699.36,535.23 672.86,546.29 C 658.28,552.36 646.02,557.66 645.6,558.05 645.19,558.44 647.21,561.03 650.1,563.81 666.01,579.11 686.18,589.57 707.6,593.63 717.66,595.54 734.61,594.9 745.62,592.2 z M 245.4,527.38 C 265.49,507.63 286.89,495.71 313.36,489.52 319.73,488.03 325.33,487.65 340.86,487.65 362.19,487.65 369.29,488.69 386.36,494.35 405.58,500.72 426.76,514.64 442.09,530.98 445.79,534.92 449.43,538.15 450.18,538.15 453.25,538.15 511.67,517.35 513.78,515.5 514.73,514.67 500.49,495.06 492.83,486.65 473.71,465.65 457.25,453.26 432.36,441.1 373.63,412.43 307.82,412.18 251.36,440.4 231.17,450.49 216.99,460.89 199.29,478.58 187.33,490.55 169.86,512.01 169.86,514.75 169.86,515.37 174.24,517.58 179.61,519.66 193.44,525.02 231.06,538.03 232.9,538.1 233.75,538.12 239.38,533.3 245.4,527.38 z M 659.68,458.51 C 665.7,455.99 666.13,455.57 669,449.51 673.66,439.64 680.32,433.08 691.16,427.67 707.4,419.57 786.15,384.02 792.36,381.99 799.74,379.57 809.8,379.4 819.59,381.54 L 826.81,383.11 852.34,370.67 C 866.37,363.82 877.86,357.8 877.86,357.27 877.86,356.75 875.72,354.43 873.11,352.12 856.95,337.83 833.36,327.56 810.78,324.99 798.91,323.64 784.99,325.05 774.17,328.68 764.53,331.91 674.01,372.86 662.36,379.25 632.1,395.86 615.16,425.31 612.31,466.31 611.94,471.63 611.9,476.41 612.23,476.95 612.75,477.78 625.21,472.94 659.68,458.51 z M 71.403,467.4 C 69.182,436.08 59.736,413.19 41.357,394.59 30.382,383.48 24.174,379.43 6.0854,371.56 -6.0121,366.29 -9.8601,364.55 -29.643,355.41 -49.458,346.25 -79.649,332.86 -86.143,330.35 -113.29,319.87 -146.82,323.92 -174.07,340.96 -180.88,345.21 -193.64,355.9 -193.64,357.34 -193.64,358.58 -151.64,379.86 -145.64,381.66 -142.49,382.6 -140.37,382.58 -135.64,381.56 -126.49,379.6 -115.06,379.82 -108.36,382.08 -105.22,383.15 -94.768,387.69 -85.143,392.17 -75.518,396.66 -54.644,406.17 -38.756,413.31 -22.868,420.44 -7.3434,427.7 -4.2561,429.43 3.6613,433.87 10.957,441.5 14.612,449.16 L 17.704,455.65 43.031,466.29 C 56.96,472.14 69.198,476.97 70.226,477.04 71.975,477.14 72.051,476.52 71.403,467.4 z M -144.69,451.21 C -133.32,446.01 -125.54,430.77 -128,418.51 -129.19,412.58 -132.82,406.48 -136.91,403.53 -140.29,401.08 -234.32,354.15 -235.83,354.15 -238.3,354.15 -256.99,402.51 -255.76,405.71 -255.08,407.47 -166.32,451.76 -160.95,453.01 -155.62,454.26 -149.98,453.63 -144.69,451.21 z M 854.25,448.97 C 869.87,442.1 938.98,406.99 939.49,405.67 940.7,402.51 921.99,354.15 919.56,354.15 918.96,354.15 896.32,365.18 869.24,378.65 816.13,405.08 815.15,405.71 812.72,414.65 811.06,420.76 812.12,431.96 814.88,437.49 817.54,442.81 822.9,448.58 827.36,450.91 835.27,455.06 841.44,454.61 854.25,448.97 z\"\r\n                            id=\"path8818\"\r\n                            style={{fill:'#004488', fillOpacity:'1'}} />\r\n                    </g>\r\n                </svg>\r\n                \r\n                {mode === \"not_admin\" &&\r\n                    <>\r\n                        <br />\r\n                        <h2>You have no permission to access this page!</h2>\r\n                    </>\r\n                }\r\n                {mode === \"no_page\" &&\r\n                    <>\r\n                        <br />\r\n                        <h2>Oops! We can't find the page you're looking for</h2>\r\n                        <p>You tried to request a page that doesn't exist. If you believe this to be in error, let\r\n                                        us know <a href={`/tickets/${userID}`}>with a ticket</a>.</p>\r\n                    </>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\UserList.js",[],["123","124"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\CreateTickets.js",["125"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\n\r\nimport Table from './Table';\r\nimport Loading from './Loading'\r\n\r\nexport default class CreateTickets extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      subject: \"\",\r\n      section: \"\",\r\n      steps: \"\",\r\n      isLoading: true,\r\n      tickets: [],\r\n      columns: [\r\n          {\r\n              Header: \"#\",\r\n              accessor: \"index\",\r\n          },\r\n          {\r\n            Header: \"Date\",\r\n            accessor: \"date\",\r\n          },\r\n          {\r\n              Header: \"Subject\",\r\n              accessor: \"subject\",\r\n          },\r\n          {\r\n              Header: \"Section\",\r\n              accessor: \"section\",\r\n          },\r\n          {\r\n              Header: \"Status\",\r\n              accessor: \"solved\",\r\n          },\r\n      ]\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n        [event.target.name] : event.target.value\r\n    });\r\n  }\r\n\r\n  handleClick() {\r\n    const { subject, section, steps, tickets } = this.state;\r\n\r\n    this.setState({isLoading : true});\r\n\r\n    const newTicket = {\r\n        \"notifier_id\": this.props.userID,\r\n        \"subject\": subject,\r\n        \"section\": section,\r\n        \"steps\": steps\r\n    };\r\n\r\n    axios.post(`${process.env.REACT_APP_IP}/api/create_ticket`, newTicket)\r\n    .then(() => {\r\n        const temp = tickets;\r\n        temp.push(newTicket);\r\n\r\n        this.setState({\r\n            tickets, temp,\r\n            isLoading : false\r\n        });\r\n    })\r\n  }\r\n\r\n  getFormattedTickets(tickets) {\r\n    const data = [];\r\n    let i = 0;\r\n\r\n      tickets.map(t => {\r\n          i++;\r\n        data.push({\r\n            index: `${i}.`,\r\n            date: moment(t.date).format(\"YYYY. MMM. D.\"),\r\n            subject: t.subject,\r\n            section: t.section,\r\n            solved: t.solved === false ? \"Open\" : \"Closed\",\r\n            steps: t.steps, \r\n        })\r\n      })\r\n      return data;\r\n  }\r\n\r\n  getTickets() {\r\n    axios.get(`${process.env.REACT_APP_IP}/api/get_tickets/${this.props.userID}`)\r\n    .then(response => {\r\n      this.setState({\r\n          isLoading : false,\r\n          tickets : response.data\r\n      });\r\n    });\r\n}\r\n\r\n  componentDidMount() {\r\n    this.getTickets();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, tickets, columns } = this.state;\r\n\r\n      return(\r\n          <>\r\n            <div style={{position:\"fixed\", top:\"5%\", left:\"45%\"}}>\r\n                <h1>Report us a bug:</h1>\r\n\r\n                <fieldset className=\"form-group\">\r\n                    <label>Subject:</label>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"subject\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"(eg.: I couldn't save my preferences.)\"\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                    <label>Section:</label>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"section\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"(eg.: Settings)\"\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                    <label>Steps:</label>\r\n                    <div className=\"input-group\">\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            name=\"steps\"\r\n                            placeholder=\"Describe the steps leading to the error separated by commas\"\r\n                            maxLength=\"500\"\r\n                            style={{width:\"400px\", height:\"200px\", resize:\"none\"}}\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <button \r\n                    type=\"button\" \r\n                    class=\"btn btn-warning\"\r\n                    onClick={this.handleClick}\r\n                >Send</button>\r\n\r\n                {isLoading !== true ? \r\n                    <>\r\n                        <br /><br />\r\n                        {tickets.length !== 0 ?\r\n                            <>\r\n                                <h1>My tickets:</h1>\r\n                                <Table \r\n                                    data={this.getFormattedTickets(tickets)}\r\n                                    columnsData={columns}\r\n                                />\r\n                            </>\r\n                        :\r\n                            <p>You didn't sent any bug report yet!</p>\r\n                        }\r\n                    </>\r\n                :\r\n                    <div style={{margin:\"auto\", width:\"30%\"}}>\r\n                        <Loading />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n          </>\r\n      );\r\n  }\r\n}","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\chat\\Chat.js",["126"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\WelcomePage.js",["127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146"],"import React, {Component} from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport Swal from \"sweetalert2\";\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport ReactCodeInput from 'react-code-input';\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nclass WelcomePage extends Component {\r\n    constructor() {\r\n      super();\r\n\r\n      this.state = {\r\n        apikey:'6259e30396ee22afa1b50ed0d8468bd7be1204de',\r\n        appkey:'a1yqe5e4o6a6eborahy7',\r\n        userName: undefined,\r\n        email: undefined,\r\n        phoneNumber: undefined,\r\n        password: undefined,\r\n        confirmPass: undefined,\r\n        birthDate: undefined,\r\n        passions: undefined,\r\n      }\r\n\r\n      this.startLogin = this.startLogin.bind(this);\r\n      this.handleLogin = this.handleLogin.bind(this);\r\n      this.doLogin = this.doLogin.bind(this);\r\n      this.startRegister = this.startRegister.bind(this);\r\n      this.regEnterUsername = this.regEnterUsername.bind(this);\r\n      this.regEnterEmail = this.regEnterEmail.bind(this);\r\n      this.isValidEmail = this.isValidEmail.bind(this);\r\n      this.regEnterPhoneNumber = this.regEnterPhoneNumber.bind(this);\r\n      this.isValidPhoneNumber = this.isValidPhoneNumber.bind(this);\r\n      this.regEnterPassword = this.regEnterPassword.bind(this);\r\n      this.regEnterBirthdate = this.regEnterBirthdate.bind(this);\r\n      this.regEnterPassions = this.regEnterPassions.bind(this);\r\n      this.regUploadImage = this.regUploadImage.bind(this);\r\n      this.showDetails = this.showDetails.bind(this);\r\n      this.doRegistration = this.doRegistration.bind(this);\r\n      this.requestPin = this.requestPin.bind(this);\r\n      this.validatePin = this.validatePin.bind(this);\r\n    }\r\n\r\n    async startLogin() {\r\n      await this.handleLogin();\r\n    }\r\n\r\n    async handleLogin(error = \"\") {\r\n      const { value: formValues } = await Swal.fire({\r\n        title: 'Sign in',\r\n        html:\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>\\n\\n` : \"\"}` +\r\n          '<p>Enter your email address</p>' +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"email\">' +\r\n          '<p>Enter your password</p>' +\r\n          '<input id=\"swal-input2\" class=\"swal2-input\" type=\"password\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Sign in`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value,\r\n            document.getElementById('swal-input2').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (formValues !== undefined) {\r\n        if (formValues[0] == \"\" || formValues[1] == \"\") {\r\n          this.handleLogin(\"You must enter your username and your password!\");\r\n        }\r\n        else\r\n          this.doLogin(formValues[0], formValues[1]);\r\n      }\r\n    }\r\n\r\n    doLogin(email, password) {\r\n      axios.post(process.env.REACT_APP_IP+\"/api/login\", {\r\n        email: email,\r\n        password: password\r\n      }).then(response => {\r\n        if (response.data.length !== 0) {\r\n          this.props.setUser(response.data);\r\n        }\r\n        else\r\n          this.handleLogin(\"Incorrect e-mail or password!\")\r\n      })\r\n    }\r\n\r\n    async startRegister() {\r\n      await this.regEnterUsername();\r\n    }\r\n\r\n    async regEnterUsername(error = \"\") {\r\n      const { value: username } = await Swal.fire({\r\n        title: 'Registration step 1/7',\r\n        html:\r\n          '<p>Enter your username</p>' +\r\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"text\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (username !== undefined) {\r\n        if (username[0] == \"\")\r\n          this.regEnterUsername(\"You must enter your username!\");\r\n        else if (username[0].length <= 3)\r\n          this.regEnterUsername(\"Username must have at least 4 characters!\");\r\n        else {\r\n            this.setState({userName : username[0]});\r\n            this.regEnterEmail();\r\n        }\r\n      }\r\n    }\r\n\r\n    async regEnterEmail(error = \"\") {\r\n      const { value: email } = await Swal.fire({\r\n        title: 'Registration step 2/7',\r\n        html:\r\n          '<p>Enter your e-mail address</p>' +\r\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"email\" placeholder=\"(eg.: somebody@example.com)\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (email !== undefined) {\r\n        if (email[0] == \"\")\r\n          return this.regEnterEmail(\"You must enter your e-mail address!\")\r\n        else if (email[0].includes(\"@\") == false || email[0].includes(\".\") == false)\r\n          return this.regEnterEmail(\"Invalid e-mail address!\")\r\n      \r\n        const check = await this.isValidEmail(email[0])\r\n\r\n        if (check) {\r\n          this.setState({email : email[0]});\r\n          this.regEnterPhoneNumber();\r\n        } \r\n        else\r\n          this.regEnterEmail(\"This e-mail is already in use!\")\r\n      }\r\n    }\r\n\r\n    async isValidEmail(email) {\r\n      let temp = undefined;\r\n      await axios.get(process.env.REACT_APP_IP+\"/api/valid_email/\" + email)\r\n      .then(response => {\r\n          temp = response.data.length == 0\r\n      })\r\n      return temp;\r\n    }\r\n\r\n    async requestPin(number){\r\n      await axios.post(process.env.REACT_APP_IP+\"/api/getpin\",{\r\n        appkey:this.state.appkey,\r\n        apikey:this.state.apikey,\r\n        phone:number\r\n      })\r\n      .then(resp =>{\r\n        console.log(resp.data);\r\n      })\r\n    }\r\n\r\n    async regEnterPhoneNumber(error = \"\") {\r\n      const { value: phone } = await Swal.fire({\r\n        title: 'Registration step 3/7',\r\n        html:\r\n          '<p>Enter your phone number</p>' +\r\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"tel\" placeholder=\"(eg.: 30/123-4567)\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (phone !== undefined) {\r\n        if (phone[0] == \"\")\r\n          this.regEnterPhoneNumber(\"You must enter your phone number\");\r\n        else if (this.isValidPhoneNumber(phone[0])) {\r\n          let pinnumber = \"+36\" + phone[0].replace(\"/\",\"\").replace(\"-\",\"\");\r\n          this.requestPin(pinnumber);\r\n          this.validatePin(pinnumber);\r\n          this.setState({phoneNumber : phone[0]});\r\n          \r\n        } \r\n        else \r\n          this.regEnterPhoneNumber(`Invalid phone number!\\n'${phone}'`);\r\n      }\r\n    }\r\n    \r\n    async validatePin(pinnumber){\r\n      const mySwal = withReactContent(Swal);\r\n      let pin = 0;\r\n      let pinHtml = <ReactCodeInput type=\"number\" onChange={(e) => pin = e} fields={4}/>;\r\n      await mySwal.fire({\r\n        title: 'Enter the verification code',\r\n        html:pinHtml,\r\n        //input: 'text',\r\n        inputAttributes: {\r\n          autocapitalize: 'off'\r\n        },\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Validate',\r\n        showLoaderOnConfirm: true,\r\n        preConfirm: (usuallytrue) => {\r\n          return axios.post(process.env.REACT_APP_IP+\"/api/validatecode\",{\r\n            appkey:this.state.appkey,\r\n            apikey:this.state.apikey,\r\n            phone:pinnumber,\r\n            code:pin\r\n          })\r\n          .then(response => {\r\n            if (response.data.status !== \"SUCCESS\") {\r\n              throw new Error(response.statusText)\r\n            }\r\n            return response.data;\r\n          })\r\n          .catch(error => {\r\n            Swal.showValidationMessage(\r\n              `Request failed: ${error}`\r\n            )\r\n          })\r\n        },\r\n        allowOutsideClick: () => !Swal.isLoading()\r\n      }).then((result) => {\r\n        console.log(result);\r\n        if (result.isConfirmed) {\r\n          Swal.fire({\r\n            confirmButtonText:'OK',\r\n            title: `${result.value.status}`,\r\n            preConfirm: (ok) =>{\r\n              this.regEnterPassword();\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    isValidPhoneNumber(phone) {\r\n      if (phone.length < 11 || phone.length > 11)\r\n        return false;\r\n\r\n      for (let i = 0; i < phone.length; i++) {\r\n        if (i == 2) {\r\n          if (phone[i] != '/')\r\n            return false;\r\n        }\r\n        else if (i == 6) {\r\n          if (phone[i] != \"-\")\r\n            return false;\r\n        }\r\n        else if (isNaN(phone[i]))\r\n            return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    async regEnterPassword(error = \"\", pw = \"\") {\r\n      const { value: formValues } = await Swal.fire({\r\n        title: 'Registration step 4/7',\r\n        html:\r\n          '<p>Enter your password</p>' +\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          `<input id=\"swal-input1\" class=\"swal2-input\" type=\"password\" value=\"${pw}\">` +\r\n          '<p>Confirm your password</p>' +\r\n          '<input id=\"swal-input2\" class=\"swal2-input\" type=\"password\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value,\r\n            document.getElementById('swal-input2').value\r\n          ]\r\n        }\r\n      })\r\n      \r\n      if (formValues !== undefined) {\r\n        if (formValues[0] == \"\" || formValues[1] == \"\")\r\n          this.regEnterPassword(\"You must enter your password and confirm it!\");\r\n        else if (formValues[0] === formValues[1]) {\r\n            this.setState({password : formValues[0]});\r\n            this.regEnterBirthdate();\r\n        }\r\n        else\r\n          this.regEnterPassword(\"Passwords do not match!\", formValues[0]);\r\n      }\r\n    }\r\n\r\n    async regEnterBirthdate(error = \"\") {\r\n      const { value: birthdate } = await Swal.fire({\r\n        title: 'Registration step 5/7',\r\n        html: \r\n          '<p>Enter your birthdate</p>' +\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"date\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      const bDate = moment(birthdate[0]).valueOf(),\r\n            now = moment().valueOf(),\r\n            minValue = 31556952000 * 18; //age 18\r\n\r\n      if (birthdate !== undefined) {\r\n        if (birthdate[0] == \"\")\r\n          this.regEnterBirthdate(\"You didn't enter your birthdate!\");\r\n        else if(now - bDate < minValue)\r\n          this.regEnterBirthdate(\"You cannot register under the age of 18!\");\r\n        else {\r\n          this.setState({birthDate : bDate});\r\n          this.regEnterPassions();\r\n        }\r\n      }\r\n    }\r\n\r\n    async regEnterPassions(error = \"\") {\r\n      const { value: passions } = await Swal.fire({\r\n        title: 'Registration step 6/7',\r\n        html: \r\n          '<p>Enter minimum 3 passions comma separated</p>' +\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"text\" placeholder=\"(eg.: reading,coding,walking)\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (passions !== undefined) {\r\n        if (passions[0].split(',').length >= 3) {\r\n          this.setState({passions : passions[0]});\r\n          this.regUploadImage();\r\n        }\r\n        else\r\n          this.regEnterPassions(\"You have to enter at least 3 passions!\")\r\n      }\r\n    }\r\n\r\n    async regUploadImage(error = \"\") {\r\n      const { value: file } = await Swal.fire({\r\n        title: 'Registration step 7/7',\r\n        html:\r\n          '<p>Upload an image of yourself</p>' +\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}`,\r\n        input: 'file',\r\n        confirmButtonText: `Upload`,\r\n        inputAttributes: {\r\n          'accept': 'image/*',\r\n          'aria-label': 'Upload your profile picture'\r\n        }\r\n      })\r\n      \r\n      if (file !== undefined) {\r\n        if (file) {\r\n          this.showDetails(file);\r\n        }\r\n        else\r\n          this.regUploadImage(\"You must upload an image!\");\r\n      }\r\n    }\r\n\r\n    showDetails(file) {\r\n      const reader = new FileReader()\r\n      const {userName, email, phoneNumber, birthDate, passions} = this.state\r\n\r\n      reader.onload = (e) => {\r\n        const { value: accept } = Swal.fire({\r\n          title: 'Your details',\r\n          input: 'checkbox',\r\n          inputValue: 0,\r\n          inputPlaceholder: 'I agree with the terms and conditions',\r\n          imageUrl: e.target.result,\r\n          html:\r\n            `<p>Name: ${userName}</p>` +\r\n            `<p>E-mail: ${email}</p>` +\r\n            `<p>Phone: ${phoneNumber}</p>` +\r\n            `<p>Birthdate: ${moment(birthDate).format(\"MMMM Do YYYY\")}</p>` +\r\n            `<p>Passions: ${passions}</p>`,\r\n          imageAlt: 'The uploaded picture',\r\n          confirmButtonText: `Register`,\r\n          inputValidator: (result) => {\r\n            return !result ? 'You need to agree with T&C' : this.doRegistration(e.target.result);\r\n          }\r\n        })\r\n      }\r\n      reader.readAsDataURL(file)\r\n    }\r\n\r\n    async doRegistration(file) {\r\n      const {userName, email, phoneNumber, password, birthDate, passions} = this.state;\r\n\r\n      await axios.post(process.env.REACT_APP_IP+\"/api/register\", {\r\n        name: userName,\r\n        email: email,\r\n        phone_number: phoneNumber,\r\n        password: password,\r\n        birthdate: birthDate,\r\n        passion: passions,\r\n        rawImage: file\r\n      }).then(response => {\r\n        if (response.data.length != 0) {\r\n          this.props.setUser(response.data);\r\n        }\r\n      })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <>\r\n          <Helmet>\r\n              <title>Tinder | Dating, Make Friends & Meet New People</title>\r\n          </Helmet>\r\n  \r\n          <section style={{ height:\"100vh\",\r\n                            background: 'linear-gradient(rgba(0,0,0,.4), rgba(0,0,0,.4)), url(\"https://tinder.com/static/build/m/b07fe760ab4714aa3e932a15657494e5.webp\")',\r\n                            backgroundRepeat:\"no-repeat\",\r\n                            backgroundSize:\"cover\"}}\r\n          >\r\n            <nav className=\"navbar navbar-light bg-transparent justify-content-between\">\r\n              <div className=\"flex justify-start lg:w-0 lg:flex-1\">\r\n                <a href=\"/\">\r\n                    <span className=\"sr-only\">TindR</span>\r\n                    <img src=\"logo.svg\" width=\"55%\"></img>\r\n                </a>\r\n              </div>   \r\n  \r\n              <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\r\n                <a className=\"btn btn-success rounded-pill\"\r\n                    onClick={this.startLogin}\r\n                >\r\n                    LOG IN\r\n                </a>\r\n              </div>\r\n            </nav>\r\n  \r\n            <div className=\"container d-flex h-100 align-items-center\">\r\n              <div className=\"mx-auto text-center\">\r\n                <h1 className=\"mx-auto my-0 text-white\" style={{fontSize:\"800%\"}}>\r\n                  Swipe Right®\r\n                </h1>\r\n                <a  className=\"btn btn-danger js-scroll-trigger rounded-pill\"\r\n                    onClick={this.startRegister}\r\n                >\r\n                  CREATE ACCOUNT \r\n                </a>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default WelcomePage;",["147","148"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Card.js",["149","150"],"import React, { useState, useEffect } from \"react\";\r\nimport { string, number, array } from \"prop-types\";\r\nimport { animated, interpolate } from \"react-spring\";\r\nimport Carousel from \"nuka-carousel\";\r\nimport Test from './Test';\r\nimport { InputTags } from 'react-bootstrap-tagsinput';\r\nimport { useGesture } from \"react-with-gesture\";\r\n\r\nconst ageCalculation = (date) => {\r\n  const now = new Date();\r\n  const birthdate = new Date(date);\r\n\r\n  let diff = now.getTime() - birthdate.getTime();\r\n  return Math.floor(diff / (1000 * 60 * 60 * 24 * 365.25));\r\n}\r\n\r\nconst formatText = (text) => {\r\n  if(text !== null) {\r\n    let temp = \"\";\r\n    const charText = text.split('');\r\n\r\n    for(let i = 0; i < charText.length; i++) {\r\n      if(i < 86)\r\n        temp += charText[i];\r\n      else {\r\n        temp += \"...\";\r\n        break;\r\n      }\r\n    }\r\n    return temp;\r\n  }\r\n  else\r\n    return text;\r\n}\r\n\r\nconst Card = ({ i, x, y, rot, scale, trans, bind, data }) => {\r\n  const { name, age, distance, text, pics, anthem, activity } = data[i];\r\n\r\n  const [userMeta, setData] = useState([]);\r\n\r\n  const handleClick = () => {\r\n    userMeta.length === 0 ? setData(data[i].user) : setData([]);\r\n  }\r\n\r\n  const showMeta = (user) => {\r\n    if(user.length !== 0) {\r\n      return (\r\n        <>\r\n          <div>\r\n            {user.description !== null &&\r\n              <p>{user.description}</p>\r\n            }\r\n            {user.gender !== null &&\r\n              <p>Gender: {user.gender}</p>\r\n            }\r\n            {user.job_title !== null &&\r\n              <p>Current job: {user.job_title}</p>\r\n            }\r\n            {user.company !== null &&\r\n              <p>Company: {user.company}</p>\r\n            }\r\n            {user.school !== null &&\r\n              <p>School: {user.school}</p>\r\n            }\r\n            {user.sexual_orientation !== null &&\r\n              <p>Sexual orientation: {user.sexual_orientation}</p>\r\n            }\r\n            {anthem !== null &&\r\n              <div>\r\n                <label>Anthem:</label>\r\n                <Test songID={anthem}></Test>\r\n            </div>\r\n            }\r\n            <InputTags values={user.passion.split(\",\")} onTags={(value) => console.log(value)} />\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <animated.div\r\n        key={i}\r\n        style={{\r\n          transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`)\r\n        }}\r\n      >\r\n        <animated.div\r\n          {...bind(i)}\r\n          style={{\r\n            transform: interpolate([rot, scale], trans)\r\n          }}\r\n        >\r\n          <div id=\"dc\" >\r\n            <Carousel>\r\n              {pics.map((pic, index) => (\r\n                <img id=\"di\" src={pic} key={index} alt=\"profilePicture\" />\r\n              ))}\r\n            </Carousel>\r\n            <h2 onClick={handleClick}>{name},</h2>\r\n            <h2>{ageCalculation(age)}</h2>\r\n            <h6>{distance}</h6>\r\n            {activity === true &&\r\n              <h6>Recently active</h6>\r\n              /*\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" style={{height:'5%'}}>\r\n                    <circle cx=\"14\" cy=\"5\" r=\"5\" fill=\"green\" />\r\n                  </svg>\r\n              */\r\n            }\r\n            <br />\r\n            <h6>{formatText(text)}</h6>\r\n          </div>\r\n        </animated.div>\r\n        {showMeta(userMeta)}\r\n      </animated.div>\r\n    </>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  name: string,\r\n  age: number,\r\n  distance: string,\r\n  text: string,\r\n  pics: array\r\n};\r\n\r\nexport default Card;\r\n","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\spotify_config.js",[],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\chat\\Channel.js",[],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\chat\\Message.js",[],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\ItemLoading.js",[],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\NewSide.js",["151","152","153"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Picture_upload.js",["154","155"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\SideBar.js",["156","157","158","159","160","161"],{"ruleId":"162","severity":1,"message":"163","line":8,"column":17,"nodeType":"164","endLine":8,"endColumn":63},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"165","replacedBy":"169"},{"ruleId":"167","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":75,"column":29,"nodeType":"173","endLine":75,"endColumn":88},{"ruleId":"165","replacedBy":"174"},{"ruleId":"167","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":35,"column":23,"nodeType":"178","messageId":"179","endLine":35,"endColumn":25},{"ruleId":"165","replacedBy":"180"},{"ruleId":"167","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":90,"column":10,"nodeType":"184","messageId":"185","endLine":90,"endColumn":28},{"ruleId":"182","severity":1,"message":"186","line":182,"column":10,"nodeType":"184","messageId":"185","endLine":182,"endColumn":17},{"ruleId":"182","severity":1,"message":"187","line":209,"column":5,"nodeType":"184","messageId":"185","endLine":209,"endColumn":19},{"ruleId":"182","severity":1,"message":"188","line":210,"column":14,"nodeType":"184","messageId":"185","endLine":210,"endColumn":22},{"ruleId":"189","severity":1,"message":"190","line":405,"column":5,"nodeType":"191","endLine":405,"endColumn":7,"suggestions":"192"},{"ruleId":"165","replacedBy":"193"},{"ruleId":"167","replacedBy":"194"},{"ruleId":"165","replacedBy":"195"},{"ruleId":"167","replacedBy":"196"},{"ruleId":"162","severity":1,"message":"163","line":18,"column":21,"nodeType":"164","endLine":18,"endColumn":55},{"ruleId":"165","replacedBy":"197"},{"ruleId":"167","replacedBy":"198"},{"ruleId":"176","severity":1,"message":"177","line":80,"column":21,"nodeType":"178","messageId":"179","endLine":80,"endColumn":23},{"ruleId":"176","severity":1,"message":"177","line":59,"column":37,"nodeType":"178","messageId":"179","endLine":59,"endColumn":39},{"ruleId":"199","severity":1,"message":"200","line":68,"column":27,"nodeType":"201","messageId":"202","endLine":68,"endColumn":29},{"ruleId":"199","severity":1,"message":"200","line":68,"column":50,"nodeType":"201","messageId":"202","endLine":68,"endColumn":52},{"ruleId":"199","severity":1,"message":"200","line":110,"column":25,"nodeType":"201","messageId":"202","endLine":110,"endColumn":27},{"ruleId":"199","severity":1,"message":"200","line":138,"column":22,"nodeType":"201","messageId":"202","endLine":138,"endColumn":24},{"ruleId":"199","severity":1,"message":"200","line":140,"column":41,"nodeType":"201","messageId":"202","endLine":140,"endColumn":43},{"ruleId":"199","severity":1,"message":"200","line":140,"column":76,"nodeType":"201","messageId":"202","endLine":140,"endColumn":78},{"ruleId":"199","severity":1,"message":"200","line":158,"column":39,"nodeType":"201","messageId":"202","endLine":158,"endColumn":41},{"ruleId":"199","severity":1,"message":"200","line":191,"column":22,"nodeType":"201","messageId":"202","endLine":191,"endColumn":24},{"ruleId":"199","severity":1,"message":"200","line":258,"column":15,"nodeType":"201","messageId":"202","endLine":258,"endColumn":17},{"ruleId":"199","severity":1,"message":"203","line":259,"column":24,"nodeType":"201","messageId":"202","endLine":259,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":262,"column":20,"nodeType":"201","messageId":"202","endLine":262,"endColumn":22},{"ruleId":"199","severity":1,"message":"203","line":263,"column":24,"nodeType":"201","messageId":"202","endLine":263,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":292,"column":27,"nodeType":"201","messageId":"202","endLine":292,"endColumn":29},{"ruleId":"199","severity":1,"message":"200","line":292,"column":50,"nodeType":"201","messageId":"202","endLine":292,"endColumn":52},{"ruleId":"199","severity":1,"message":"200","line":324,"column":26,"nodeType":"201","messageId":"202","endLine":324,"endColumn":28},{"ruleId":"182","severity":1,"message":"204","line":389,"column":24,"nodeType":"184","messageId":"185","endLine":389,"endColumn":30},{"ruleId":"199","severity":1,"message":"203","line":423,"column":34,"nodeType":"201","messageId":"202","endLine":423,"endColumn":36},{"ruleId":"171","severity":1,"message":"172","line":445,"column":21,"nodeType":"173","endLine":445,"endColumn":53},{"ruleId":"205","severity":1,"message":"206","line":450,"column":17,"nodeType":"173","endLine":452,"endColumn":18},{"ruleId":"205","severity":1,"message":"206","line":463,"column":17,"nodeType":"173","endLine":465,"endColumn":18},{"ruleId":"165","replacedBy":"207"},{"ruleId":"167","replacedBy":"208"},{"ruleId":"182","severity":1,"message":"209","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"210","line":7,"column":10,"nodeType":"184","messageId":"185","endLine":7,"endColumn":20},{"ruleId":"182","severity":1,"message":"211","line":2,"column":35,"nodeType":"184","messageId":"185","endLine":2,"endColumn":39},{"ruleId":"182","severity":1,"message":"212","line":2,"column":41,"nodeType":"184","messageId":"185","endLine":2,"endColumn":52},{"ruleId":"182","severity":1,"message":"213","line":2,"column":54,"nodeType":"184","messageId":"185","endLine":2,"endColumn":60},{"ruleId":"171","severity":1,"message":"172","line":136,"column":25,"nodeType":"173","endLine":136,"endColumn":57},{"ruleId":"214","severity":1,"message":"215","line":148,"column":25,"nodeType":"173","endLine":148,"endColumn":158},{"ruleId":"182","severity":1,"message":"216","line":4,"column":9,"nodeType":"184","messageId":"185","endLine":4,"endColumn":14},{"ruleId":"182","severity":1,"message":"217","line":14,"column":8,"nodeType":"184","messageId":"185","endLine":14,"endColumn":16},{"ruleId":"182","severity":1,"message":"218","line":16,"column":8,"nodeType":"184","messageId":"185","endLine":16,"endColumn":15},{"ruleId":"176","severity":1,"message":"177","line":190,"column":39,"nodeType":"178","messageId":"179","endLine":190,"endColumn":41},{"ruleId":"205","severity":1,"message":"219","line":260,"column":11,"nodeType":"173","endLine":260,"endColumn":60},{"ruleId":"220","severity":1,"message":"221","line":395,"column":21,"nodeType":"173","endLine":395,"endColumn":132},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["222"],"no-negated-in-lhs",["223"],["222"],["223"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["222"],["223"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["222"],["223"],"no-unused-vars","'SliderColumnFilter' is defined but never used.","Identifier","unusedVar","'shuffle' is defined but never used.","'setColumnOrder' is assigned a value but never used.","'expanded' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has missing dependencies: 'data' and 'updateTicket'. Either include them or remove the dependency array. If 'updateTicket' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["224"],["222"],["223"],["222"],["223"],["222"],["223"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'accept' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["222"],["223"],"'useEffect' is defined but never used.","'useGesture' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Badge' is defined but never used.","'Checkbox' is defined but never used.","'NewSide' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-pascal-case","Imported JSX component Picture_upload must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},"Update the dependencies array to be: [data, updateTicket]",{"range":"227","text":"228"},[11182,11184],"[data, updateTicket]"]