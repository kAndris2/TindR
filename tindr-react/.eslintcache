[{"/home/lara/TindR/tindr-react/src/index.js":"1","/home/lara/TindR/tindr-react/src/reportWebVitals.js":"2","/home/lara/TindR/tindr-react/src/App.js":"3","/home/lara/TindR/tindr-react/src/components/Settings.js":"4","/home/lara/TindR/tindr-react/src/components/Asd.js":"5","/home/lara/TindR/tindr-react/src/components/Recommendations.js":"6","/home/lara/TindR/tindr-react/src/components/WelcomePage.js":"7","/home/lara/TindR/tindr-react/src/components/SideBar.js":"8"},{"size":597,"mtime":1607511733050,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1606467231072,"results":"11","hashOfConfig":"10"},{"size":2389,"mtime":1607941156478,"results":"12","hashOfConfig":"10"},{"size":4211,"mtime":1607941070486,"results":"13","hashOfConfig":"10"},{"size":1422,"mtime":1607941702409,"results":"14","hashOfConfig":"10"},{"size":9909,"mtime":1607935720732,"results":"15","hashOfConfig":"10"},{"size":15832,"mtime":1607599357072,"results":"16","hashOfConfig":"10"},{"size":9106,"mtime":1607942115094,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"okqy49",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/lara/TindR/tindr-react/src/index.js",[],["38","39"],"/home/lara/TindR/tindr-react/src/reportWebVitals.js",[],"/home/lara/TindR/tindr-react/src/App.js",["40","41","42"],"/home/lara/TindR/tindr-react/src/components/Settings.js",["43","44","45","46","47"],"/home/lara/TindR/tindr-react/src/components/Asd.js",["48","49","50"],"/home/lara/TindR/tindr-react/src/components/Recommendations.js",["51","52","53","54","55","56","57","58"],"import React, {Component} from 'react';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport moment from \"moment\";\nimport styles from \"./css/Recommendations.module.css\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { faHeartbeat } from '@fortawesome/free-solid-svg-icons'\n\nclass Recommendations extends Component {\n    constructor() {\n      super();\n\n      this.state = {\n          recommendations: [],\n          pictures: [],\n          currentPictureIndex: 0,\n          isLoading: true,\n          showProfile: false,\n          current: {\n              index: undefined,\n              user: undefined\n          }\n      }\n\n      this.getRecommendations = this.getRecommendations.bind(this);\n      this.getNextProfile = this.getNextProfile.bind(this);\n      this.getCurrentData = this.getCurrentData.bind(this);\n      this.handleLike = this.handleLike.bind(this);\n      this.handleDislike = this.handleDislike.bind(this);\n      this.handleKeyDown = this.handleKeyDown.bind(this);\n      this.setNextPicture = this.setNextPicture.bind(this);\n      this.setPreviousPicture = this.setPreviousPicture.bind(this);\n      this.showProfile = this.showProfile.bind(this);\n      this.ageCalculation = this.ageCalculation.bind(this);\n      this.getCurrentPictures = this.getCurrentPictures.bind(this);\n    }\n\n    async componentDidMount() {\n        await this.getRecommendations();\n        await this.getCurrentPictures();\n    }\n\n    async getRecommendations() {\n        await axios.get(`http://${process.env.REACT_APP_IP}:8000/api/recommendations/${this.props.userID}`)\n        .then(response => {\n            let updCurrent = {\n                index: 0,\n                user: response.data.length === undefined ? response.data : response.data[0]\n            }\n\n            this.setState({\n                recommendations : response.data,\n                current : updCurrent\n            });\n        })\n    }\n\n   async getCurrentPictures() {\n       const { current } = this.state;\n\n        await axios.get(`http://${process.env.REACT_APP_IP}:8000/api/pictures/${current.user.id}`)\n            .then(response => {\n                Promise.all(response.data.map(p => {\n                    this.setState({\n                        pictures: p,\n                        isLoading: false\n                    });\n                }))\n            });\n   }\n\n    async getNextProfile() {\n        const { recommendations, current } = this.state;\n        console.log(recommendations[current.index + 1])\n\n        if (recommendations[current.index + 1] !== undefined) {\n            let updCurrent = {\n                index: current.index + 1,\n                user: recommendations[current.index + 1]\n            }\n            await this.setState({\n                current : updCurrent,\n                isLoading : true\n            })\n            this.getCurrentPictures();\n        }\n        else {\n            this.setState({\n                current : {\n                    index: 0,\n                    user: undefined\n                },\n                isLoading : false\n            })\n        }\n    }\n\n    setNextPicture() {\n        const { currentPictureIndex, pictures } = this.state;\n\n        const max = pictures.length -1;\n        const next = currentPictureIndex + 1;\n        \n        if (next <= max)\n            this.setState({currentPictureIndex: next})\n        else\n            this.setState({currentPictureIndex: 0});\n    }\n\n    setPreviousPicture() {\n        const { currentPictureIndex, pictures } = this.state;\n\n        const max = pictures.length -1;\n        const previous = currentPictureIndex - 1;\n\n        if (previous < 0) \n            this.setState({currentPictureIndex : max});\n        else\n            this.setState({currentPictureIndex : previous});\n    }\n\n    showProfile() {\n        const { current, showProfile } = this.state;\n        const user = current.user;\n\n        if(showProfile) {\n            return (\n                <>\n                    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.15.1/css/all.css\" integrity=\"sha384-vp86vTRFVJgpjF9jiIGPEEqYqlDwgyBgEF109VFjmqGmIY/Y4HV4d3Gp2irVfcrp\" crossorigin=\"anonymous\"></link>\n                    \n                    <p>\n                        <span className=\"fa fa-info-circle\" /> \n                        Description: {user.description !== null ? user.description : \"N/A\"}\n                    </p>\n                    <p>Birthdate: {user.birthdate !== null ? moment(user.birthdate).format('MMMM Do YYYY') : \"N/A\"}</p>\n                    <p>School: {user.school !== null ? user.school : \"N/A\"}</p>\n                    <p>Works at: {user.company !== null ? user.company : \"N/A\"}</p>\n                    <p>Position: {user.job_title !== null ? user.job_title : \"N/A\"}</p>\n                    <p>Gender: {user.gender !== null ? user.gender : \"N/A\"}</p>\n                    <p>Passions: {user.passion !== null ? user.passion : \"N/A\"}</p>\n                    <p>Sexual Orientation: {user.sexual_orientation !== null ? user.sexual_orientation : \"N/A\"}</p>\n\n                    {user.anthem !== null &&\n                        <iframe width=\"560\" height=\"315\" \n                                src={`https://www.youtube.com/embed/${user.anthem}`}\n                                frameborder=\"0\" \n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n                                allowfullscreen\n                            >\n                        </iframe>\n                    }\n                </>\n            );\n        }\n    }\n\n    ageCalculation(date) {\n        const now = new Date();\n        const birthdate = new Date(date);\n\n        let diff = now.getTime() - birthdate.getTime();\n        return Math.floor(diff / (1000 * 60 * 60 * 24 * 365.25));\n    }\n\n    getCurrentData() {\n        const { current, pictures, currentPictureIndex } = this.state;\n\n        if (current.user !== undefined) {\n            const route = pictures.length === undefined ? pictures.route : pictures[currentPictureIndex].route;\n            /*\n            //https://codepen.io/RobVermeer/pen/japZpY?editors=1000\n            return (\n                <>\n                    <div class={styles[\"tinder\"]}>\n\n                        <div className={styles[\"tinder--status\"]}>\n                            <FontAwesomeIcon icon={faMinusCircle} />\n                            <FontAwesomeIcon icon={faHeartbeat} />\n                        </div>\n\n                        <div className={styles[\"tinder--cards\"]}>\n                            <div className={styles[\"tinder--card\"]}>\n                                <img src={route} />\n                                <h3>{current.user.name} {this.ageCalculation(current.user.birthdate)}</h3>\n                            </div>\n                        </div>\n\n                        <div className={styles[\"tinder--buttons\"]}>\n                            <button id=\"nope\"><FontAwesomeIcon icon={faMinusCircle} /></button>\n                            <button id=\"love\"><FontAwesomeIcon icon={faHeartbeat} /></button>\n                        </div>\n\n                    </div>\n                </>\n            );\n            */\n            \n            return(\n                <>\n                    <img src={route} />\n\n                    <div className=\"mx-auto my-0 text-red\">\n                        <button onClick={this.handleDislike}>Dislike</button>\n                        <button onClick={this.handleLike}>Like</button>\n\n                        <h1>{current.user.name} {this.ageCalculation(current.user.birthdate)}</h1>\n                    </div>\n                    \n                    {this.showProfile()}\n                </>\n            );\n        }\n        else {\n            return(\n                <>\n                    No more!\n                </>\n            );\n        }\n    }\n\n    async handleLike() {\n        const { current } = this.state;\n\n        await axios.post(`http://${process.env.REACT_APP_IP}:8000/api/add_like`, {\n            giverid: this.props.userID,\n            receiverid: current.user.id\n        });\n        this.getNextProfile();\n    }\n\n    async handleDislike() {\n        const { current } = this.state;\n\n        await axios.post(`http://${process.env.REACT_APP_IP}:8000/api/add_dislike`, {\n            giverid: this.props.userID,\n            receiverid: current.user.id\n        });\n        this.getNextProfile();\n    }\n\n    handleKeyDown(event) {\n        switch(event.key) {\n            case \"ArrowRight\": {\n                this.handleLike();\n                break;\n            }\n            case \"ArrowLeft\": {\n                this.handleDislike();\n                break;\n            }\n            case \" \": { //Space\n                this.setNextPicture();\n                break;\n            }\n            case \"Backspace\": {\n                this.setPreviousPicture();\n                break;\n            }\n            case \"ArrowUp\": {\n                this.setState({showProfile : true});\n                break;\n            }\n            case \"ArrowDown\": {\n                this.setState({showProfile : false});\n                break;\n            }\n            default:\n        }\n    }\n\n    render() {\n        const { isLoading } = this.state;\n\n        if (!isLoading) {\n            return (\n                <>\n                    <div onKeyDown={this.handleKeyDown} tabIndex=\"0\" className=\"container d-flex h-100 align-items-center\">\n                        <div className=\"mx-auto text-center\">\n                            {this.getCurrentData()}\n                        </div>\n                    </div>\n                </>\n            );\n        }\n        else\n            return (\n                <h1>Loading...</h1>\n            );\n    }\n}\n\nexport default Recommendations;","/home/lara/TindR/tindr-react/src/components/WelcomePage.js",["59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78"],"import React, {Component} from 'react';\nimport { Helmet } from 'react-helmet';\nimport Swal from \"sweetalert2\";\nimport axios from 'axios';\nimport moment from \"moment\";\nimport ReactCodeInput from 'react-code-input';\nimport withReactContent from 'sweetalert2-react-content'\n\nclass WelcomePage extends Component {\n    constructor() {\n      super();\n\n      this.state = {\n        apikey:'6259e30396ee22afa1b50ed0d8468bd7be1204de',\n        appkey:'a1yqe5e4o6a6eborahy7',\n        userName: undefined,\n        email: undefined,\n        phoneNumber: undefined,\n        password: undefined,\n        confirmPass: undefined,\n        birthDate: undefined,\n        passions: undefined,\n      }\n\n      this.startLogin = this.startLogin.bind(this);\n      this.handleLogin = this.handleLogin.bind(this);\n      this.doLogin = this.doLogin.bind(this);\n      this.startRegister = this.startRegister.bind(this);\n      this.regEnterUsername = this.regEnterUsername.bind(this);\n      this.regEnterEmail = this.regEnterEmail.bind(this);\n      this.isValidEmail = this.isValidEmail.bind(this);\n      this.regEnterPhoneNumber = this.regEnterPhoneNumber.bind(this);\n      this.isValidPhoneNumber = this.isValidPhoneNumber.bind(this);\n      this.regEnterPassword = this.regEnterPassword.bind(this);\n      this.regEnterBirthdate = this.regEnterBirthdate.bind(this);\n      this.regEnterPassions = this.regEnterPassions.bind(this);\n      this.regUploadImage = this.regUploadImage.bind(this);\n      this.showDetails = this.showDetails.bind(this);\n      this.doRegistration = this.doRegistration.bind(this);\n      this.requestPin = this.requestPin.bind(this);\n      this.validatePin = this.validatePin.bind(this);\n    }\n\n    async startLogin() {\n      await this.handleLogin();\n    }\n\n    async handleLogin(error = \"\") {\n      const { value: formValues } = await Swal.fire({\n        title: 'Sign in',\n        html:\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>\\n\\n` : \"\"}` +\n          '<p>Enter your email address</p>' +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"email\">' +\n          '<p>Enter your password</p>' +\n          '<input id=\"swal-input2\" class=\"swal2-input\" type=\"password\">',\n        focusConfirm: false,\n        confirmButtonText: `Sign in`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value,\n            document.getElementById('swal-input2').value\n          ]\n        }\n      })\n\n      if (formValues !== undefined) {\n        if (formValues[0] == \"\" || formValues[1] == \"\") {\n          this.handleLogin(\"You must be enter your username and your password!\");\n        }\n        else\n          this.doLogin(formValues[0], formValues[1]);\n      }\n    }\n\n    doLogin(email, password) {\n      axios.post(\"http://\"+process.env.REACT_APP_IP+\":8000/api/login\", {\n        email: email,\n        password: password\n      }).then(response => {\n        if (response.data.length !== 0) {\n          this.props.setUser(response.data);\n        }\n        else\n          this.handleLogin(\"Incorrect e-mail or password!\")\n      })\n    }\n\n    async startRegister() {\n      await this.regEnterUsername();\n    }\n\n    async regEnterUsername(error = \"\") {\n      const { value: username } = await Swal.fire({\n        title: 'Registration step 1/7',\n        html:\n          '<p>Enter your username</p>' +\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"text\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      if (username !== undefined) {\n        if (username[0] == \"\")\n          this.regEnterUsername(\"You must be enter your username!\");\n        else if (username[0].length <= 3)\n          this.regEnterUsername(\"Username must have 4 characters long!\");\n        else {\n            this.setState({userName : username[0]});\n            this.regEnterEmail();\n        }\n      }\n    }\n\n    async regEnterEmail(error = \"\") {\n      const { value: email } = await Swal.fire({\n        title: 'Registration step 2/7',\n        html:\n          '<p>Enter your e-mail address</p>' +\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"email\" placeholder=\"(eg.: somebody@example.com)\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      if (email !== undefined) {\n        if (email[0] == \"\")\n          return this.regEnterEmail(\"You must be enter your e-mail address!\")\n        else if (email[0].includes(\"@\") == false || email[0].includes(\".\") == false)\n          return this.regEnterEmail(\"Invalid e-mail address!\")\n      \n        const check = await this.isValidEmail(email[0])\n\n        if (check) {\n          this.setState({email : email[0]});\n          this.regEnterPhoneNumber();\n        } \n        else\n          this.regEnterEmail(\"This e-mail is already in use!\")\n      }\n    }\n\n    async isValidEmail(email) {\n      let temp = undefined;\n      await axios.get(\"http://\"+process.env.REACT_APP_IP+\":8000/api/valid_email/\" + email)\n      .then(response => {\n          temp = response.data.length == 0\n      })\n      return temp;\n    }\n\n    async requestPin(number){\n      await axios.post(\"http://\"+process.env.REACT_APP_IP+\":8000/api/getpin\",{\n        appkey:this.state.appkey,\n        apikey:this.state.apikey,\n        phone:number\n      })\n      .then(resp =>{\n        console.log(resp.data);\n      })\n    }\n\n    async regEnterPhoneNumber(error = \"\") {\n      const { value: phone } = await Swal.fire({\n        title: 'Registration step 3/7',\n        html:\n          '<p>Enter your phone number</p>' +\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"tel\" placeholder=\"(eg.: 30/123-4567)\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      if (phone !== undefined) {\n        if (phone[0] == \"\")\n          this.regEnterPhoneNumber(\"You must enter your phone number\");\n        else if (this.isValidPhoneNumber(phone[0])) {\n          let pinnumber = \"+36\" + phone[0].replace(\"/\",\"\").replace(\"-\",\"\");\n          this.requestPin(pinnumber);\n          this.validatePin(pinnumber);\n          this.setState({phoneNumber : phone[0]});\n          \n        } \n        else \n          this.regEnterPhoneNumber(`Invalid phone number!\\n'${phone}'`);\n      }\n    }\n    \n    async validatePin(pinnumber){\n      const mySwal = withReactContent(Swal);\n      let pin = 0;\n      let pinHtml = <ReactCodeInput type=\"number\" onChange={(e) => pin = e} fields={4}/>;\n      await mySwal.fire({\n        title: 'Enter the verification code',\n        html:pinHtml,\n        //input: 'text',\n        inputAttributes: {\n          autocapitalize: 'off'\n        },\n        showCancelButton: true,\n        confirmButtonText: 'Validate',\n        showLoaderOnConfirm: true,\n        preConfirm: (usuallytrue) => {\n          return axios.post(\"http://\"+process.env.REACT_APP_IP+\":8000/api/validatecode\",{\n            appkey:this.state.appkey,\n            apikey:this.state.apikey,\n            phone:pinnumber,\n            code:pin\n          })\n          .then(response => {\n            if (response.data.status !== \"SUCCESS\") {\n              throw new Error(response.statusText)\n            }\n            return response.data;\n          })\n          .catch(error => {\n            Swal.showValidationMessage(\n              `Request failed: ${error}`\n            )\n          })\n        },\n        allowOutsideClick: () => !Swal.isLoading()\n      }).then((result) => {\n        console.log(result);\n        if (result.isConfirmed) {\n          Swal.fire({\n            confirmButtonText:'OK',\n            title: `${result.value.status}`,\n            preConfirm: (ok) =>{\n              this.regEnterPassword();\n            }\n          })\n        }\n      })\n    }\n\n    isValidPhoneNumber(phone) {\n      if (phone.length < 11 || phone.length > 11)\n        return false;\n\n      for (let i = 0; i < phone.length; i++) {\n        if (i == 2) {\n          if (phone[i] != '/')\n            return false;\n        }\n        else if (i == 6) {\n          if (phone[i] != \"-\")\n            return false;\n        }\n        else if (isNaN(phone[i]))\n            return false;\n      }\n      return true;\n    }\n\n    async regEnterPassword(error = \"\", pw = \"\") {\n      const { value: formValues } = await Swal.fire({\n        title: 'Registration step 4/7',\n        html:\n          '<p>Enter your password</p>' +\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\n          `<input id=\"swal-input1\" class=\"swal2-input\" type=\"password\" value=\"${pw}\">` +\n          '<p>Confirm your password</p>' +\n          '<input id=\"swal-input2\" class=\"swal2-input\" type=\"password\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value,\n            document.getElementById('swal-input2').value\n          ]\n        }\n      })\n      \n      if (formValues !== undefined) {\n        if (formValues[0] == \"\" || formValues[1] == \"\")\n          this.regEnterPassword(\"You must be enter your password and confirm it!\");\n        else if (formValues[0] === formValues[1]) {\n            this.setState({password : formValues[0]});\n            this.regEnterBirthdate();\n        }\n        else\n          this.regEnterPassword(\"Invalid confirm password!\", formValues[0]);\n      }\n    }\n\n    async regEnterBirthdate(error = \"\") {\n      const { value: birthdate } = await Swal.fire({\n        title: 'Registration step 5/7',\n        html: \n          '<p>Enter your birthdate</p>' +\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"date\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      const bDate = moment(birthdate[0]).valueOf(),\n            now = moment().valueOf(),\n            minValue = 31556952000 * 18; //age 18\n\n      if (birthdate !== undefined) {\n        if (birthdate[0] == \"\")\n          this.regEnterBirthdate(\"You didn't enter your birthdate!\");\n        else if(now - bDate < minValue)\n          this.regEnterBirthdate(\"You cannot register under the age of 18!\");\n        else {\n          this.setState({birthDate : bDate});\n          this.regEnterPassions();\n        }\n      }\n    }\n\n    async regEnterPassions(error = \"\") {\n      const { value: passions } = await Swal.fire({\n        title: 'Registration step 6/7',\n        html: \n          '<p>Enter minimum 3 passions comma separated</p>' +\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"text\" placeholder=\"(eg.: reading,coding,walking)\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      if (passions !== undefined) {\n        if (passions[0].split(',').length >= 3) {\n          this.setState({passions : passions[0]});\n          this.regUploadImage();\n        }\n        else\n          this.regEnterPassions(\"You have to enter minimum 3 passion!\")\n      }\n    }\n\n    async regUploadImage(error = \"\") {\n      const { value: file } = await Swal.fire({\n        title: 'Registration step 7/7',\n        html:\n          '<p>Upload an image of yourself</p>' +\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}`,\n        input: 'file',\n        confirmButtonText: `Upload`,\n        inputAttributes: {\n          'accept': 'image/*',\n          'aria-label': 'Upload your profile picture'\n        }\n      })\n      \n      if (file !== undefined) {\n        if (file) {\n          this.showDetails(file);\n        }\n        else\n          this.regUploadImage(\"You must be upload an image!\");\n      }\n    }\n\n    showDetails(file) {\n      const reader = new FileReader()\n      const {userName, email, phoneNumber, birthDate, passions} = this.state\n\n      reader.onload = (e) => {\n        const { value: accept } = Swal.fire({\n          title: 'Your details',\n          input: 'checkbox',\n          inputValue: 0,\n          inputPlaceholder: 'I agree with the terms and conditions',\n          imageUrl: e.target.result,\n          html:\n            `<p>Name: ${userName}</p>` +\n            `<p>E-mail: ${email}</p>` +\n            `<p>Phone: ${phoneNumber}</p>` +\n            `<p>Birthdate: ${moment(birthDate).format(\"MMMM Do YYYY\")}</p>` +\n            `<p>Passions: ${passions}</p>`,\n          imageAlt: 'The uploaded picture',\n          confirmButtonText: `Register`,\n          inputValidator: (result) => {\n            return !result ? 'You need to agree with T&C' : this.doRegistration(e.target.result);\n          }\n        })\n      }\n      reader.readAsDataURL(file)\n    }\n\n    async doRegistration(file) {\n      const {userName, email, phoneNumber, password, birthDate, passions} = this.state;\n\n      await axios.post(\"http://\"+process.env.REACT_APP_IP+\":8000/api/register\", {\n        name: userName,\n        email: email,\n        phone_number: phoneNumber,\n        password: password,\n        birthdate: birthDate,\n        passion: passions,\n        rawImage: file\n      }).then(response => {\n        if (response.data.length != 0) {\n          this.props.setUser(response.data);\n        }\n      })\n    }\n  \n    render() {\n      return (\n        <>\n          <Helmet>\n              <title>Tinder | Dating, Make Friends & Meet New People</title>\n          </Helmet>\n  \n          <section style={{ height:\"100vh\",\n                            background: 'linear-gradient(rgba(0,0,0,.4), rgba(0,0,0,.4)), url(\"https://tinder.com/static/build/m/b07fe760ab4714aa3e932a15657494e5.webp\")',\n                            backgroundRepeat:\"no-repeat\",\n                            backgroundSize:\"cover\"}}\n          >\n            <nav className=\"navbar navbar-light bg-transparent justify-content-between\">\n              <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n                <a href=\"/\">\n                    <span className=\"sr-only\">TindR</span>\n                    <img src=\"logo.svg\" width=\"55%\"></img>\n                </a>\n              </div>   \n  \n              <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                <a className=\"btn btn-success rounded-pill\"\n                    onClick={this.startLogin}\n                >\n                    LOG IN\n                </a>\n              </div>\n            </nav>\n  \n            <div className=\"container d-flex h-100 align-items-center\">\n              <div className=\"mx-auto text-center\">\n                <h1 className=\"mx-auto my-0 text-white\" style={{fontSize:\"800%\"}}>\n                  Swipe Right®\n                </h1>\n                <a  className=\"btn btn-danger js-scroll-trigger rounded-pill\"\n                    onClick={this.startRegister}\n                >\n                  CREATE ACCOUNT \n                </a>\n              </div>\n            </div>\n            \n            <button onClick={() => this.requestPin(this.state.phoneNumber)}>TEEEEEST</button>\n          </section>\n        </>\n      );\n    }\n  }\n  \n  export default WelcomePage;",["79","80"],"/home/lara/TindR/tindr-react/src/components/SideBar.js",["81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":7,"column":8,"nodeType":"89","messageId":"90","endLine":7,"endColumn":16},{"ruleId":"87","severity":1,"message":"91","line":10,"column":8,"nodeType":"89","messageId":"90","endLine":10,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":24,"column":29,"nodeType":"94","messageId":"95","endLine":24,"endColumn":51,"fix":"96"},{"ruleId":"87","severity":1,"message":"97","line":2,"column":9,"nodeType":"89","messageId":"90","endLine":2,"endColumn":21},{"ruleId":"87","severity":1,"message":"98","line":2,"column":23,"nodeType":"89","messageId":"90","endLine":2,"endColumn":35},{"ruleId":"87","severity":1,"message":"99","line":2,"column":37,"nodeType":"89","messageId":"90","endLine":2,"endColumn":52},{"ruleId":"87","severity":1,"message":"100","line":2,"column":54,"nodeType":"89","messageId":"90","endLine":2,"endColumn":66},{"ruleId":"87","severity":1,"message":"101","line":80,"column":13,"nodeType":"89","messageId":"90","endLine":80,"endColumn":21},{"ruleId":"87","severity":1,"message":"102","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":14},{"ruleId":"87","severity":1,"message":"103","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":7,"column":3,"nodeType":"106","messageId":"107","endLine":10,"endColumn":4},{"ruleId":"87","severity":1,"message":"102","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":16},{"ruleId":"87","severity":1,"message":"108","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":14},{"ruleId":"87","severity":1,"message":"109","line":7,"column":10,"nodeType":"89","messageId":"90","endLine":7,"endColumn":25},{"ruleId":"87","severity":1,"message":"110","line":8,"column":10,"nodeType":"89","messageId":"90","endLine":8,"endColumn":23},{"ruleId":"87","severity":1,"message":"111","line":9,"column":10,"nodeType":"89","messageId":"90","endLine":9,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":65,"column":49,"nodeType":"114","messageId":"115","endLine":65,"endColumn":51},{"ruleId":"116","severity":1,"message":"117","line":146,"column":25,"nodeType":"118","endLine":151,"endColumn":30},{"ruleId":"119","severity":1,"message":"120","line":202,"column":21,"nodeType":"118","endLine":202,"endColumn":40},{"ruleId":"121","severity":1,"message":"122","line":68,"column":27,"nodeType":"123","messageId":"124","endLine":68,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":68,"column":50,"nodeType":"123","messageId":"124","endLine":68,"endColumn":52},{"ruleId":"121","severity":1,"message":"122","line":110,"column":25,"nodeType":"123","messageId":"124","endLine":110,"endColumn":27},{"ruleId":"121","severity":1,"message":"122","line":138,"column":22,"nodeType":"123","messageId":"124","endLine":138,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":140,"column":41,"nodeType":"123","messageId":"124","endLine":140,"endColumn":43},{"ruleId":"121","severity":1,"message":"122","line":140,"column":76,"nodeType":"123","messageId":"124","endLine":140,"endColumn":78},{"ruleId":"121","severity":1,"message":"122","line":158,"column":39,"nodeType":"123","messageId":"124","endLine":158,"endColumn":41},{"ruleId":"121","severity":1,"message":"122","line":191,"column":22,"nodeType":"123","messageId":"124","endLine":191,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":258,"column":15,"nodeType":"123","messageId":"124","endLine":258,"endColumn":17},{"ruleId":"121","severity":1,"message":"125","line":259,"column":24,"nodeType":"123","messageId":"124","endLine":259,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":262,"column":20,"nodeType":"123","messageId":"124","endLine":262,"endColumn":22},{"ruleId":"121","severity":1,"message":"125","line":263,"column":24,"nodeType":"123","messageId":"124","endLine":263,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":292,"column":27,"nodeType":"123","messageId":"124","endLine":292,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":292,"column":50,"nodeType":"123","messageId":"124","endLine":292,"endColumn":52},{"ruleId":"121","severity":1,"message":"122","line":324,"column":26,"nodeType":"123","messageId":"124","endLine":324,"endColumn":28},{"ruleId":"87","severity":1,"message":"126","line":389,"column":24,"nodeType":"89","messageId":"90","endLine":389,"endColumn":30},{"ruleId":"121","severity":1,"message":"125","line":423,"column":34,"nodeType":"123","messageId":"124","endLine":423,"endColumn":36},{"ruleId":"119","severity":1,"message":"120","line":445,"column":21,"nodeType":"118","endLine":445,"endColumn":53},{"ruleId":"127","severity":1,"message":"128","line":450,"column":17,"nodeType":"118","endLine":452,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":463,"column":17,"nodeType":"118","endLine":465,"endColumn":18},{"ruleId":"83","replacedBy":"129"},{"ruleId":"85","replacedBy":"130"},{"ruleId":"127","severity":1,"message":"131","line":114,"column":11,"nodeType":"118","endLine":114,"endColumn":60},{"ruleId":"127","severity":1,"message":"131","line":123,"column":11,"nodeType":"118","endLine":123,"endColumn":45},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'Settings' is defined but never used.","Identifier","unusedVar","'SideBar' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property checkLoginStatus.","MemberExpression","unexpectedWhitespace",{"range":"134","text":"135"},"'SettingsPane' is defined but never used.","'SettingsPage' is defined but never used.","'SettingsContent' is defined but never used.","'SettingsMenu' is defined but never used.","'settings' is assigned a value but never used.","'Helmet' is defined but never used.","'ReactCodeInput' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'styles' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faMinusCircle' is defined but never used.","'faHeartbeat' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'accept' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["132"],["133"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",[701,703],"."]