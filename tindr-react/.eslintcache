[{"/home/lara/TindR/tindr-react/src/index.js":"1","/home/lara/TindR/tindr-react/src/App.js":"2","/home/lara/TindR/tindr-react/src/reportWebVitals.js":"3","/home/lara/TindR/tindr-react/src/components/auth/Login.js":"4","/home/lara/TindR/tindr-react/src/components/Test.js":"5"},{"size":547,"mtime":1606468490694,"results":"6","hashOfConfig":"7"},{"size":2239,"mtime":1606477113338,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1606467231072,"results":"9","hashOfConfig":"7"},{"size":2403,"mtime":1606476109712,"results":"10","hashOfConfig":"7"},{"size":263,"mtime":1606472863036,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"okqy49",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/lara/TindR/tindr-react/src/index.js",[],["24","25"],"/home/lara/TindR/tindr-react/src/App.js",["26","27"],"import React, {Component} from 'react';\nimport './App.css';\nimport Login from './components/auth/Login';\nimport Test from './components/Test';\nimport { BrowserRouter as Router, Switch,\n  Route\n} from \"react-router-dom\";\nimport axios from 'axios';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false,\n\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      user: undefined,\n\n    }\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  async checkLoginStatus(){\n    //FUCKIN GARBAGE, DON'T DO THIS EVER. SHOULD BE REFACTORED\n    console.log(document.cookie);\n    if (document.cookie){\n      let uname = document.cookie.split(\"=\")[1];\n      let all = [];\n      let id = uname;\n\n      await axios.get(\"http://172.31.1.57:3000/api/user/\"+id)\n          .then(resp => {\n            this.setState({\n              loggedInStatus: \"LOGGED_IN\",\n              user: resp.data,\n              isLoading:false\n            })\n          })\n    }\n    else{\n      this.setState({\n        loggedInStatus: \"NOT_LOGGED_IN\",\n        user: {}\n      })\n    }\n  }\n\n\n  updateUser(newUser) {\n    this.setState({user: newUser});\n  }\n\n  logout() {\n    this.setState({\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      user: {}\n    })\n  }\n\n  handleLogin(data){\n    this.setState({\n      loggedInStatus: \"LOGGED_IN\",\n      user: data.user\n    })\n  }\n\n  async componentDidMount() {\n    await this.checkLoginStatus();\n  }\n\n  render() {\n    const {isLoading, loggedInStatus} = this.state;\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Test></Test>\n          </Route>\n            \n          <Route\n            exact\n            path=\"/login\"\n            render={props => (\n                <Login\n                    {...props}\n                    handleLogin={this.handleLogin}\n                    loggedInStatus={this.state.loggedInStatus}\n                    getCurrentTitle={this.getCurrentTitle}\n                />\n            )}\n            >\n          </Route>\n        </Switch>\n      </Router>\n      \n    )\n  }\n}\n","/home/lara/TindR/tindr-react/src/reportWebVitals.js",[],"/home/lara/TindR/tindr-react/src/components/auth/Login.js",[],"/home/lara/TindR/tindr-react/src/components/Test.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":32,"column":11,"nodeType":"34","messageId":"35","endLine":32,"endColumn":14},{"ruleId":"32","severity":1,"message":"36","line":76,"column":23,"nodeType":"34","messageId":"35","endLine":76,"endColumn":37},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'all' is assigned a value but never used.","Identifier","unusedVar","'loggedInStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]