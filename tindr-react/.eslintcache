[{"/home/lara/TindR/tindr-react/src/index.js":"1","/home/lara/TindR/tindr-react/src/reportWebVitals.js":"2","/home/lara/TindR/tindr-react/src/App.js":"3","/home/lara/TindR/tindr-react/src/components/SideBar.js":"4","/home/lara/TindR/tindr-react/src/components/WelcomePage.js":"5","/home/lara/TindR/tindr-react/src/components/Recommendations.js":"6","/home/lara/TindR/tindr-react/src/components/Asd.js":"7"},{"size":547,"mtime":1606468490694,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1606467231072,"results":"10","hashOfConfig":"9"},{"size":2218,"mtime":1607345369911,"results":"11","hashOfConfig":"9"},{"size":591,"mtime":1607347259331,"results":"12","hashOfConfig":"9"},{"size":13498,"mtime":1607344839421,"results":"13","hashOfConfig":"9"},{"size":3921,"mtime":1607344379160,"results":"14","hashOfConfig":"9"},{"size":486,"mtime":1607347254223,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"okqy49",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lara/TindR/tindr-react/src/index.js",[],["35","36"],"/home/lara/TindR/tindr-react/src/reportWebVitals.js",[],"/home/lara/TindR/tindr-react/src/App.js",["37","38"],"import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport axios from 'axios';\n\nimport WelcomePage from \"./components/WelcomePage\";\nimport SideBar from \"./components/SideBar\";\nimport Asd from './components/Asd'\nimport Recommendations from \"./components/Recommendations\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      user: undefined,\n      isLoggedIn: false,\n      isLoading: false\n    }\n\n    this.setCookie = this.setCookie.bind(this);\n    this.setUser = this.setUser.bind(this);\n    this.checkLoginStatus = this. checkLoginStatus.bind(this);\n  }\n\n  setCookie(id) {\n    Cookies.set('userid', id);\n  }\n\n  setUser(user) {\n    this.setCookie(user.id);\n    this.setState({\n      user : user,\n      isLoggedIn : true\n    });\n  }\n\n  async checkLoginStatus() {\n    const id = Cookies.get('userid');\n    if (id !== undefined) {\n      this.setState({isLoading : true})\n      await axios.get(\"http://172.31.1.57:8000/api/user/\" + id)\n      .then(response => {\n        this.setState({\n          user : response.data,\n          isLoggedIn : true,\n          isLoading : false\n        })\n      })\n    }\n  }\n\n  async componentDidMount() {\n    await this.checkLoginStatus();\n  }\n\n  render() {\n    const {user, isLoggedIn, isLoading} = this.state;\n\n    if (!isLoading) {\n      return (\n        <>\n          <Router>\n            <Switch>\n\n              <Route exact path=\"/\">\n                {isLoggedIn === false &&\n                  <WelcomePage\n                    setUser={this.setUser}\n                  ></WelcomePage>\n                }\n                {isLoggedIn === true &&\n                  <Asd\n                    user={user}\n                  ></Asd>\n                }\n              </Route>\n\n              <Route exact path=\"/recom\">\n                {isLoggedIn === true &&\n                  <Recommendations\n                    userID={user.id}\n                  ></Recommendations>\n                }\n              </Route>\n\n            </Switch>\n          </Router>\n        </>\n      );\n    }\n    else\n      return (\n        <h1>Loading...</h1>\n      );\n  }\n}\n\nexport default App;\n","/home/lara/TindR/tindr-react/src/components/SideBar.js",["39","40","41","42","43"],"/home/lara/TindR/tindr-react/src/components/WelcomePage.js",["44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63"],"import React, {Component} from 'react';\nimport { Helmet } from 'react-helmet';\nimport Swal from \"sweetalert2\";\nimport axios from 'axios';\nimport moment from \"moment\";\n\nclass WelcomePage extends Component {\n    constructor() {\n      super();\n\n      this.state = {\n        userName: undefined,\n        email: undefined,\n        phoneNumber: undefined,\n        password: undefined,\n        confirmPass: undefined,\n        birthDate: undefined,\n        passions: undefined\n      }\n\n      this.startLogin = this.startLogin.bind(this);\n      this.handleLogin = this.handleLogin.bind(this);\n      this.doLogin = this.doLogin.bind(this);\n      this.startRegister = this.startRegister.bind(this);\n      this.regEnterUsername = this.regEnterUsername.bind(this);\n      this.regEnterEmail = this.regEnterEmail.bind(this);\n      this.isValidEmail = this.isValidEmail.bind(this);\n      this.regEnterPhoneNumber = this.regEnterPhoneNumber.bind(this);\n      this.isValidPhoneNumber = this.isValidPhoneNumber.bind(this);\n      this.regEnterPassword = this.regEnterPassword.bind(this);\n      this.regEnterBirthdate = this.regEnterBirthdate.bind(this);\n      this.regEnterPassions = this.regEnterPassions.bind(this);\n      this.regUploadImage = this.regUploadImage.bind(this);\n      this.showDetails = this.showDetails.bind(this);\n      this.doRegistration = this.doRegistration.bind(this);\n    }\n\n    async startLogin() {\n      await this.handleLogin();\n    }\n\n    async handleLogin(error = \"\") {\n      const { value: formValues } = await Swal.fire({\n        title: 'Sign in',\n        html:\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>\\n\\n` : \"\"}` +\n          '<p>Enter your email address</p>' +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"email\">' +\n          '<p>Enter your password</p>' +\n          '<input id=\"swal-input2\" class=\"swal2-input\" type=\"password\">',\n        focusConfirm: false,\n        confirmButtonText: `Sign in`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value,\n            document.getElementById('swal-input2').value\n          ]\n        }\n      })\n\n      if (formValues !== undefined) {\n        if (formValues[0] == \"\" || formValues[1] == \"\") {\n          this.handleLogin(\"You must be enter your username and your password!\");\n        }\n        else\n          this.doLogin(formValues[0], formValues[1]);\n      }\n    }\n\n    doLogin(email, password) {\n      axios.post(\"http://172.31.1.57:8000/api/login\", {\n        email: email,\n        password: password\n      }).then(response => {\n        if (response.data.length !== 0) {\n          this.props.setUser(response.data);\n        }\n        else\n          this.handleLogin(\"Incorrect e-mail or password!\")\n      })\n    }\n\n    async startRegister() {\n      await this.regEnterUsername();\n    }\n\n    async regEnterUsername(error = \"\") {\n      const { value: username } = await Swal.fire({\n        title: 'Registration step 1/7',\n        html:\n          '<p>Enter your username</p>' +\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"text\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      if (username !== undefined) {\n        if (username[0] == \"\")\n          this.regEnterUsername(\"You must be enter your username!\");\n        else if (username[0].length <= 3)\n          this.regEnterUsername(\"Username must have 4 characters long!\");\n        else {\n            this.setState({userName : username[0]});\n            this.regEnterEmail();\n        }\n      }\n    }\n\n    async regEnterEmail(error = \"\") {\n      const { value: email } = await Swal.fire({\n        title: 'Registration step 2/7',\n        html:\n          '<p>Enter your e-mail address</p>' +\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"email\" placeholder=\"(eg.: somebody@example.com)\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      if (email !== undefined) {\n        if (email[0] == \"\")\n          return this.regEnterEmail(\"You must be enter your e-mail address!\")\n        else if (email[0].includes(\"@\") == false || email[0].includes(\".\") == false)\n          return this.regEnterEmail(\"Invalid e-mail address!\")\n      \n        const check = await this.isValidEmail(email[0])\n\n        if (check) {\n          this.setState({email : email[0]});\n          this.regEnterPhoneNumber();\n        } \n        else\n          this.regEnterEmail(\"This e-mail is already in use!\")\n      }\n    }\n\n    async isValidEmail(email) {\n      let temp = undefined;\n      await axios.get(\"http://172.31.1.57:8000/api/valid_email/\" + email)\n      .then(response => {\n          temp = response.data.length == 0\n      })\n      return temp;\n    }\n\n    async regEnterPhoneNumber(error = \"\") {\n      const { value: phone } = await Swal.fire({\n        title: 'Registration step 3/7',\n        html:\n          '<p>Enter your phone number</p>' +\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"tel\" placeholder=\"(eg.: 30/123-4567)\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      if (phone !== undefined) {\n        if (phone[0] == \"\")\n          this.regEnterPhoneNumber(\"You must be enter your phone number\");\n        else if (this.isValidPhoneNumber(phone[0])) {\n          this.setState({phoneNumber : phone[0]});\n          this.regEnterPassword();\n        } \n        else \n          this.regEnterPhoneNumber(`Invalid phone number!\\n'${phone}'`);\n      }\n    }\n\n    isValidPhoneNumber(phone) {\n      if (phone.length < 11 || phone.length > 11)\n        return false;\n\n      for (let i = 0; i < phone.length; i++) {\n        if (i == 2) {\n          if (phone[i] != '/')\n            return false;\n        }\n        else if (i == 6) {\n          if (phone[i] != \"-\")\n            return false;\n        }\n        else if (isNaN(phone[i]))\n            return false;\n      }\n      return true;\n    }\n\n    async regEnterPassword(error = \"\", pw = \"\") {\n      const { value: formValues } = await Swal.fire({\n        title: 'Registration step 4/7',\n        html:\n          '<p>Enter your password</p>' +\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\n          `<input id=\"swal-input1\" class=\"swal2-input\" type=\"password\" value=\"${pw}\">` +\n          '<p>Confirm your password</p>' +\n          '<input id=\"swal-input2\" class=\"swal2-input\" type=\"password\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value,\n            document.getElementById('swal-input2').value\n          ]\n        }\n      })\n      \n      if (formValues !== undefined) {\n        if (formValues[0] == \"\" || formValues[1] == \"\")\n          this.regEnterPassword(\"You must be enter your password and confirm it!\");\n        else if (formValues[0] === formValues[1]) {\n            this.setState({password : formValues[0]});\n            this.regEnterBirthdate();\n        }\n        else\n          this.regEnterPassword(\"Invalid confirm password!\", formValues[0]);\n      }\n    }\n\n    async regEnterBirthdate(error = \"\") {\n      const { value: birthdate } = await Swal.fire({\n        title: 'Registration step 5/7',\n        html: \n          '<p>Enter your birthdate</p>' +\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"date\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      const bDate = moment(birthdate[0]).valueOf(),\n            now = moment().valueOf(),\n            minValue = 31556952000 * 18; //age 18\n\n      if (birthdate !== undefined) {\n        if (birthdate[0] == \"\")\n          this.regEnterBirthdate(\"You didn't enter your birthdate!\");\n        else if(now - bDate < minValue)\n          this.regEnterBirthdate(\"You cannot register under the age of 18!\");\n        else {\n          this.setState({birthDate : bDate});\n          this.regEnterPassions();\n        }\n      }\n    }\n\n    async regEnterPassions(error = \"\") {\n      const { value: passions } = await Swal.fire({\n        title: 'Registration step 6/7',\n        html: \n          '<p>Enter minimum 3 passions comma separated</p>' +\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"text\" placeholder=\"(eg.: reading,coding,walking)\">',\n        focusConfirm: false,\n        confirmButtonText: `Next`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value\n          ]\n        }\n      })\n\n      if (passions !== undefined) {\n        if (passions[0].split(',').length >= 3) {\n          this.setState({passions : passions[0]});\n          this.regUploadImage();\n        }\n        else\n          this.regEnterPassions(\"You have to enter minimum 3 passion!\")\n      }\n    }\n\n    async regUploadImage(error = \"\") {\n      const { value: file } = await Swal.fire({\n        title: 'Registration step 7/7',\n        html:\n          '<p>Upload an image of yourself</p>' +\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}`,\n        input: 'file',\n        confirmButtonText: `Upload`,\n        inputAttributes: {\n          'accept': 'image/*',\n          'aria-label': 'Upload your profile picture'\n        }\n      })\n      \n      if (file !== undefined) {\n        if (file) {\n          this.showDetails(file);\n        }\n        else\n          this.regUploadImage(\"You must be upload an image!\");\n      }\n    }\n\n    showDetails(file) {\n      const reader = new FileReader()\n      const {userName, email, phoneNumber, birthDate, passions} = this.state\n\n      reader.onload = (e) => {\n        const { value: accept } = Swal.fire({\n          title: 'Your details',\n          input: 'checkbox',\n          inputValue: 0,\n          inputPlaceholder: 'I agree with the terms and conditions',\n          imageUrl: e.target.result,\n          html:\n            `<p>Name: ${userName}</p>` +\n            `<p>E-mail: ${email}</p>` +\n            `<p>Phone: ${phoneNumber}</p>` +\n            `<p>Birthdate: ${moment(birthDate).format(\"MMMM Do YYYY\")}</p>` +\n            `<p>Passions: ${passions}</p>`,\n          imageAlt: 'The uploaded picture',\n          confirmButtonText: `Register`,\n          inputValidator: (result) => {\n            return !result ? 'You need to agree with T&C' : this.doRegistration(e.target.result);\n          }\n        })\n      }\n      reader.readAsDataURL(file)\n    }\n\n    async doRegistration(file) {\n      const {userName, email, phoneNumber, password, birthDate, passions} = this.state;\n\n      await axios.post(\"http://172.31.1.57:8000/api/register\", {\n        name: userName,\n        email: email,\n        phone_number: phoneNumber,\n        password: password,\n        birthdate: birthDate,\n        passion: passions,\n        rawImage: file\n      }).then(response => {\n        if (response.data.length != 0) {\n          this.props.setUser(response.data);\n        }\n      })\n    }\n  \n    render() {\n      return (\n        <>\n          <Helmet>\n              <title>Tinder | Dating, Make Friends & Meet New People</title>\n          </Helmet>\n  \n          <section style={{ height:\"100vh\",\n                            background: 'linear-gradient(rgba(0,0,0,.4), rgba(0,0,0,.4)), url(\"https://tinder.com/static/build/m/b07fe760ab4714aa3e932a15657494e5.webp\")',\n                            backgroundRepeat:\"no-repeat\",\n                            backgroundSize:\"cover\"}}\n          >\n            <nav className=\"navbar navbar-light bg-transparent justify-content-between\">\n              <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n                <a href=\"/\">\n                    <span className=\"sr-only\">TindR</span>\n                    <img src=\"logo.svg\" width=\"55%\"></img>\n                </a>\n              </div>   \n  \n              <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                <a className=\"btn btn-success rounded-pill\"\n                    onClick={this.startLogin}\n                >\n                    LOG IN\n                </a>\n              </div>\n            </nav>\n  \n            <div className=\"container d-flex h-100 align-items-center\">\n              <div className=\"mx-auto text-center\">\n                <h1 className=\"mx-auto my-0 text-white\" style={{fontSize:\"800%\"}}>\n                  Swipe Right®\n                </h1>\n                <a  className=\"btn btn-danger js-scroll-trigger rounded-pill\"\n                    onClick={this.startRegister}\n                >\n                  CREATE ACCOUNT \n                </a>\n              </div>\n            </div>\n  \n          </section>\n        </>\n      );\n    }\n  }\n  \n  export default WelcomePage;",["64","65"],"/home/lara/TindR/tindr-react/src/components/Recommendations.js",["66","67"],"import React, {Component} from 'react';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\n\nclass Recommendations extends Component {\n    constructor() {\n      super();\n\n      this.state = {\n          recommendations: [],\n          isLoading: true,\n          current: {\n              index: undefined,\n              user: undefined\n          }\n      }\n\n      this.getRecommendations = this.getRecommendations.bind(this);\n      this.getNextProfile = this.getNextProfile.bind(this);\n      this.getCurrentData = this.getCurrentData.bind(this);\n      this.handleLike = this.handleLike.bind(this);\n      this.handleDislike = this.handleDislike.bind(this);\n      this.handleKeyDown = this.handleKeyDown.bind(this);\n    }\n\n    async componentDidMount() {\n        await this.getRecommendations();\n    }\n\n    async getRecommendations() {\n        await axios.get(\"http://172.31.1.57:8000/api/recommendations/\" + this.props.userID)\n        .then(response => {\n            let updCurrent = {\n                index: 0,\n                user: response.data.length === undefined ? response.data : response.data[0]\n            }\n\n            this.setState({\n                isLoading : false,\n                recommendations : response.data,\n                current : updCurrent\n            });\n        })\n    }\n\n    getNextProfile() {\n        const { recommendations, current } = this.state;\n\n        if (recommendations[current.index + 1] !== undefined) {\n            let updCurrent = {\n                index: current.index + 1,\n                user: recommendations[current.index + 1]\n            }\n            this.setState({current : updCurrent})\n        }\n        else\n            this.setState({\n                current : {\n                    index: 0,\n                    user: undefined\n                }\n            })\n    }\n\n    getCurrentData() {\n        const { current } = this.state;\n\n        if (current.user !== undefined) {\n            return(\n                <>\n                    <h1 className=\"mx-auto my-0 text-red\" style={{fontSize:\"800%\"}}>\n                        {current.user.name}\n                    </h1>\n                    <button onClick={this.handleDislike}>Dislike</button>\n                    <button onClick={this.handleLike}>Like</button>\n                </>\n            );\n        }\n        else {\n            return(\n                <>\n                    No more!\n                </>\n            );\n        }\n    }\n\n    handleLike() {\n        const { current } = this.state;\n        axios.post(\"http://172.31.1.57:8000/api/add_like\", {\n            giverid: this.props.userID,\n            receiverid: current.user.id\n        }).then(() => {\n            this.getNextProfile();\n        })\n    }\n\n    handleDislike() {\n        const { current } = this.state;\n        axios.post(\"http://172.31.1.57:8000/api/add_dislike\", {\n            giverid: this.props.userID,\n            receiverid: current.user.id\n        }).then(() => {\n            this.getNextProfile();\n        })\n    }\n\n    handleKeyDown(event) {\n        switch(event.key) {\n            case \"ArrowRight\": {\n                this.handleLike();\n                break;\n            }\n            case \"ArrowLeft\": {\n                this.handleDislike();\n                break;\n            }\n            default:\n        }\n    }\n\n    render() {\n        const { isLoading, current } = this.state;\n\n        if (!isLoading) {\n            return (\n                <>\n                    <div onKeyDown={this.handleKeyDown} tabIndex=\"0\" className=\"container d-flex h-100 align-items-center\">\n                        <div className=\"mx-auto text-center\">\n                            {this.getCurrentData()}\n                        </div>\n                    </div>\n                </>\n            );\n        }\n        else\n            return (\n                <h1>Loading...</h1>\n            );\n    }\n}\n\nexport default Recommendations;","/home/lara/TindR/tindr-react/src/components/Asd.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":7,"column":8,"nodeType":"74","messageId":"75","endLine":7,"endColumn":15},{"ruleId":"76","severity":1,"message":"77","line":23,"column":29,"nodeType":"78","messageId":"79","endLine":23,"endColumn":51,"fix":"80"},{"ruleId":"81","severity":1,"message":"82","line":4,"column":1,"nodeType":"83","endLine":28,"endColumn":3},{"ruleId":"84","severity":1,"message":"85","line":11,"column":7,"nodeType":"86","endLine":11,"endColumn":40},{"ruleId":"84","severity":1,"message":"85","line":17,"column":7,"nodeType":"86","endLine":17,"endColumn":41},{"ruleId":"84","severity":1,"message":"85","line":20,"column":7,"nodeType":"86","endLine":20,"endColumn":41},{"ruleId":"84","severity":1,"message":"85","line":23,"column":7,"nodeType":"86","endLine":23,"endColumn":41},{"ruleId":"87","severity":1,"message":"88","line":62,"column":27,"nodeType":"89","messageId":"90","endLine":62,"endColumn":29},{"ruleId":"87","severity":1,"message":"88","line":62,"column":50,"nodeType":"89","messageId":"90","endLine":62,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":104,"column":25,"nodeType":"89","messageId":"90","endLine":104,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":132,"column":22,"nodeType":"89","messageId":"90","endLine":132,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":134,"column":41,"nodeType":"89","messageId":"90","endLine":134,"endColumn":43},{"ruleId":"87","severity":1,"message":"88","line":134,"column":76,"nodeType":"89","messageId":"90","endLine":134,"endColumn":78},{"ruleId":"87","severity":1,"message":"88","line":152,"column":39,"nodeType":"89","messageId":"90","endLine":152,"endColumn":41},{"ruleId":"87","severity":1,"message":"88","line":174,"column":22,"nodeType":"89","messageId":"90","endLine":174,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":190,"column":15,"nodeType":"89","messageId":"90","endLine":190,"endColumn":17},{"ruleId":"87","severity":1,"message":"91","line":191,"column":24,"nodeType":"89","messageId":"90","endLine":191,"endColumn":26},{"ruleId":"87","severity":1,"message":"88","line":194,"column":20,"nodeType":"89","messageId":"90","endLine":194,"endColumn":22},{"ruleId":"87","severity":1,"message":"91","line":195,"column":24,"nodeType":"89","messageId":"90","endLine":195,"endColumn":26},{"ruleId":"87","severity":1,"message":"88","line":224,"column":27,"nodeType":"89","messageId":"90","endLine":224,"endColumn":29},{"ruleId":"87","severity":1,"message":"88","line":224,"column":50,"nodeType":"89","messageId":"90","endLine":224,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":256,"column":26,"nodeType":"89","messageId":"90","endLine":256,"endColumn":28},{"ruleId":"72","severity":1,"message":"92","line":321,"column":24,"nodeType":"74","messageId":"75","endLine":321,"endColumn":30},{"ruleId":"87","severity":1,"message":"91","line":355,"column":34,"nodeType":"89","messageId":"90","endLine":355,"endColumn":36},{"ruleId":"93","severity":1,"message":"94","line":377,"column":21,"nodeType":"86","endLine":377,"endColumn":53},{"ruleId":"84","severity":1,"message":"95","line":382,"column":17,"nodeType":"86","endLine":384,"endColumn":18},{"ruleId":"84","severity":1,"message":"95","line":395,"column":17,"nodeType":"86","endLine":397,"endColumn":18},{"ruleId":"68","replacedBy":"96"},{"ruleId":"70","replacedBy":"97"},{"ruleId":"72","severity":1,"message":"98","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":16},{"ruleId":"72","severity":1,"message":"99","line":123,"column":28,"nodeType":"74","messageId":"75","endLine":123,"endColumn":35},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'SideBar' is defined but never used.","Identifier","unusedVar","no-whitespace-before-property","Unexpected whitespace before property checkLoginStatus.","MemberExpression","unexpectedWhitespace",{"range":"102","text":"103"},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'accept' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["100"],["101"],"'Helmet' is defined but never used.","'current' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[651,653],"."]