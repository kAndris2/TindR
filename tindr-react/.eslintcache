[{"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\SideBar.js":"1","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Recommendations.js":"2","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\index.js":"3","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\WelcomePage.js":"4","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Asd.js":"5","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\App.js":"6","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Card.js":"7","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Deck.js":"8","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Settings.js":"9","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\reportWebVitals.js":"10","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\data.js":"11"},{"size":8841,"mtime":1608037333655,"results":"12","hashOfConfig":"13"},{"size":9584,"mtime":1607941601080,"results":"14","hashOfConfig":"13"},{"size":618,"mtime":1607676433648,"results":"15","hashOfConfig":"13"},{"size":16309,"mtime":1607945489538,"results":"16","hashOfConfig":"13"},{"size":1475,"mtime":1607945078487,"results":"17","hashOfConfig":"13"},{"size":2822,"mtime":1608029782140,"results":"18","hashOfConfig":"13"},{"size":1070,"mtime":1608028391160,"results":"19","hashOfConfig":"13"},{"size":2405,"mtime":1608038199919,"results":"20","hashOfConfig":"13"},{"size":4352,"mtime":1607945078492,"results":"21","hashOfConfig":"13"},{"size":362,"mtime":1606466984298,"results":"22","hashOfConfig":"13"},{"size":1659,"mtime":1608038209406,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"fgch4n",{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\SideBar.js",["51","52","53"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Recommendations.js",["54","55","56","57"],"import React, {Component} from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport TinderCard from 'react-tinder-card';\r\n\r\nclass Recommendations extends Component {\r\n    constructor() {\r\n      super();\r\n\r\n      this.state = {\r\n          recommendations: [],\r\n          pictures: [],\r\n          currentPictureIndex: 0,\r\n          isLoading: true,\r\n          showProfile: false,\r\n          current: {\r\n              index: undefined,\r\n              user: undefined\r\n          }\r\n      }\r\n\r\n      this.getRecommendations = this.getRecommendations.bind(this);\r\n      this.getNextProfile = this.getNextProfile.bind(this);\r\n      this.getCurrentData = this.getCurrentData.bind(this);\r\n      this.handleLike = this.handleLike.bind(this);\r\n      this.handleDislike = this.handleDislike.bind(this);\r\n      this.handleKeyDown = this.handleKeyDown.bind(this);\r\n      this.setNextPicture = this.setNextPicture.bind(this);\r\n      this.setPreviousPicture = this.setPreviousPicture.bind(this);\r\n      this.showProfile = this.showProfile.bind(this);\r\n      this.ageCalculation = this.ageCalculation.bind(this);\r\n      this.getCurrentPictures = this.getCurrentPictures.bind(this);\r\n\r\n      this.onCardLeftScreen = this.onCardLeftScreen.bind(this);\r\n      this.onSwipe = this.onSwipe.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getRecommendations();\r\n        await this.getCurrentPictures();\r\n    }\r\n\r\n    async getRecommendations() {\r\n        await axios.get(`http://${process.env.REACT_APP_IP}:8000/api/recommendations/${this.props.userID}`)\r\n        .then(response => {\r\n            let updCurrent = {\r\n                index: 0,\r\n                user: response.data.length === undefined ? response.data : response.data[0]\r\n            }\r\n\r\n            this.setState({\r\n                recommendations : response.data,\r\n                current : updCurrent\r\n            });\r\n        })\r\n    }\r\n\r\n   async getCurrentPictures() {\r\n       const { current } = this.state;\r\n\r\n        await axios.get(`http://${process.env.REACT_APP_IP}:8000/api/pictures/${current.user.id}`)\r\n            .then(response => {\r\n                Promise.all(response.data.map(p => {\r\n                    this.setState({\r\n                        pictures: p,\r\n                        isLoading: false\r\n                    });\r\n                }))\r\n            });\r\n   }\r\n\r\n    async getNextProfile() {\r\n        const { recommendations, current } = this.state;\r\n        console.log(recommendations[current.index + 1])\r\n\r\n        if (recommendations[current.index + 1] !== undefined) {\r\n            let updCurrent = {\r\n                index: current.index + 1,\r\n                user: recommendations[current.index + 1]\r\n            }\r\n            await this.setState({\r\n                current : updCurrent,\r\n                isLoading : true\r\n            })\r\n            this.getCurrentPictures();\r\n        }\r\n        else {\r\n            this.setState({\r\n                current : {\r\n                    index: 0,\r\n                    user: undefined\r\n                },\r\n                isLoading : false\r\n            })\r\n        }\r\n    }\r\n\r\n    setNextPicture() {\r\n        const { currentPictureIndex, pictures } = this.state;\r\n\r\n        const max = pictures.length -1;\r\n        const next = currentPictureIndex + 1;\r\n        \r\n        if (next <= max)\r\n            this.setState({currentPictureIndex: next})\r\n        else\r\n            this.setState({currentPictureIndex: 0});\r\n    }\r\n\r\n    setPreviousPicture() {\r\n        const { currentPictureIndex, pictures } = this.state;\r\n\r\n        const max = pictures.length -1;\r\n        const previous = currentPictureIndex - 1;\r\n\r\n        if (previous < 0) \r\n            this.setState({currentPictureIndex : max});\r\n        else\r\n            this.setState({currentPictureIndex : previous});\r\n    }\r\n\r\n    showProfile() {\r\n        const { current, showProfile } = this.state;\r\n        const user = current.user;\r\n\r\n        if(showProfile) {\r\n            return (\r\n                <>\r\n                    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.15.1/css/all.css\" integrity=\"sha384-vp86vTRFVJgpjF9jiIGPEEqYqlDwgyBgEF109VFjmqGmIY/Y4HV4d3Gp2irVfcrp\" crossorigin=\"anonymous\"></link>\r\n                    \r\n                    <p>\r\n                        <span className=\"fa fa-info-circle\" /> \r\n                        Description: {user.description !== null ? user.description : \"N/A\"}\r\n                    </p>\r\n                    <p>Birthdate: {user.birthdate !== null ? moment(user.birthdate).format('MMMM Do YYYY') : \"N/A\"}</p>\r\n                    <p>School: {user.school !== null ? user.school : \"N/A\"}</p>\r\n                    <p>Works at: {user.company !== null ? user.company : \"N/A\"}</p>\r\n                    <p>Position: {user.job_title !== null ? user.job_title : \"N/A\"}</p>\r\n                    <p>Gender: {user.gender !== null ? user.gender : \"N/A\"}</p>\r\n                    <p>Passions: {user.passion !== null ? user.passion : \"N/A\"}</p>\r\n                    <p>Sexual Orientation: {user.sexual_orientation !== null ? user.sexual_orientation : \"N/A\"}</p>\r\n\r\n                    {user.anthem !== null &&\r\n                        <iframe width=\"560\" height=\"315\" \r\n                                src={`https://www.youtube.com/embed/${user.anthem}`}\r\n                                frameborder=\"0\" \r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                                allowfullscreen\r\n                            >\r\n                        </iframe>\r\n                    }\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    ageCalculation(date) {\r\n        const now = new Date();\r\n        const birthdate = new Date(date);\r\n\r\n        let diff = now.getTime() - birthdate.getTime();\r\n        return Math.floor(diff / (1000 * 60 * 60 * 24 * 365.25));\r\n    }\r\n\r\n    getCurrentData() {\r\n        const { current, pictures, currentPictureIndex } = this.state;\r\n\r\n        if (current.user !== undefined) {\r\n            const route = pictures.length === undefined ? pictures.route : pictures[currentPictureIndex].route;\r\n            return(\r\n                <>\r\n                    <img src={route} />\r\n\r\n                    <div className=\"mx-auto my-0 text-red\">\r\n                        <button onClick={this.handleDislike}>Dislike</button>\r\n                        <button onClick={this.handleLike}>Like</button>\r\n\r\n                        <h1>{current.user.name} {this.ageCalculation(current.user.birthdate)}</h1>\r\n                    </div>\r\n                    \r\n                    {this.showProfile()}\r\n                </>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n                <>\r\n                    No more!\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    async handleLike() {\r\n        const { current } = this.state;\r\n\r\n        await axios.post(`http://${process.env.REACT_APP_IP}:8000/api/add_like`, {\r\n            giverid: this.props.userID,\r\n            receiverid: current.user.id\r\n        });\r\n        this.getNextProfile();\r\n    }\r\n\r\n    async handleDislike() {\r\n        const { current } = this.state;\r\n\r\n        await axios.post(`http://${process.env.REACT_APP_IP}:8000/api/add_dislike`, {\r\n            giverid: this.props.userID,\r\n            receiverid: current.user.id\r\n        });\r\n        this.getNextProfile();\r\n    }\r\n\r\n    handleKeyDown(event) {\r\n        switch(event.key) {\r\n            case \"ArrowRight\": {\r\n                this.handleLike();\r\n                break;\r\n            }\r\n            case \"ArrowLeft\": {\r\n                this.handleDislike();\r\n                break;\r\n            }\r\n            case \" \": { //Space\r\n                this.setNextPicture();\r\n                break;\r\n            }\r\n            case \"Backspace\": {\r\n                this.setPreviousPicture();\r\n                break;\r\n            }\r\n            case \"ArrowUp\": {\r\n                this.setState({showProfile : true});\r\n                break;\r\n            }\r\n            case \"ArrowDown\": {\r\n                this.setState({showProfile : false});\r\n                break;\r\n            }\r\n            default:\r\n        }\r\n    }\r\n\r\n    onSwipe(direction) {\r\n        console.log(direction)\r\n    }\r\n\r\n    onCardLeftScreen(id) {\r\n        console.log(id)\r\n    }\r\n\r\n    render() {\r\n        const { isLoading } = this.state;\r\n\r\n        if (!isLoading) {\r\n            /*\r\n            <div onKeyDown={this.handleKeyDown} tabIndex=\"0\" className=\"container d-flex h-100 align-items-center\">\r\n                        <div className=\"mx-auto text-center\">\r\n                            {this.getCurrentData()}\r\n                        </div>\r\n                    </div>\r\n            */\r\n            return (\r\n                <>\r\n                    <div onKeyDown={this.handleKeyDown} tabIndex=\"0\" className=\"container d-flex h-100 align-items-center\">\r\n                        <div className=\"mx-auto text-center\">\r\n                            <TinderCard onSwipe={this.onSwipe} onCardLeftScreen={() => this.onCardLeftScreen('fooBar')} preventSwipe={['right', 'left']}>\r\n                                {this.getCurrentData()}\r\n                            </TinderCard>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <h1>Loading...</h1>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Recommendations;","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\index.js",[],["58","59"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\WelcomePage.js",["60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79"],"import React, {Component} from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport Swal from \"sweetalert2\";\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport ReactCodeInput from 'react-code-input';\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nclass WelcomePage extends Component {\r\n    constructor() {\r\n      super();\r\n\r\n      this.state = {\r\n        apikey:'6259e30396ee22afa1b50ed0d8468bd7be1204de',\r\n        appkey:'a1yqe5e4o6a6eborahy7',\r\n        userName: undefined,\r\n        email: undefined,\r\n        phoneNumber: undefined,\r\n        password: undefined,\r\n        confirmPass: undefined,\r\n        birthDate: undefined,\r\n        passions: undefined,\r\n      }\r\n\r\n      this.startLogin = this.startLogin.bind(this);\r\n      this.handleLogin = this.handleLogin.bind(this);\r\n      this.doLogin = this.doLogin.bind(this);\r\n      this.startRegister = this.startRegister.bind(this);\r\n      this.regEnterUsername = this.regEnterUsername.bind(this);\r\n      this.regEnterEmail = this.regEnterEmail.bind(this);\r\n      this.isValidEmail = this.isValidEmail.bind(this);\r\n      this.regEnterPhoneNumber = this.regEnterPhoneNumber.bind(this);\r\n      this.isValidPhoneNumber = this.isValidPhoneNumber.bind(this);\r\n      this.regEnterPassword = this.regEnterPassword.bind(this);\r\n      this.regEnterBirthdate = this.regEnterBirthdate.bind(this);\r\n      this.regEnterPassions = this.regEnterPassions.bind(this);\r\n      this.regUploadImage = this.regUploadImage.bind(this);\r\n      this.showDetails = this.showDetails.bind(this);\r\n      this.doRegistration = this.doRegistration.bind(this);\r\n      this.requestPin = this.requestPin.bind(this);\r\n      this.validatePin = this.validatePin.bind(this);\r\n    }\r\n\r\n    async startLogin() {\r\n      await this.handleLogin();\r\n    }\r\n\r\n    async handleLogin(error = \"\") {\r\n      const { value: formValues } = await Swal.fire({\r\n        title: 'Sign in',\r\n        html:\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>\\n\\n` : \"\"}` +\r\n          '<p>Enter your email address</p>' +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"email\">' +\r\n          '<p>Enter your password</p>' +\r\n          '<input id=\"swal-input2\" class=\"swal2-input\" type=\"password\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Sign in`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value,\r\n            document.getElementById('swal-input2').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (formValues !== undefined) {\r\n        if (formValues[0] == \"\" || formValues[1] == \"\") {\r\n          this.handleLogin(\"You must be enter your username and your password!\");\r\n        }\r\n        else\r\n          this.doLogin(formValues[0], formValues[1]);\r\n      }\r\n    }\r\n\r\n    doLogin(email, password) {\r\n      axios.post(\"http://\"+process.env.REACT_APP_IP+\":8000/api/login\", {\r\n        email: email,\r\n        password: password\r\n      }).then(response => {\r\n        if (response.data.length !== 0) {\r\n          this.props.setUser(response.data);\r\n        }\r\n        else\r\n          this.handleLogin(\"Incorrect e-mail or password!\")\r\n      })\r\n    }\r\n\r\n    async startRegister() {\r\n      await this.regEnterUsername();\r\n    }\r\n\r\n    async regEnterUsername(error = \"\") {\r\n      const { value: username } = await Swal.fire({\r\n        title: 'Registration step 1/7',\r\n        html:\r\n          '<p>Enter your username</p>' +\r\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"text\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (username !== undefined) {\r\n        if (username[0] == \"\")\r\n          this.regEnterUsername(\"You must be enter your username!\");\r\n        else if (username[0].length <= 3)\r\n          this.regEnterUsername(\"Username must have 4 characters long!\");\r\n        else {\r\n            this.setState({userName : username[0]});\r\n            this.regEnterEmail();\r\n        }\r\n      }\r\n    }\r\n\r\n    async regEnterEmail(error = \"\") {\r\n      const { value: email } = await Swal.fire({\r\n        title: 'Registration step 2/7',\r\n        html:\r\n          '<p>Enter your e-mail address</p>' +\r\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"email\" placeholder=\"(eg.: somebody@example.com)\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (email !== undefined) {\r\n        if (email[0] == \"\")\r\n          return this.regEnterEmail(\"You must be enter your e-mail address!\")\r\n        else if (email[0].includes(\"@\") == false || email[0].includes(\".\") == false)\r\n          return this.regEnterEmail(\"Invalid e-mail address!\")\r\n      \r\n        const check = await this.isValidEmail(email[0])\r\n\r\n        if (check) {\r\n          this.setState({email : email[0]});\r\n          this.regEnterPhoneNumber();\r\n        } \r\n        else\r\n          this.regEnterEmail(\"This e-mail is already in use!\")\r\n      }\r\n    }\r\n\r\n    async isValidEmail(email) {\r\n      let temp = undefined;\r\n      await axios.get(\"http://\"+process.env.REACT_APP_IP+\":8000/api/valid_email/\" + email)\r\n      .then(response => {\r\n          temp = response.data.length == 0\r\n      })\r\n      return temp;\r\n    }\r\n\r\n    async requestPin(number){\r\n      await axios.post(\"http://\"+process.env.REACT_APP_IP+\":8000/api/getpin\",{\r\n        appkey:this.state.appkey,\r\n        apikey:this.state.apikey,\r\n        phone:number\r\n      })\r\n      .then(resp =>{\r\n        console.log(resp.data);\r\n      })\r\n    }\r\n\r\n    async regEnterPhoneNumber(error = \"\") {\r\n      const { value: phone } = await Swal.fire({\r\n        title: 'Registration step 3/7',\r\n        html:\r\n          '<p>Enter your phone number</p>' +\r\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"tel\" placeholder=\"(eg.: 30/123-4567)\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (phone !== undefined) {\r\n        if (phone[0] == \"\")\r\n          this.regEnterPhoneNumber(\"You must enter your phone number\");\r\n        else if (this.isValidPhoneNumber(phone[0])) {\r\n          let pinnumber = \"+36\" + phone[0].replace(\"/\",\"\").replace(\"-\",\"\");\r\n          this.requestPin(pinnumber);\r\n          this.validatePin(pinnumber);\r\n          this.setState({phoneNumber : phone[0]});\r\n          \r\n        } \r\n        else \r\n          this.regEnterPhoneNumber(`Invalid phone number!\\n'${phone}'`);\r\n      }\r\n    }\r\n    \r\n    async validatePin(pinnumber){\r\n      const mySwal = withReactContent(Swal);\r\n      let pin = 0;\r\n      let pinHtml = <ReactCodeInput type=\"number\" onChange={(e) => pin = e} fields={4}/>;\r\n      await mySwal.fire({\r\n        title: 'Enter the verification code',\r\n        html:pinHtml,\r\n        //input: 'text',\r\n        inputAttributes: {\r\n          autocapitalize: 'off'\r\n        },\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Validate',\r\n        showLoaderOnConfirm: true,\r\n        preConfirm: (usuallytrue) => {\r\n          return axios.post(\"http://\"+process.env.REACT_APP_IP+\":8000/api/validatecode\",{\r\n            appkey:this.state.appkey,\r\n            apikey:this.state.apikey,\r\n            phone:pinnumber,\r\n            code:pin\r\n          })\r\n          .then(response => {\r\n            if (response.data.status !== \"SUCCESS\") {\r\n              throw new Error(response.statusText)\r\n            }\r\n            return response.data;\r\n          })\r\n          .catch(error => {\r\n            Swal.showValidationMessage(\r\n              `Request failed: ${error}`\r\n            )\r\n          })\r\n        },\r\n        allowOutsideClick: () => !Swal.isLoading()\r\n      }).then((result) => {\r\n        console.log(result);\r\n        if (result.isConfirmed) {\r\n          Swal.fire({\r\n            confirmButtonText:'OK',\r\n            title: `${result.value.status}`,\r\n            preConfirm: (ok) =>{\r\n              this.regEnterPassword();\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    isValidPhoneNumber(phone) {\r\n      if (phone.length < 11 || phone.length > 11)\r\n        return false;\r\n\r\n      for (let i = 0; i < phone.length; i++) {\r\n        if (i == 2) {\r\n          if (phone[i] != '/')\r\n            return false;\r\n        }\r\n        else if (i == 6) {\r\n          if (phone[i] != \"-\")\r\n            return false;\r\n        }\r\n        else if (isNaN(phone[i]))\r\n            return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    async regEnterPassword(error = \"\", pw = \"\") {\r\n      const { value: formValues } = await Swal.fire({\r\n        title: 'Registration step 4/7',\r\n        html:\r\n          '<p>Enter your password</p>' +\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          `<input id=\"swal-input1\" class=\"swal2-input\" type=\"password\" value=\"${pw}\">` +\r\n          '<p>Confirm your password</p>' +\r\n          '<input id=\"swal-input2\" class=\"swal2-input\" type=\"password\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value,\r\n            document.getElementById('swal-input2').value\r\n          ]\r\n        }\r\n      })\r\n      \r\n      if (formValues !== undefined) {\r\n        if (formValues[0] == \"\" || formValues[1] == \"\")\r\n          this.regEnterPassword(\"You must be enter your password and confirm it!\");\r\n        else if (formValues[0] === formValues[1]) {\r\n            this.setState({password : formValues[0]});\r\n            this.regEnterBirthdate();\r\n        }\r\n        else\r\n          this.regEnterPassword(\"Invalid confirm password!\", formValues[0]);\r\n      }\r\n    }\r\n\r\n    async regEnterBirthdate(error = \"\") {\r\n      const { value: birthdate } = await Swal.fire({\r\n        title: 'Registration step 5/7',\r\n        html: \r\n          '<p>Enter your birthdate</p>' +\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"date\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      const bDate = moment(birthdate[0]).valueOf(),\r\n            now = moment().valueOf(),\r\n            minValue = 31556952000 * 18; //age 18\r\n\r\n      if (birthdate !== undefined) {\r\n        if (birthdate[0] == \"\")\r\n          this.regEnterBirthdate(\"You didn't enter your birthdate!\");\r\n        else if(now - bDate < minValue)\r\n          this.regEnterBirthdate(\"You cannot register under the age of 18!\");\r\n        else {\r\n          this.setState({birthDate : bDate});\r\n          this.regEnterPassions();\r\n        }\r\n      }\r\n    }\r\n\r\n    async regEnterPassions(error = \"\") {\r\n      const { value: passions } = await Swal.fire({\r\n        title: 'Registration step 6/7',\r\n        html: \r\n          '<p>Enter minimum 3 passions comma separated</p>' +\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"text\" placeholder=\"(eg.: reading,coding,walking)\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (passions !== undefined) {\r\n        if (passions[0].split(',').length >= 3) {\r\n          this.setState({passions : passions[0]});\r\n          this.regUploadImage();\r\n        }\r\n        else\r\n          this.regEnterPassions(\"You have to enter minimum 3 passion!\")\r\n      }\r\n    }\r\n\r\n    async regUploadImage(error = \"\") {\r\n      const { value: file } = await Swal.fire({\r\n        title: 'Registration step 7/7',\r\n        html:\r\n          '<p>Upload an image of yourself</p>' +\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}`,\r\n        input: 'file',\r\n        confirmButtonText: `Upload`,\r\n        inputAttributes: {\r\n          'accept': 'image/*',\r\n          'aria-label': 'Upload your profile picture'\r\n        }\r\n      })\r\n      \r\n      if (file !== undefined) {\r\n        if (file) {\r\n          this.showDetails(file);\r\n        }\r\n        else\r\n          this.regUploadImage(\"You must be upload an image!\");\r\n      }\r\n    }\r\n\r\n    showDetails(file) {\r\n      const reader = new FileReader()\r\n      const {userName, email, phoneNumber, birthDate, passions} = this.state\r\n\r\n      reader.onload = (e) => {\r\n        const { value: accept } = Swal.fire({\r\n          title: 'Your details',\r\n          input: 'checkbox',\r\n          inputValue: 0,\r\n          inputPlaceholder: 'I agree with the terms and conditions',\r\n          imageUrl: e.target.result,\r\n          html:\r\n            `<p>Name: ${userName}</p>` +\r\n            `<p>E-mail: ${email}</p>` +\r\n            `<p>Phone: ${phoneNumber}</p>` +\r\n            `<p>Birthdate: ${moment(birthDate).format(\"MMMM Do YYYY\")}</p>` +\r\n            `<p>Passions: ${passions}</p>`,\r\n          imageAlt: 'The uploaded picture',\r\n          confirmButtonText: `Register`,\r\n          inputValidator: (result) => {\r\n            return !result ? 'You need to agree with T&C' : this.doRegistration(e.target.result);\r\n          }\r\n        })\r\n      }\r\n      reader.readAsDataURL(file)\r\n    }\r\n\r\n    async doRegistration(file) {\r\n      const {userName, email, phoneNumber, password, birthDate, passions} = this.state;\r\n\r\n      await axios.post(\"http://\"+process.env.REACT_APP_IP+\":8000/api/register\", {\r\n        name: userName,\r\n        email: email,\r\n        phone_number: phoneNumber,\r\n        password: password,\r\n        birthdate: birthDate,\r\n        passion: passions,\r\n        rawImage: file\r\n      }).then(response => {\r\n        if (response.data.length != 0) {\r\n          this.props.setUser(response.data);\r\n        }\r\n      })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <>\r\n          <Helmet>\r\n              <title>Tinder | Dating, Make Friends & Meet New People</title>\r\n          </Helmet>\r\n  \r\n          <section style={{ height:\"100vh\",\r\n                            background: 'linear-gradient(rgba(0,0,0,.4), rgba(0,0,0,.4)), url(\"https://tinder.com/static/build/m/b07fe760ab4714aa3e932a15657494e5.webp\")',\r\n                            backgroundRepeat:\"no-repeat\",\r\n                            backgroundSize:\"cover\"}}\r\n          >\r\n            <nav className=\"navbar navbar-light bg-transparent justify-content-between\">\r\n              <div className=\"flex justify-start lg:w-0 lg:flex-1\">\r\n                <a href=\"/\">\r\n                    <span className=\"sr-only\">TindR</span>\r\n                    <img src=\"logo.svg\" width=\"55%\"></img>\r\n                </a>\r\n              </div>   \r\n  \r\n              <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\r\n                <a className=\"btn btn-success rounded-pill\"\r\n                    onClick={this.startLogin}\r\n                >\r\n                    LOG IN\r\n                </a>\r\n              </div>\r\n            </nav>\r\n  \r\n            <div className=\"container d-flex h-100 align-items-center\">\r\n              <div className=\"mx-auto text-center\">\r\n                <h1 className=\"mx-auto my-0 text-white\" style={{fontSize:\"800%\"}}>\r\n                  Swipe Right®\r\n                </h1>\r\n                <a  className=\"btn btn-danger js-scroll-trigger rounded-pill\"\r\n                    onClick={this.startRegister}\r\n                >\r\n                  CREATE ACCOUNT \r\n                </a>\r\n              </div>\r\n            </div>\r\n            \r\n            <button onClick={() => this.requestPin(this.state.phoneNumber)}>TEEEEEST</button>\r\n          </section>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default WelcomePage;",["80","81"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Asd.js",["82","83","84"],"import React, { Component } from 'react'\r\nimport SideBar from './SideBar'\r\nimport './css/side.css'\r\nimport Helmet from 'react-helmet';\r\nimport ReactCodeInput from 'react-code-input';\r\nexport default class Asd extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n  }\r\n\r\n  \r\n  // -- Request a PIN --\r\n  //apikey1 = 6259e30396ee22afa1b50ed0d8468bd7be1204de\r\n  //appkey1 = a1yqe5e4o6a6eborahy7\r\n  // curl -X \"POST\" \"https://api.ringcaptcha.com/APP_KEY/code/sms\" \\\r\n  // -d \"api_key=API_KEY\" \\\r\n  // -d \"phone=TO_NUMBER\"\r\n\r\n  // -- Verify Phone Number --\r\n\r\n  // curl -X \"POST\" \"https://api.ringcaptcha.com/APP_KEY/verify\" \\\r\n  // -d \"api_key=API_KEY\" \\\r\n  // -d \"phone=TO_NUMBER\" \\\r\n  // -d \"code=PIN\"\r\n\r\n  render() {\r\n    \r\n      return (\r\n      <>\r\n        <SideBar removeCookie={this.props.removeCookie} user={this.props.user} pageWrapId={'page-wrap'} outerContainerId={'outer-container'} />\r\n        <div className=\"container\" id=\"outer-container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-12 text-center\">\r\n                <h1>Main maybe?</h1>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n              <h2>Left Col</h2>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n              <h2>Mid Col</h2>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n              <h2>Right Col</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n      );\r\n  }\r\n}\r\n","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\App.js",["85","86","87"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Card.js",[],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Deck.js",["88","89"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Settings.js",["90","91","92","93","94"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\reportWebVitals.js",[],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\data.js",["95"],{"ruleId":"96","severity":1,"message":"97","line":4,"column":9,"nodeType":"98","messageId":"99","endLine":4,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":122,"column":11,"nodeType":"102","endLine":122,"endColumn":60},{"ruleId":"100","severity":1,"message":"101","line":131,"column":11,"nodeType":"102","endLine":131,"endColumn":45},{"ruleId":"96","severity":1,"message":"103","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":64,"column":49,"nodeType":"106","messageId":"107","endLine":64,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":145,"column":25,"nodeType":"102","endLine":150,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":173,"column":21,"nodeType":"102","endLine":173,"endColumn":40},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":68,"column":27,"nodeType":"118","messageId":"119","endLine":68,"endColumn":29},{"ruleId":"116","severity":1,"message":"117","line":68,"column":50,"nodeType":"118","messageId":"119","endLine":68,"endColumn":52},{"ruleId":"116","severity":1,"message":"117","line":110,"column":25,"nodeType":"118","messageId":"119","endLine":110,"endColumn":27},{"ruleId":"116","severity":1,"message":"117","line":138,"column":22,"nodeType":"118","messageId":"119","endLine":138,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":140,"column":41,"nodeType":"118","messageId":"119","endLine":140,"endColumn":43},{"ruleId":"116","severity":1,"message":"117","line":140,"column":76,"nodeType":"118","messageId":"119","endLine":140,"endColumn":78},{"ruleId":"116","severity":1,"message":"117","line":158,"column":39,"nodeType":"118","messageId":"119","endLine":158,"endColumn":41},{"ruleId":"116","severity":1,"message":"117","line":191,"column":22,"nodeType":"118","messageId":"119","endLine":191,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":258,"column":15,"nodeType":"118","messageId":"119","endLine":258,"endColumn":17},{"ruleId":"116","severity":1,"message":"120","line":259,"column":24,"nodeType":"118","messageId":"119","endLine":259,"endColumn":26},{"ruleId":"116","severity":1,"message":"117","line":262,"column":20,"nodeType":"118","messageId":"119","endLine":262,"endColumn":22},{"ruleId":"116","severity":1,"message":"120","line":263,"column":24,"nodeType":"118","messageId":"119","endLine":263,"endColumn":26},{"ruleId":"116","severity":1,"message":"117","line":292,"column":27,"nodeType":"118","messageId":"119","endLine":292,"endColumn":29},{"ruleId":"116","severity":1,"message":"117","line":292,"column":50,"nodeType":"118","messageId":"119","endLine":292,"endColumn":52},{"ruleId":"116","severity":1,"message":"117","line":324,"column":26,"nodeType":"118","messageId":"119","endLine":324,"endColumn":28},{"ruleId":"96","severity":1,"message":"121","line":389,"column":24,"nodeType":"98","messageId":"99","endLine":389,"endColumn":30},{"ruleId":"116","severity":1,"message":"120","line":423,"column":34,"nodeType":"118","messageId":"119","endLine":423,"endColumn":36},{"ruleId":"110","severity":1,"message":"111","line":445,"column":21,"nodeType":"102","endLine":445,"endColumn":53},{"ruleId":"100","severity":1,"message":"122","line":450,"column":17,"nodeType":"102","endLine":452,"endColumn":18},{"ruleId":"100","severity":1,"message":"122","line":463,"column":17,"nodeType":"102","endLine":465,"endColumn":18},{"ruleId":"112","replacedBy":"123"},{"ruleId":"114","replacedBy":"124"},{"ruleId":"96","severity":1,"message":"103","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":14},{"ruleId":"96","severity":1,"message":"125","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":22},{"ruleId":"126","severity":1,"message":"127","line":7,"column":3,"nodeType":"128","messageId":"129","endLine":10,"endColumn":4},{"ruleId":"96","severity":1,"message":"130","line":7,"column":8,"nodeType":"98","messageId":"99","endLine":7,"endColumn":16},{"ruleId":"96","severity":1,"message":"131","line":10,"column":8,"nodeType":"98","messageId":"99","endLine":10,"endColumn":15},{"ruleId":"132","severity":1,"message":"133","line":26,"column":29,"nodeType":"134","messageId":"135","endLine":26,"endColumn":51,"fix":"136"},{"ruleId":"96","severity":1,"message":"137","line":1,"column":27,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"138","line":24,"column":16,"nodeType":"98","messageId":"99","endLine":24,"endColumn":23},{"ruleId":"96","severity":1,"message":"139","line":2,"column":9,"nodeType":"98","messageId":"99","endLine":2,"endColumn":21},{"ruleId":"96","severity":1,"message":"140","line":2,"column":23,"nodeType":"98","messageId":"99","endLine":2,"endColumn":35},{"ruleId":"96","severity":1,"message":"141","line":2,"column":37,"nodeType":"98","messageId":"99","endLine":2,"endColumn":52},{"ruleId":"96","severity":1,"message":"142","line":2,"column":54,"nodeType":"98","messageId":"99","endLine":2,"endColumn":66},{"ruleId":"96","severity":1,"message":"143","line":80,"column":13,"nodeType":"98","messageId":"99","endLine":80,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":1,"column":1,"nodeType":"146","endLine":45,"endColumn":3},"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Helmet' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["147"],"no-negated-in-lhs",["148"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'accept' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["147"],["148"],"'ReactCodeInput' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Settings' is defined but never used.","'SideBar' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property checkLoginStatus.","MemberExpression","unexpectedWhitespace",{"range":"149","text":"150"},"'useEffect' is defined but never used.","'getData' is defined but never used.","'SettingsPane' is defined but never used.","'SettingsPage' is defined but never used.","'SettingsContent' is defined but never used.","'SettingsMenu' is defined but never used.","'settings' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",[765,767],"."]