[{"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\App.js":"1","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\SideBar.js":"2","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\index.js":"3","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Recommendations.js":"4","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Asd.js":"5","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Deck.js":"6","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\spotify_config.js":"7","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\WelcomePage.js":"8","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\ItemLoading.js":"9","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Pulse.js":"10","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Loading.js":"11","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Picture_upload.js":"12","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Card.js":"13","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\CreateTickets.js":"14","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Tickets.js":"15"},{"size":3372,"mtime":1611320570437,"results":"16","hashOfConfig":"17"},{"size":16364,"mtime":1611313092017,"results":"18","hashOfConfig":"17"},{"size":618,"mtime":1607676433648,"results":"19","hashOfConfig":"17"},{"size":9584,"mtime":1607941601080,"results":"20","hashOfConfig":"17"},{"size":2389,"mtime":1611312541413,"results":"21","hashOfConfig":"17"},{"size":3328,"mtime":1610719218441,"results":"22","hashOfConfig":"17"},{"size":434,"mtime":1609841141150,"results":"23","hashOfConfig":"17"},{"size":16114,"mtime":1610709664633,"results":"24","hashOfConfig":"17"},{"size":235,"mtime":1611137184625,"results":"25","hashOfConfig":"17"},{"size":1445,"mtime":1610539762437,"results":"26","hashOfConfig":"17"},{"size":1409,"mtime":1610452928155,"results":"27","hashOfConfig":"17"},{"size":5714,"mtime":1610539747854,"results":"28","hashOfConfig":"17"},{"size":2715,"mtime":1610712461455,"results":"29","hashOfConfig":"17"},{"size":3456,"mtime":1611322745201,"results":"30","hashOfConfig":"17"},{"size":1957,"mtime":1611322357798,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1msjh8u",{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\App.js",["70"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\SideBar.js",["71","72","73","74","75"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\index.js",[],["76","77"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Recommendations.js",["78","79","80","81"],"import React, {Component} from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport TinderCard from 'react-tinder-card';\r\n\r\nclass Recommendations extends Component {\r\n    constructor() {\r\n      super();\r\n\r\n      this.state = {\r\n          recommendations: [],\r\n          pictures: [],\r\n          currentPictureIndex: 0,\r\n          isLoading: true,\r\n          showProfile: false,\r\n          current: {\r\n              index: undefined,\r\n              user: undefined\r\n          }\r\n      }\r\n\r\n      this.getRecommendations = this.getRecommendations.bind(this);\r\n      this.getNextProfile = this.getNextProfile.bind(this);\r\n      this.getCurrentData = this.getCurrentData.bind(this);\r\n      this.handleLike = this.handleLike.bind(this);\r\n      this.handleDislike = this.handleDislike.bind(this);\r\n      this.handleKeyDown = this.handleKeyDown.bind(this);\r\n      this.setNextPicture = this.setNextPicture.bind(this);\r\n      this.setPreviousPicture = this.setPreviousPicture.bind(this);\r\n      this.showProfile = this.showProfile.bind(this);\r\n      this.ageCalculation = this.ageCalculation.bind(this);\r\n      this.getCurrentPictures = this.getCurrentPictures.bind(this);\r\n\r\n      this.onCardLeftScreen = this.onCardLeftScreen.bind(this);\r\n      this.onSwipe = this.onSwipe.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getRecommendations();\r\n        await this.getCurrentPictures();\r\n    }\r\n\r\n    async getRecommendations() {\r\n        await axios.get(`http://${process.env.REACT_APP_IP}:8000/api/recommendations/${this.props.userID}`)\r\n        .then(response => {\r\n            let updCurrent = {\r\n                index: 0,\r\n                user: response.data.length === undefined ? response.data : response.data[0]\r\n            }\r\n\r\n            this.setState({\r\n                recommendations : response.data,\r\n                current : updCurrent\r\n            });\r\n        })\r\n    }\r\n\r\n   async getCurrentPictures() {\r\n       const { current } = this.state;\r\n\r\n        await axios.get(`http://${process.env.REACT_APP_IP}:8000/api/pictures/${current.user.id}`)\r\n            .then(response => {\r\n                Promise.all(response.data.map(p => {\r\n                    this.setState({\r\n                        pictures: p,\r\n                        isLoading: false\r\n                    });\r\n                }))\r\n            });\r\n   }\r\n\r\n    async getNextProfile() {\r\n        const { recommendations, current } = this.state;\r\n        console.log(recommendations[current.index + 1])\r\n\r\n        if (recommendations[current.index + 1] !== undefined) {\r\n            let updCurrent = {\r\n                index: current.index + 1,\r\n                user: recommendations[current.index + 1]\r\n            }\r\n            await this.setState({\r\n                current : updCurrent,\r\n                isLoading : true\r\n            })\r\n            this.getCurrentPictures();\r\n        }\r\n        else {\r\n            this.setState({\r\n                current : {\r\n                    index: 0,\r\n                    user: undefined\r\n                },\r\n                isLoading : false\r\n            })\r\n        }\r\n    }\r\n\r\n    setNextPicture() {\r\n        const { currentPictureIndex, pictures } = this.state;\r\n\r\n        const max = pictures.length -1;\r\n        const next = currentPictureIndex + 1;\r\n        \r\n        if (next <= max)\r\n            this.setState({currentPictureIndex: next})\r\n        else\r\n            this.setState({currentPictureIndex: 0});\r\n    }\r\n\r\n    setPreviousPicture() {\r\n        const { currentPictureIndex, pictures } = this.state;\r\n\r\n        const max = pictures.length -1;\r\n        const previous = currentPictureIndex - 1;\r\n\r\n        if (previous < 0) \r\n            this.setState({currentPictureIndex : max});\r\n        else\r\n            this.setState({currentPictureIndex : previous});\r\n    }\r\n\r\n    showProfile() {\r\n        const { current, showProfile } = this.state;\r\n        const user = current.user;\r\n\r\n        if(showProfile) {\r\n            return (\r\n                <>\r\n                    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.15.1/css/all.css\" integrity=\"sha384-vp86vTRFVJgpjF9jiIGPEEqYqlDwgyBgEF109VFjmqGmIY/Y4HV4d3Gp2irVfcrp\" crossorigin=\"anonymous\"></link>\r\n                    \r\n                    <p>\r\n                        <span className=\"fa fa-info-circle\" /> \r\n                        Description: {user.description !== null ? user.description : \"N/A\"}\r\n                    </p>\r\n                    <p>Birthdate: {user.birthdate !== null ? moment(user.birthdate).format('MMMM Do YYYY') : \"N/A\"}</p>\r\n                    <p>School: {user.school !== null ? user.school : \"N/A\"}</p>\r\n                    <p>Works at: {user.company !== null ? user.company : \"N/A\"}</p>\r\n                    <p>Position: {user.job_title !== null ? user.job_title : \"N/A\"}</p>\r\n                    <p>Gender: {user.gender !== null ? user.gender : \"N/A\"}</p>\r\n                    <p>Passions: {user.passion !== null ? user.passion : \"N/A\"}</p>\r\n                    <p>Sexual Orientation: {user.sexual_orientation !== null ? user.sexual_orientation : \"N/A\"}</p>\r\n\r\n                    {user.anthem !== null &&\r\n                        <iframe width=\"560\" height=\"315\" \r\n                                src={`https://www.youtube.com/embed/${user.anthem}`}\r\n                                frameborder=\"0\" \r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                                allowfullscreen\r\n                            >\r\n                        </iframe>\r\n                    }\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    ageCalculation(date) {\r\n        const now = new Date();\r\n        const birthdate = new Date(date);\r\n\r\n        let diff = now.getTime() - birthdate.getTime();\r\n        return Math.floor(diff / (1000 * 60 * 60 * 24 * 365.25));\r\n    }\r\n\r\n    getCurrentData() {\r\n        const { current, pictures, currentPictureIndex } = this.state;\r\n\r\n        if (current.user !== undefined) {\r\n            const route = pictures.length === undefined ? pictures.route : pictures[currentPictureIndex].route;\r\n            return(\r\n                <>\r\n                    <img src={route} />\r\n\r\n                    <div className=\"mx-auto my-0 text-red\">\r\n                        <button onClick={this.handleDislike}>Dislike</button>\r\n                        <button onClick={this.handleLike}>Like</button>\r\n\r\n                        <h1>{current.user.name} {this.ageCalculation(current.user.birthdate)}</h1>\r\n                    </div>\r\n                    \r\n                    {this.showProfile()}\r\n                </>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n                <>\r\n                    No more!\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    async handleLike() {\r\n        const { current } = this.state;\r\n\r\n        await axios.post(`http://${process.env.REACT_APP_IP}:8000/api/add_like`, {\r\n            giverid: this.props.userID,\r\n            receiverid: current.user.id\r\n        });\r\n        this.getNextProfile();\r\n    }\r\n\r\n    async handleDislike() {\r\n        const { current } = this.state;\r\n\r\n        await axios.post(`http://${process.env.REACT_APP_IP}:8000/api/add_dislike`, {\r\n            giverid: this.props.userID,\r\n            receiverid: current.user.id\r\n        });\r\n        this.getNextProfile();\r\n    }\r\n\r\n    handleKeyDown(event) {\r\n        switch(event.key) {\r\n            case \"ArrowRight\": {\r\n                this.handleLike();\r\n                break;\r\n            }\r\n            case \"ArrowLeft\": {\r\n                this.handleDislike();\r\n                break;\r\n            }\r\n            case \" \": { //Space\r\n                this.setNextPicture();\r\n                break;\r\n            }\r\n            case \"Backspace\": {\r\n                this.setPreviousPicture();\r\n                break;\r\n            }\r\n            case \"ArrowUp\": {\r\n                this.setState({showProfile : true});\r\n                break;\r\n            }\r\n            case \"ArrowDown\": {\r\n                this.setState({showProfile : false});\r\n                break;\r\n            }\r\n            default:\r\n        }\r\n    }\r\n\r\n    onSwipe(direction) {\r\n        console.log(direction)\r\n    }\r\n\r\n    onCardLeftScreen(id) {\r\n        console.log(id)\r\n    }\r\n\r\n    render() {\r\n        const { isLoading } = this.state;\r\n\r\n        if (!isLoading) {\r\n            /*\r\n            <div onKeyDown={this.handleKeyDown} tabIndex=\"0\" className=\"container d-flex h-100 align-items-center\">\r\n                        <div className=\"mx-auto text-center\">\r\n                            {this.getCurrentData()}\r\n                        </div>\r\n                    </div>\r\n            */\r\n            return (\r\n                <>\r\n                    <div onKeyDown={this.handleKeyDown} tabIndex=\"0\" className=\"container d-flex h-100 align-items-center\">\r\n                        <div className=\"mx-auto text-center\">\r\n                            <TinderCard onSwipe={this.onSwipe} onCardLeftScreen={() => this.onCardLeftScreen('fooBar')} preventSwipe={['right', 'left']}>\r\n                                {this.getCurrentData()}\r\n                            </TinderCard>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <h1>Loading...</h1>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Recommendations;",["82","83"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Asd.js",[],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Deck.js",["84","85","86"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSprings } from \"react-spring\";\r\nimport { useGesture } from \"react-with-gesture\";\r\n\r\nimport Card from \"./Card\";\r\nimport Pulse from \"./Pulse\";\r\n\r\nimport \"./css/deck.css\";\r\nimport './css/loading_heart.css';\r\n\r\nconst to = i => ({\r\n  x: 0,\r\n  y: i * -10,\r\n  scale: 1,\r\n  rot: 0,\r\n  //rot: -10 + Math.random() * 20,\r\n  delay: i * 100\r\n});\r\nconst from = i => ({ rot: 0, scale: 1.5, y: -1000 });\r\n\r\nconst trans = (r, s) =>\r\n  `perspective(1500px) rotateX(30deg) rotateY(${r /\r\n  10}deg) rotateZ(${r}deg) scale(${s})`;\r\n\r\nfunction Deck({userID, data}) {\r\n\r\n  const [doFetch, setFetch] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function giveVote(receiverID, direction) {\r\n      const send = {\r\n        \"receiverid\": receiverID,\r\n        \"giverid\": userID,\r\n        \"direction\": direction\r\n      }\r\n\r\n      await fetch(`${process.env.REACT_APP_IP}/api/give_vote`, {\r\n        method: 'post',\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify(send)\r\n        })\r\n        .then(() => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n    \r\n    if (doFetch !== \"\") {\r\n      const temp = doFetch.split(',');\r\n      giveVote(temp[0], temp[1]);\r\n    }\r\n  }, [doFetch])\r\n\r\n  const [gone] = useState(() => new Set());\r\n  const [cardState, set] = useSprings(data.length, i => ({\r\n    ...to(i),\r\n    from: from(i)\r\n  }));\r\n\r\n  const bind = useGesture(\r\n    ({\r\n      args: [index],\r\n      down,\r\n      delta: [xDelta],\r\n      distance,\r\n      direction: [xDir],\r\n      velocity\r\n    }) => {\r\n      const trigger = velocity > 0.2;\r\n\r\n      const dir = xDir < 0 ? -1 : 1;\r\n\r\n      let temp = \"\";\r\n\r\n      if (!down && trigger) {\r\n        gone.add(index);\r\n        temp = `${data[index].id},${dir}`;\r\n      }\r\n\r\n      set(i => {\r\n        if (index !== i) return;\r\n        const isGone = gone.has(index);\r\n\r\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0;\r\n\r\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0);\r\n\r\n        const scale = down ? 1.1 : 1;\r\n        return {\r\n          x,\r\n          rot,\r\n          scale,\r\n          delay: undefined,\r\n          config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 }\r\n        };\r\n      });\r\n\r\n      if(temp.length != 0) {\r\n        setLoading(true);\r\n        setFetch(temp);\r\n      }\r\n\r\n      /*\r\n      if (!down && gone.size === data.length) {\r\n        setTimeout(() => gone.clear() || set(i => to(i)), 600);\r\n      }\r\n      */\r\n    }\r\n  );\r\n\r\n  /*\r\n  if(isLoading) {\r\n    return (\r\n      <h1>fetch loading...</h1>\r\n    );\r\n  }\r\n  else */if(cardState.length != gone.size) {\r\n    return (\r\n      <>\r\n      <div className=\"background-image\"></div>\r\n      <div id='recommendations'>\r\n        {cardState.map(({ x, y, rot, scale }, i) => (\r\n          <Card\r\n            key={i}\r\n            i={i}\r\n            x={x}\r\n            y={y}\r\n            rot={rot}\r\n            scale={scale}\r\n            trans={trans}\r\n            data={data}\r\n            bind={bind}\r\n          />\r\n        ))}\r\n        {isLoading === true &&\r\n          <h1>fetch loading...</h1>\r\n        }\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n  else {\r\n    return(<Pulse userID={userID} />);\r\n  }\r\n}\r\n\r\nexport default Deck;","D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\spotify_config.js",[],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\WelcomePage.js",["87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106"],"import React, {Component} from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport Swal from \"sweetalert2\";\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport ReactCodeInput from 'react-code-input';\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nclass WelcomePage extends Component {\r\n    constructor() {\r\n      super();\r\n\r\n      this.state = {\r\n        apikey:'6259e30396ee22afa1b50ed0d8468bd7be1204de',\r\n        appkey:'a1yqe5e4o6a6eborahy7',\r\n        userName: undefined,\r\n        email: undefined,\r\n        phoneNumber: undefined,\r\n        password: undefined,\r\n        confirmPass: undefined,\r\n        birthDate: undefined,\r\n        passions: undefined,\r\n      }\r\n\r\n      this.startLogin = this.startLogin.bind(this);\r\n      this.handleLogin = this.handleLogin.bind(this);\r\n      this.doLogin = this.doLogin.bind(this);\r\n      this.startRegister = this.startRegister.bind(this);\r\n      this.regEnterUsername = this.regEnterUsername.bind(this);\r\n      this.regEnterEmail = this.regEnterEmail.bind(this);\r\n      this.isValidEmail = this.isValidEmail.bind(this);\r\n      this.regEnterPhoneNumber = this.regEnterPhoneNumber.bind(this);\r\n      this.isValidPhoneNumber = this.isValidPhoneNumber.bind(this);\r\n      this.regEnterPassword = this.regEnterPassword.bind(this);\r\n      this.regEnterBirthdate = this.regEnterBirthdate.bind(this);\r\n      this.regEnterPassions = this.regEnterPassions.bind(this);\r\n      this.regUploadImage = this.regUploadImage.bind(this);\r\n      this.showDetails = this.showDetails.bind(this);\r\n      this.doRegistration = this.doRegistration.bind(this);\r\n      this.requestPin = this.requestPin.bind(this);\r\n      this.validatePin = this.validatePin.bind(this);\r\n    }\r\n\r\n    async startLogin() {\r\n      await this.handleLogin();\r\n    }\r\n\r\n    async handleLogin(error = \"\") {\r\n      const { value: formValues } = await Swal.fire({\r\n        title: 'Sign in',\r\n        html:\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>\\n\\n` : \"\"}` +\r\n          '<p>Enter your email address</p>' +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"email\">' +\r\n          '<p>Enter your password</p>' +\r\n          '<input id=\"swal-input2\" class=\"swal2-input\" type=\"password\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Sign in`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value,\r\n            document.getElementById('swal-input2').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (formValues !== undefined) {\r\n        if (formValues[0] == \"\" || formValues[1] == \"\") {\r\n          this.handleLogin(\"You must enter your username and your password!\");\r\n        }\r\n        else\r\n          this.doLogin(formValues[0], formValues[1]);\r\n      }\r\n    }\r\n\r\n    doLogin(email, password) {\r\n      axios.post(process.env.REACT_APP_IP+\"/api/login\", {\r\n        email: email,\r\n        password: password\r\n      }).then(response => {\r\n        if (response.data.length !== 0) {\r\n          this.props.setUser(response.data);\r\n        }\r\n        else\r\n          this.handleLogin(\"Incorrect e-mail or password!\")\r\n      })\r\n    }\r\n\r\n    async startRegister() {\r\n      await this.regEnterUsername();\r\n    }\r\n\r\n    async regEnterUsername(error = \"\") {\r\n      const { value: username } = await Swal.fire({\r\n        title: 'Registration step 1/7',\r\n        html:\r\n          '<p>Enter your username</p>' +\r\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"text\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (username !== undefined) {\r\n        if (username[0] == \"\")\r\n          this.regEnterUsername(\"You must enter your username!\");\r\n        else if (username[0].length <= 3)\r\n          this.regEnterUsername(\"Username must have at least 4 characters!\");\r\n        else {\r\n            this.setState({userName : username[0]});\r\n            this.regEnterEmail();\r\n        }\r\n      }\r\n    }\r\n\r\n    async regEnterEmail(error = \"\") {\r\n      const { value: email } = await Swal.fire({\r\n        title: 'Registration step 2/7',\r\n        html:\r\n          '<p>Enter your e-mail address</p>' +\r\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"email\" placeholder=\"(eg.: somebody@example.com)\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (email !== undefined) {\r\n        if (email[0] == \"\")\r\n          return this.regEnterEmail(\"You must enter your e-mail address!\")\r\n        else if (email[0].includes(\"@\") == false || email[0].includes(\".\") == false)\r\n          return this.regEnterEmail(\"Invalid e-mail address!\")\r\n      \r\n        const check = await this.isValidEmail(email[0])\r\n\r\n        if (check) {\r\n          this.setState({email : email[0]});\r\n          this.regEnterPhoneNumber();\r\n        } \r\n        else\r\n          this.regEnterEmail(\"This e-mail is already in use!\")\r\n      }\r\n    }\r\n\r\n    async isValidEmail(email) {\r\n      let temp = undefined;\r\n      await axios.get(process.env.REACT_APP_IP+\"/api/valid_email/\" + email)\r\n      .then(response => {\r\n          temp = response.data.length == 0\r\n      })\r\n      return temp;\r\n    }\r\n\r\n    async requestPin(number){\r\n      await axios.post(process.env.REACT_APP_IP+\"/api/getpin\",{\r\n        appkey:this.state.appkey,\r\n        apikey:this.state.apikey,\r\n        phone:number\r\n      })\r\n      .then(resp =>{\r\n        console.log(resp.data);\r\n      })\r\n    }\r\n\r\n    async regEnterPhoneNumber(error = \"\") {\r\n      const { value: phone } = await Swal.fire({\r\n        title: 'Registration step 3/7',\r\n        html:\r\n          '<p>Enter your phone number</p>' +\r\n          `${error !== \"\" ? `\\n\\n<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"tel\" placeholder=\"(eg.: 30/123-4567)\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (phone !== undefined) {\r\n        if (phone[0] == \"\")\r\n          this.regEnterPhoneNumber(\"You must enter your phone number\");\r\n        else if (this.isValidPhoneNumber(phone[0])) {\r\n          let pinnumber = \"+36\" + phone[0].replace(\"/\",\"\").replace(\"-\",\"\");\r\n          this.requestPin(pinnumber);\r\n          this.validatePin(pinnumber);\r\n          this.setState({phoneNumber : phone[0]});\r\n          \r\n        } \r\n        else \r\n          this.regEnterPhoneNumber(`Invalid phone number!\\n'${phone}'`);\r\n      }\r\n    }\r\n    \r\n    async validatePin(pinnumber){\r\n      const mySwal = withReactContent(Swal);\r\n      let pin = 0;\r\n      let pinHtml = <ReactCodeInput type=\"number\" onChange={(e) => pin = e} fields={4}/>;\r\n      await mySwal.fire({\r\n        title: 'Enter the verification code',\r\n        html:pinHtml,\r\n        //input: 'text',\r\n        inputAttributes: {\r\n          autocapitalize: 'off'\r\n        },\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Validate',\r\n        showLoaderOnConfirm: true,\r\n        preConfirm: (usuallytrue) => {\r\n          return axios.post(process.env.REACT_APP_IP+\"/api/validatecode\",{\r\n            appkey:this.state.appkey,\r\n            apikey:this.state.apikey,\r\n            phone:pinnumber,\r\n            code:pin\r\n          })\r\n          .then(response => {\r\n            if (response.data.status !== \"SUCCESS\") {\r\n              throw new Error(response.statusText)\r\n            }\r\n            return response.data;\r\n          })\r\n          .catch(error => {\r\n            Swal.showValidationMessage(\r\n              `Request failed: ${error}`\r\n            )\r\n          })\r\n        },\r\n        allowOutsideClick: () => !Swal.isLoading()\r\n      }).then((result) => {\r\n        console.log(result);\r\n        if (result.isConfirmed) {\r\n          Swal.fire({\r\n            confirmButtonText:'OK',\r\n            title: `${result.value.status}`,\r\n            preConfirm: (ok) =>{\r\n              this.regEnterPassword();\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    isValidPhoneNumber(phone) {\r\n      if (phone.length < 11 || phone.length > 11)\r\n        return false;\r\n\r\n      for (let i = 0; i < phone.length; i++) {\r\n        if (i == 2) {\r\n          if (phone[i] != '/')\r\n            return false;\r\n        }\r\n        else if (i == 6) {\r\n          if (phone[i] != \"-\")\r\n            return false;\r\n        }\r\n        else if (isNaN(phone[i]))\r\n            return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    async regEnterPassword(error = \"\", pw = \"\") {\r\n      const { value: formValues } = await Swal.fire({\r\n        title: 'Registration step 4/7',\r\n        html:\r\n          '<p>Enter your password</p>' +\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          `<input id=\"swal-input1\" class=\"swal2-input\" type=\"password\" value=\"${pw}\">` +\r\n          '<p>Confirm your password</p>' +\r\n          '<input id=\"swal-input2\" class=\"swal2-input\" type=\"password\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value,\r\n            document.getElementById('swal-input2').value\r\n          ]\r\n        }\r\n      })\r\n      \r\n      if (formValues !== undefined) {\r\n        if (formValues[0] == \"\" || formValues[1] == \"\")\r\n          this.regEnterPassword(\"You must enter your password and confirm it!\");\r\n        else if (formValues[0] === formValues[1]) {\r\n            this.setState({password : formValues[0]});\r\n            this.regEnterBirthdate();\r\n        }\r\n        else\r\n          this.regEnterPassword(\"Passwords do not match!\", formValues[0]);\r\n      }\r\n    }\r\n\r\n    async regEnterBirthdate(error = \"\") {\r\n      const { value: birthdate } = await Swal.fire({\r\n        title: 'Registration step 5/7',\r\n        html: \r\n          '<p>Enter your birthdate</p>' +\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"date\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      const bDate = moment(birthdate[0]).valueOf(),\r\n            now = moment().valueOf(),\r\n            minValue = 31556952000 * 18; //age 18\r\n\r\n      if (birthdate !== undefined) {\r\n        if (birthdate[0] == \"\")\r\n          this.regEnterBirthdate(\"You didn't enter your birthdate!\");\r\n        else if(now - bDate < minValue)\r\n          this.regEnterBirthdate(\"You cannot register under the age of 18!\");\r\n        else {\r\n          this.setState({birthDate : bDate});\r\n          this.regEnterPassions();\r\n        }\r\n      }\r\n    }\r\n\r\n    async regEnterPassions(error = \"\") {\r\n      const { value: passions } = await Swal.fire({\r\n        title: 'Registration step 6/7',\r\n        html: \r\n          '<p>Enter minimum 3 passions comma separated</p>' +\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}` +\r\n          '<input id=\"swal-input1\" class=\"swal2-input\" type=\"text\" placeholder=\"(eg.: reading,coding,walking)\">',\r\n        focusConfirm: false,\r\n        confirmButtonText: `Next`,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (passions !== undefined) {\r\n        if (passions[0].split(',').length >= 3) {\r\n          this.setState({passions : passions[0]});\r\n          this.regUploadImage();\r\n        }\r\n        else\r\n          this.regEnterPassions(\"You have to enter at least 3 passions!\")\r\n      }\r\n    }\r\n\r\n    async regUploadImage(error = \"\") {\r\n      const { value: file } = await Swal.fire({\r\n        title: 'Registration step 7/7',\r\n        html:\r\n          '<p>Upload an image of yourself</p>' +\r\n          `${error !== \"\" ? `<p style=\"color:red\">${error}</p>` : \"\"}`,\r\n        input: 'file',\r\n        confirmButtonText: `Upload`,\r\n        inputAttributes: {\r\n          'accept': 'image/*',\r\n          'aria-label': 'Upload your profile picture'\r\n        }\r\n      })\r\n      \r\n      if (file !== undefined) {\r\n        if (file) {\r\n          this.showDetails(file);\r\n        }\r\n        else\r\n          this.regUploadImage(\"You must upload an image!\");\r\n      }\r\n    }\r\n\r\n    showDetails(file) {\r\n      const reader = new FileReader()\r\n      const {userName, email, phoneNumber, birthDate, passions} = this.state\r\n\r\n      reader.onload = (e) => {\r\n        const { value: accept } = Swal.fire({\r\n          title: 'Your details',\r\n          input: 'checkbox',\r\n          inputValue: 0,\r\n          inputPlaceholder: 'I agree with the terms and conditions',\r\n          imageUrl: e.target.result,\r\n          html:\r\n            `<p>Name: ${userName}</p>` +\r\n            `<p>E-mail: ${email}</p>` +\r\n            `<p>Phone: ${phoneNumber}</p>` +\r\n            `<p>Birthdate: ${moment(birthDate).format(\"MMMM Do YYYY\")}</p>` +\r\n            `<p>Passions: ${passions}</p>`,\r\n          imageAlt: 'The uploaded picture',\r\n          confirmButtonText: `Register`,\r\n          inputValidator: (result) => {\r\n            return !result ? 'You need to agree with T&C' : this.doRegistration(e.target.result);\r\n          }\r\n        })\r\n      }\r\n      reader.readAsDataURL(file)\r\n    }\r\n\r\n    async doRegistration(file) {\r\n      const {userName, email, phoneNumber, password, birthDate, passions} = this.state;\r\n\r\n      await axios.post(process.env.REACT_APP_IP+\"/api/register\", {\r\n        name: userName,\r\n        email: email,\r\n        phone_number: phoneNumber,\r\n        password: password,\r\n        birthdate: birthDate,\r\n        passion: passions,\r\n        rawImage: file\r\n      }).then(response => {\r\n        if (response.data.length != 0) {\r\n          this.props.setUser(response.data);\r\n        }\r\n      })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <>\r\n          <Helmet>\r\n              <title>Tinder | Dating, Make Friends & Meet New People</title>\r\n          </Helmet>\r\n  \r\n          <section style={{ height:\"100vh\",\r\n                            background: 'linear-gradient(rgba(0,0,0,.4), rgba(0,0,0,.4)), url(\"https://tinder.com/static/build/m/b07fe760ab4714aa3e932a15657494e5.webp\")',\r\n                            backgroundRepeat:\"no-repeat\",\r\n                            backgroundSize:\"cover\"}}\r\n          >\r\n            <nav className=\"navbar navbar-light bg-transparent justify-content-between\">\r\n              <div className=\"flex justify-start lg:w-0 lg:flex-1\">\r\n                <a href=\"/\">\r\n                    <span className=\"sr-only\">TindR</span>\r\n                    <img src=\"logo.svg\" width=\"55%\"></img>\r\n                </a>\r\n              </div>   \r\n  \r\n              <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\r\n                <a className=\"btn btn-success rounded-pill\"\r\n                    onClick={this.startLogin}\r\n                >\r\n                    LOG IN\r\n                </a>\r\n              </div>\r\n            </nav>\r\n  \r\n            <div className=\"container d-flex h-100 align-items-center\">\r\n              <div className=\"mx-auto text-center\">\r\n                <h1 className=\"mx-auto my-0 text-white\" style={{fontSize:\"800%\"}}>\r\n                  Swipe Right®\r\n                </h1>\r\n                <a  className=\"btn btn-danger js-scroll-trigger rounded-pill\"\r\n                    onClick={this.startRegister}\r\n                >\r\n                  CREATE ACCOUNT \r\n                </a>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default WelcomePage;",["107","108"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\ItemLoading.js",[],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Pulse.js",["109","110"],"import React, { Component } from 'react'\r\nimport \"./css/pulse.css\";\r\nimport axios from 'axios';\r\n\r\nimport Loading from './Loading'\r\n\r\nexport default class Pulse extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            userImg: ''\r\n        }\r\n\r\n        this.getProfilePicture = this.getProfilePicture.bind(this);\r\n    }\r\n\r\n    async getProfilePicture() {\r\n        await axios.get(`${process.env.REACT_APP_IP}/api/pictures/${this.props.userID}`)\r\n        .then(response => {\r\n            Promise.all(response.data.map(p => {\r\n                this.setState({\r\n                    isLoading : false,\r\n                    userImg : p.route\r\n                });\r\n              }))\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getProfilePicture();\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, userImg } = this.state;\r\n\r\n        if(!isLoading) {\r\n            return(\r\n                <>\r\n                    <div class=\"load\">\r\n                        <img src={userImg} style={{borderRadius:\"50%\", width:\"100%\"}}></img>\r\n                    </div>\r\n                    <p>We are unable to find any potential matches right now. Try changing your preferences to see who is nearby.</p>\r\n                </>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n                <Loading />\r\n            );\r\n        }\r\n    }\r\n}",["111","112"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Loading.js",["113"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Picture_upload.js",["114","115"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Card.js",["116"],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\CreateTickets.js",[],"D:\\Gyakran hasznalt\\Projects\\Codecool\\PHP\\TindR\\tindr-react\\src\\components\\Tickets.js",[],{"ruleId":"117","severity":1,"message":"118","line":87,"column":41,"nodeType":"119","messageId":"120","endLine":87,"endColumn":48},{"ruleId":"117","severity":1,"message":"121","line":4,"column":9,"nodeType":"119","messageId":"120","endLine":4,"endColumn":14},{"ruleId":"117","severity":1,"message":"122","line":14,"column":8,"nodeType":"119","messageId":"120","endLine":14,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":189,"column":39,"nodeType":"125","messageId":"126","endLine":189,"endColumn":41},{"ruleId":"127","severity":1,"message":"128","line":245,"column":11,"nodeType":"129","endLine":245,"endColumn":60},{"ruleId":"130","severity":1,"message":"131","line":380,"column":21,"nodeType":"129","endLine":380,"endColumn":132},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"117","severity":1,"message":"136","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":64,"column":49,"nodeType":"125","messageId":"126","endLine":64,"endColumn":51},{"ruleId":"137","severity":1,"message":"138","line":145,"column":25,"nodeType":"129","endLine":150,"endColumn":30},{"ruleId":"139","severity":1,"message":"140","line":173,"column":21,"nodeType":"129","endLine":173,"endColumn":40},{"ruleId":"132","replacedBy":"141"},{"ruleId":"134","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":52,"column":6,"nodeType":"145","endLine":52,"endColumn":15,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":98,"column":22,"nodeType":"149","messageId":"150","endLine":98,"endColumn":24},{"ruleId":"147","severity":1,"message":"148","line":117,"column":30,"nodeType":"149","messageId":"150","endLine":117,"endColumn":32},{"ruleId":"147","severity":1,"message":"151","line":68,"column":27,"nodeType":"149","messageId":"150","endLine":68,"endColumn":29},{"ruleId":"147","severity":1,"message":"151","line":68,"column":50,"nodeType":"149","messageId":"150","endLine":68,"endColumn":52},{"ruleId":"147","severity":1,"message":"151","line":110,"column":25,"nodeType":"149","messageId":"150","endLine":110,"endColumn":27},{"ruleId":"147","severity":1,"message":"151","line":138,"column":22,"nodeType":"149","messageId":"150","endLine":138,"endColumn":24},{"ruleId":"147","severity":1,"message":"151","line":140,"column":41,"nodeType":"149","messageId":"150","endLine":140,"endColumn":43},{"ruleId":"147","severity":1,"message":"151","line":140,"column":76,"nodeType":"149","messageId":"150","endLine":140,"endColumn":78},{"ruleId":"147","severity":1,"message":"151","line":158,"column":39,"nodeType":"149","messageId":"150","endLine":158,"endColumn":41},{"ruleId":"147","severity":1,"message":"151","line":191,"column":22,"nodeType":"149","messageId":"150","endLine":191,"endColumn":24},{"ruleId":"147","severity":1,"message":"151","line":258,"column":15,"nodeType":"149","messageId":"150","endLine":258,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":259,"column":24,"nodeType":"149","messageId":"150","endLine":259,"endColumn":26},{"ruleId":"147","severity":1,"message":"151","line":262,"column":20,"nodeType":"149","messageId":"150","endLine":262,"endColumn":22},{"ruleId":"147","severity":1,"message":"148","line":263,"column":24,"nodeType":"149","messageId":"150","endLine":263,"endColumn":26},{"ruleId":"147","severity":1,"message":"151","line":292,"column":27,"nodeType":"149","messageId":"150","endLine":292,"endColumn":29},{"ruleId":"147","severity":1,"message":"151","line":292,"column":50,"nodeType":"149","messageId":"150","endLine":292,"endColumn":52},{"ruleId":"147","severity":1,"message":"151","line":324,"column":26,"nodeType":"149","messageId":"150","endLine":324,"endColumn":28},{"ruleId":"117","severity":1,"message":"152","line":389,"column":24,"nodeType":"119","messageId":"120","endLine":389,"endColumn":30},{"ruleId":"147","severity":1,"message":"148","line":423,"column":34,"nodeType":"149","messageId":"150","endLine":423,"endColumn":36},{"ruleId":"139","severity":1,"message":"140","line":445,"column":21,"nodeType":"129","endLine":445,"endColumn":53},{"ruleId":"127","severity":1,"message":"153","line":450,"column":17,"nodeType":"129","endLine":452,"endColumn":18},{"ruleId":"127","severity":1,"message":"153","line":463,"column":17,"nodeType":"129","endLine":465,"endColumn":18},{"ruleId":"132","replacedBy":"154"},{"ruleId":"134","replacedBy":"155"},{"ruleId":"123","severity":1,"message":"124","line":22,"column":45,"nodeType":"125","messageId":"126","endLine":22,"endColumn":47},{"ruleId":"139","severity":1,"message":"140","line":42,"column":25,"nodeType":"129","endLine":42,"endColumn":87},{"ruleId":"132","replacedBy":"156"},{"ruleId":"134","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":8,"column":17,"nodeType":"160","endLine":8,"endColumn":63},{"ruleId":"139","severity":1,"message":"140","line":136,"column":25,"nodeType":"129","endLine":136,"endColumn":57},{"ruleId":"161","severity":1,"message":"162","line":148,"column":25,"nodeType":"129","endLine":148,"endColumn":158},{"ruleId":"117","severity":1,"message":"163","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},"no-unused-vars","'doForce' is assigned a value but never used.","Identifier","unusedVar","'Badge' is defined but never used.","'Checkbox' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component Picture_upload must be in PascalCase or SCREAMING_SNAKE_CASE","no-native-reassign",["164"],"no-negated-in-lhs",["165"],"'Helmet' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["164"],["165"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.","ArrayExpression",["166"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'accept' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["164"],["165"],["164"],["165"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},"Update the dependencies array to be: [doFetch, userID]",{"range":"169","text":"170"},[1302,1311],"[doFetch, userID]"]